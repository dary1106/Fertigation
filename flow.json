[
    {
        "id": "de1fac70ffff56ff",
        "type": "tab",
        "label": "UI Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "76d35c42.db5f64",
        "type": "tab",
        "label": "UI Setup Conveyors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3c8c08fb.d28dc8",
        "type": "tab",
        "label": "UI Setup Flat Fillers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f463037c.8482c",
        "type": "tab",
        "label": "UI Setup WaterGates",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d0dd21499ec263d9",
        "type": "tab",
        "label": "UI Recipe",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b14319c3.981d58",
        "type": "tab",
        "label": "UI Faults",
        "disabled": false,
        "info": ""
    },
    {
        "id": "772cdac6.5f6944",
        "type": "tab",
        "label": "I/O Map",
        "disabled": false,
        "info": ""
    },
    {
        "id": "20d1a20.528db5e",
        "type": "tab",
        "label": "UI Calibration",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fa6624f0a3e80cb9",
        "type": "tab",
        "label": "UI Lines",
        "disabled": false,
        "info": ""
    },
    {
        "id": "40327a72.0b3544",
        "type": "tab",
        "label": "Real time",
        "disabled": true,
        "info": ""
    },
    {
        "id": "60229619.6bc748",
        "type": "tab",
        "label": "UI Setup Hoppers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aa8dab55544f6dda",
        "type": "tab",
        "label": "UI Chemicals",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8696637e2f6b1b8d",
        "type": "tab",
        "label": "UI Main",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bc5fdcaeb0f4b277",
        "type": "tab",
        "label": "Real time",
        "disabled": false,
        "info": ""
    },
    {
        "id": "87e454f5.ad3e68",
        "type": "tab",
        "label": "Logic HMI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "59ce0e79908aaccb",
        "type": "tab",
        "label": "Modbus",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f4743b656a3d24b5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "33cae0b5c30bf9f1",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "bf168605.003008",
        "type": "group",
        "z": "60229619.6bc748",
        "name": "Hopper 1",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "58427d2d.fcd224",
            "3ae700f.9bd69",
            "fe4b534b.509be",
            "9c26e4c3.eb4ba8",
            "2832b695.962d5a",
            "b39e020f.6076b",
            "fb009e6d.da1b5",
            "16283072.9eafc",
            "3a49b86e.1d2228",
            "e987ff8b.e33b5",
            "6741cb69.b888d4",
            "72593f7a.03115",
            "37b4e20c.6ccd2e",
            "8edc6800.a55ac8",
            "bb1a75fe.33fa68",
            "403f8554.04661c",
            "550437b4.00c838",
            "873a0ad2.c144f8",
            "72c91b42.7bd514",
            "62c1e52f.025acc",
            "b03f5740.bf0308",
            "d162f483.fc11d8",
            "c27c9c67.88071",
            "fd8fe2d9.072a1",
            "65e7eae7.b2b7b4",
            "c0aaaeb1.c52a9",
            "12dce203.54929e",
            "3fe25cd350043d94"
        ],
        "x": 74,
        "y": 59
    },
    {
        "id": "812721b0.1056f",
        "type": "group",
        "z": "60229619.6bc748",
        "name": "Hopper 2",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "721db3a.1322d4c",
            "b3d8ca0f.1ab9f8",
            "c84de0f9.a1095",
            "6868ca28.935184",
            "f4e3e0a9.98511",
            "9952220c.193bd",
            "115afd4b.a96953",
            "c73c5fa8.7d418",
            "1157a229.1d6f3e",
            "5063d30c.c0279c",
            "808a6783.fbe1e8",
            "7b471557.e24bfc",
            "89f4977d.c97288",
            "d56e91d3.57b55",
            "dea6ad04.9a64f",
            "d6a1b9ba.fc5fb8",
            "709640f1.b20ab",
            "6ccaa196.8d4d1",
            "87db994a.ff5ea8",
            "4e52b4a4.ce652c",
            "335409c.584c0f6",
            "c9433e01.cbaad",
            "e0bb6c55.ba347",
            "923ed66f.554278",
            "cac48189c9f8cb2b"
        ],
        "x": 74,
        "y": 359
    },
    {
        "id": "3b4f240b.c1ea0c",
        "type": "group",
        "z": "60229619.6bc748",
        "name": "Hopper 3",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b01abbbb.a68508",
            "976f5d7c.b8312",
            "8a33975b.029068",
            "5b77ee8c.fadc5",
            "db1a7c14.e1c06",
            "bd8b7c7c.0fd24",
            "152ba5ff.ce3c3a",
            "2b740b92.c93934",
            "ea53a843.4f0128",
            "eac29457.dfebb8",
            "e120a1d.f85ae6",
            "d981047a.ca4fa8",
            "42c7bd2b.66e9a4",
            "e1b27ac4.d79f68",
            "ccda587c.76bfb8",
            "4f34cb8d.8392b4",
            "bdcf2797.770658",
            "3492cb60.73eca4",
            "f60693b6.e7487",
            "6d9e1af4.e852a4",
            "3e7d7d4c.8cf632",
            "4c90b03f.9b6c4",
            "b7ac218a.cbff1",
            "d2330d01.7c865",
            "5c95b001da62f9ec"
        ],
        "x": 74,
        "y": 659
    },
    {
        "id": "8df4b86f.abcd28",
        "type": "group",
        "z": "60229619.6bc748",
        "name": "Hopper 4",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "feee9d31.006dd",
            "53d8a222.26ed1c",
            "e75ed694.ea1f38",
            "a1d11a2b.0c98a8",
            "c4e5f305.0f53b",
            "2a45ec9f.b82844",
            "c6355d84.c1d8b",
            "eddbc22d.e0809",
            "83f02752.04b7e8",
            "8eca4a6.2de75b8",
            "9a9b40ff.be0e9",
            "abb12a73.e15d38",
            "2cd4868.cba757a",
            "9734087c.f94998",
            "70acbfcb.3abd5",
            "92901de.5a626e",
            "be5d678f.f36d48",
            "b6ac4003.fa4f4",
            "8d22c50c.1aaad8",
            "1478a060.d7f8c",
            "da18dc86.abd21",
            "f12cba7e.a81688",
            "d7af4d4b.1023",
            "8ad7d196.297dc",
            "3b97a8c8181c6e4b"
        ],
        "x": 94,
        "y": 999
    },
    {
        "id": "e2586aa9.e502f8",
        "type": "group",
        "z": "60229619.6bc748",
        "name": "Hopper 5",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b21c4eb9.c630a",
            "2c6cff69.3db59",
            "cc3ceea4.cbe39",
            "9cf248f9.a76008",
            "d1473903.4226f8",
            "da636b2f.d21508",
            "2297fa3.6db3406",
            "5f6e890b.149ef8",
            "ecfdf61c.0ac038",
            "f3e4c05.7afe74",
            "84828a72.493cd8",
            "b35a47dd.3096c8",
            "d5ef9869.43df88",
            "85e167fd.35e688",
            "64826896.6b2b88",
            "1f3ed156.afb4bf",
            "315b780d.d60158",
            "36a914c6.b6006c",
            "c6b8c92d.a58448",
            "ad758f7c.9839b",
            "5fbe6c69.868174",
            "fc2ec61d.ce8a28",
            "5215ddc3.bbe034",
            "99388d84.1fc1f",
            "49788524.406c3c",
            "c00d7bd9.b53358",
            "de51b0a.135dd5",
            "7b791e120ee7e63e"
        ],
        "x": 94,
        "y": 1299
    },
    {
        "id": "f364af39.9d2f7",
        "type": "group",
        "z": "76d35c42.db5f64",
        "name": "Conveyor 1",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ee8353cb.5f853",
            "89a2db7a.fc50c8",
            "f5a51d25.13a72",
            "44325c71.2715c4",
            "56a8b3cf.28abcc",
            "acc4077d.10ff28",
            "9654cca4.fac44",
            "171e8507.afd9ab",
            "1aca3b9a.aa3434",
            "6b1dc9fe.5ccb48",
            "359fe311.b919fc",
            "5728627e.c3966c",
            "33376198.26b9fe",
            "257a0083.a4e8d",
            "a2d8ed69.8835b",
            "b814a03e.a8aae",
            "5fc4105.b7e1df",
            "afb38704.e092d8",
            "c7968e29.bafcb",
            "d1269ce3.e23ee",
            "e6cbdf3c.a54c6",
            "ba7d191b.6604f8",
            "393a92cb.dfba9e",
            "ea6d3cd2.6b801",
            "a9ab738d.aea96",
            "9540e00.18aa62",
            "6653639a.5a06ec",
            "7d8b0c57.912df4",
            "3d11b235.a6b6ce"
        ],
        "x": 94,
        "y": 39
    },
    {
        "id": "f755b3cc.dba84",
        "type": "group",
        "z": "f463037c.8482c",
        "name": "Water 1",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f6da62db.8cebc",
            "56067aff.543564",
            "54073fbb.b6892",
            "203b16d7.9bb62a",
            "19a405f2.1effea",
            "7027e3b7.a8ba9c",
            "f2b39d96.66715",
            "1f4ce9e9.96bb86",
            "6c772f6a.620e2",
            "c7dce854.7ff8b8"
        ],
        "x": 54,
        "y": 939
    },
    {
        "id": "2425a841.054778",
        "type": "group",
        "z": "f463037c.8482c",
        "name": "Water 2",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "82ed2e44.dfdf",
            "4f075b38.89c454",
            "ebae46b.3ce6bb8",
            "f1feb7db.6aeba8",
            "ed8e91e.f52257",
            "32a2e19b.d6deae",
            "5c8c5ac2.900c84",
            "e2ae9d19.1d73e",
            "ad392a26.8a2c78",
            "be5e21e3.d5045"
        ],
        "x": 714,
        "y": 939
    },
    {
        "id": "5e32e7f9.f5e928",
        "type": "group",
        "z": "76d35c42.db5f64",
        "name": "Conveyor 2",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4932a991.a80e78",
            "5df2eb8.e07b114",
            "c2385d1d.e9c03",
            "bfabd0f0.d9d56",
            "fd5f7701.9c2898",
            "a3d3c1c2.aabb2",
            "879a89b2.a485a8",
            "94554160.a3e0e",
            "8f8f8058.af683",
            "1a9e032f.0f6f8d",
            "664df0b2.9c82e",
            "cea603c3.8142f",
            "8f9ba8b7.b7e938",
            "c84fa9c.665da58",
            "7aa457f3.fbe448",
            "66743021.42d85",
            "8bf0e52e.b52828",
            "e5cd2e10.ad4ec",
            "11031eff.6cc2a1",
            "607de52a.06e15c",
            "36b6ae90.5a2542",
            "298204ff.69465c",
            "618fd4fe.15525c",
            "30c15cf2.689074",
            "c4373b2b.2effd8",
            "130dadd0.e45302",
            "b9283fe8.70936",
            "8664b8bc.dba5e8",
            "cb587c38.f9aa"
        ],
        "x": 94,
        "y": 399
    },
    {
        "id": "89af0a97.014f08",
        "type": "group",
        "z": "76d35c42.db5f64",
        "name": "Conveyor 3",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "14ac660f.b2a1ca",
            "82c05204.efa9d",
            "b9f8605f.6e462",
            "c427f3fe.7b903",
            "aecfcfa6.71f5e",
            "812d8fd8.09e01",
            "1f75aa62.1085d6",
            "57954394.42bccc",
            "a8efc5b6.f48438",
            "5f689700.bb0748",
            "792c2d1b.6497e4",
            "880681c1.9088b",
            "f2e5fb97.8e1b48",
            "3d086921.cd9e26",
            "ea22784b.b4f788",
            "b1075acc.a938b8",
            "cde8072d.cc2818",
            "7332e220.47d08c",
            "1ffcff43.2c8d01",
            "f8673f29.59c0e",
            "486c6360.a7351c",
            "f84c9490.96d548",
            "367d850d.83d84a",
            "f6429e70.f18f5",
            "4c2cbd18.db5fc4",
            "8ccc546d.b787e8",
            "e446a649.681828",
            "71967ef9.16cdc",
            "85d4cbd3.a3dfe8"
        ],
        "x": 94,
        "y": 779
    },
    {
        "id": "73e5e255.57fe8c",
        "type": "group",
        "z": "3c8c08fb.d28dc8",
        "name": "Flat Filler 1",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4572697e.f7cf38",
            "a5ffa498.ed7cf8",
            "c9535d9.247b6a",
            "d39e68f6.15bb98",
            "23cc7dfa.6ad242",
            "3e404b9c.e60d14",
            "9cd8f303.0cbe6",
            "64b1593f.93fac8",
            "3b1d14e8.c095cc",
            "38686a62.6c1316",
            "884084.97c65f8",
            "735a0098.0112",
            "230d0e4.c3212f2",
            "b5065d89.24643",
            "8251b66b.4c6fa8",
            "b50c8905.01e648",
            "d72a6921.5f8208",
            "30715c4f.9d73e4",
            "c1d27a4d.50a688",
            "76dc670f.879768",
            "33847909.e0fb26",
            "7aa0dc80.7720d4",
            "b637fbfe.70bc08",
            "11a89dbb.6e1012",
            "620ea38b.c11d5c",
            "c165e765.c65b48",
            "438405c2.9a9d4c",
            "ab11a254.34f18",
            "e8444a01.baef98",
            "66d0284b.a4f2e8",
            "9a6b9e2a.650ac",
            "7f0ce707.ef5148"
        ],
        "x": 54,
        "y": 79
    },
    {
        "id": "4fb353d9.a3f99c",
        "type": "group",
        "z": "3c8c08fb.d28dc8",
        "name": "Flat Filler 2",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "198aa3fa.c1c64c",
            "4b96ca5a.d5e4f4",
            "82b9a3a1.c90c9",
            "a28874d7.ac6ab8",
            "444a42c9.b2c0cc",
            "866daac1.d971a8",
            "9d1f58be.d483a8",
            "577dd298.c6dd1c",
            "4426691d.44e5c8",
            "25e9da6e.3ee6c6",
            "c7c8f14c.471cb",
            "b367dea2.d9a16",
            "d685fd44.7f4ba",
            "57278a66.340ef4",
            "bfdd8c7d.3f99a",
            "12acb1f5.9adabe",
            "b2e7483f.795ec8",
            "c56a90ca.7d078",
            "a30e2ba9.648328",
            "9e962e0.11ebdd",
            "7f6cd3ab.98327c",
            "ffe3bf12.cc86b",
            "6c46d1da.27b36",
            "451a35ae.390b1c",
            "b7c6eb3d.7c70f8",
            "79518717.a0eff8",
            "66e6df51.7cc17",
            "e0c819ff.1dd4d8",
            "decd7cb1.e924e",
            "2b3cbc2b.484fe4",
            "873e48e6.18a6c8",
            "d58d24f3.497f08"
        ],
        "x": 54,
        "y": 379
    },
    {
        "id": "6a104cad.23b5e4",
        "type": "group",
        "z": "3c8c08fb.d28dc8",
        "name": "Flat Filler 3",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a0ab8be4.90f1a8",
            "d598c741.a70d08",
            "e4c70f7.efc17f",
            "3d3817ce.9c6308",
            "743d948f.1f966c",
            "b4cf45fb.e0f4f8",
            "31b459e3.5c1d26",
            "2605b547.d7d21a",
            "cfe6cfb0.de6ab",
            "189f19e3.df9086",
            "2154dbed.397724",
            "7c86cc8b.1d9e04",
            "740cb054.4906d",
            "bb57d568.0003e8",
            "3a24f1eb.c5c1be",
            "9097ea24.388448",
            "6f03ba50.ec6a34",
            "ccff4d61.cee9a",
            "df0ff2fa.07981",
            "d726bd89.d4f0f",
            "b1765773.0cc1e8",
            "f46abb24.805af8",
            "4f039e14.ef9e4",
            "e207dcb2.fb406",
            "8f2edc44.c661d",
            "8c6291c3.0aec7",
            "8cad3120.364d",
            "278aba4f.62aae6",
            "e7405c98.e7c44",
            "54b67729.a52cc8",
            "d2f098c2.3ae498",
            "48249b9d.7c4a24"
        ],
        "x": 54,
        "y": 659
    },
    {
        "id": "6e355e97.be70f",
        "type": "group",
        "z": "3c8c08fb.d28dc8",
        "name": "Flat Filler 4",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1260c912.56ad97",
            "54ad3c1e.7dda24",
            "17796aa4.520045",
            "dfe93138.9aa3a",
            "ed3eda4b.708c78",
            "16d14248.f68f8e",
            "e73fe439.b8c3a8",
            "dddffc58.8465c",
            "2d341030.7af6",
            "282223b2.6b4d4c",
            "c125012.fcafc",
            "b6455325.341fe",
            "4359ebf2.da1194",
            "c9552a78.ca7b38",
            "58f593a6.99389c",
            "d7333a8d.5063e8",
            "d356aab9.4d31d8",
            "1d294433.7c82bc",
            "11de1fc0.314df",
            "4806228a.9af8cc",
            "3bcf4ec4.f2eec2",
            "855ab5ed.a265d8",
            "33a51d1b.2dcd92",
            "a69b2821.231c18",
            "292a9b79.009f44",
            "9f4b7a22.55d1d8",
            "c6ac2ce1.d4812",
            "dbb36704.cc8698",
            "980b750a.905528",
            "d27a0d23.b2039",
            "f9a39b67.abe8e8",
            "cd6f6dcd.a06d4"
        ],
        "x": 54,
        "y": 939
    },
    {
        "id": "b8af4779.5bff48",
        "type": "group",
        "z": "f463037c.8482c",
        "name": "Gate 1",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f3e155d8.3a4b48",
            "12fd710c.476f7f",
            "f4178c2a.23995",
            "347dcba5.fa0dc4",
            "50763c7a.ac4444",
            "da6e5162.302a6",
            "67b816a7.823c98",
            "f297beb0.8e899",
            "ff0d50d4.46578",
            "e58ec5d0.42cbb8",
            "762740d9.d38a",
            "e19213c.53c2cf",
            "eba1f327.53bbc",
            "6700e306.09870c",
            "7eea3de5.17ecd4",
            "9c903f0b.5949c",
            "200c4f85.cc6c9",
            "99c7c44b.1e0d38",
            "baaf7a07.0eaa98",
            "7ccb72bf.caef5c"
        ],
        "x": 74,
        "y": 39
    },
    {
        "id": "733dfd4b.dbe184",
        "type": "group",
        "z": "f463037c.8482c",
        "name": "Gate 2",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "98fbeeb1.8a961",
            "bb41de2f.d418d",
            "f63c65ab.164d18",
            "a017b9db.3431f8",
            "2ecabb4a.765c14",
            "a91044bb.c09948",
            "878cd084.49e95",
            "c03dcc77.33e9c",
            "eb683405.de5148",
            "6a19f2da.d2a73c",
            "8375b13.858375",
            "f8d37936.02f058",
            "78651311.8a2ddc",
            "f6cb38ed.0359d8",
            "5fe8b5a3.2dc9ac",
            "c76f36dc.d26ee8",
            "e6da1cfc.d4cdc",
            "9cfc357a.f52338",
            "1398e2d4.6a53dd",
            "a9b6724d.fc0e3"
        ],
        "x": 74,
        "y": 259
    },
    {
        "id": "5556813e.33673",
        "type": "group",
        "z": "f463037c.8482c",
        "name": "Gate 3",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e4ffb365.c388a",
            "3b3f8300.74148e",
            "4492dd37.6073a4",
            "df891140.69598",
            "bca7fe77.3ddc8",
            "8738d725.979558",
            "2cb33f2e.0f31d",
            "cbe9029e.0c31e",
            "c3cf5a49.665968",
            "bbac1367.58f31",
            "5720f1.68545f1",
            "f2d5ca92.6a7428",
            "b1a21c86.8f7d1",
            "8bb3bf91.fcdc6",
            "a77c013b.3402",
            "6c4ea681.95ce18",
            "3b3029e0.caa786",
            "6cfd7077.9aabd",
            "8a65f9bb.c6b1a8",
            "c103324f.768ea"
        ],
        "x": 74,
        "y": 499
    },
    {
        "id": "bf7a0892.314b58",
        "type": "group",
        "z": "f463037c.8482c",
        "name": "Gate 4",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9a796ce.56c279",
            "cfc89d62.da84f",
            "d7bf0223.c9161",
            "587b6c80.c18424",
            "b9fb846c.c55ee8",
            "96997aee.9d2c58",
            "32d24c3c.2e7804",
            "739755b0.44cb4c",
            "e5ea0d49.787eb",
            "8c46f3e.6a3541",
            "42fa81c4.5b45e",
            "39a5f2ce.4fad3e",
            "2c5ed2ae.d6d92e",
            "18cb201b.4749f",
            "1a8b645d.228ddc",
            "f9b9b7f7.fa2b68",
            "1ddca9fe.be3b36",
            "2a968f9e.bd30b",
            "f0d4f78f.4cbf88",
            "28a421e6.a3c5ae"
        ],
        "x": 74,
        "y": 699
    },
    {
        "id": "e9a961e5.4915a",
        "type": "group",
        "z": "20d1a20.528db5e",
        "name": "Tables",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "165a8baa.283914",
            "f0ad4618.350e28",
            "16547fe2.312da",
            "5e339c7.2f03464",
            "ec6fa5ff.c56458",
            "15c3f74a.9be859",
            "9229ce73.e9fcc",
            "61dc1957.7995b8",
            "f16566a7.e04458"
        ],
        "x": 84,
        "y": 19
    },
    {
        "id": "226c9aea.5d44f6",
        "type": "group",
        "z": "20d1a20.528db5e",
        "name": "Manual",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ebe44ce1.b8e39",
            "337d129d.388b3e",
            "b54e210a.1d462",
            "eadb92d9.e6e96",
            "40ac8e3f.3177a",
            "19445b67.4ce0f5",
            "a4822934.f6e958",
            "dd54f8bc.dd3cb8",
            "c981fc9d.0d8ae",
            "69230173.a994"
        ],
        "x": 74,
        "y": 159
    },
    {
        "id": "73c5b370.8c956c",
        "type": "group",
        "z": "20d1a20.528db5e",
        "name": "Manual Control",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "b1aa37d4.52a778",
            "37e0b68e.bf946a",
            "c25e406a.5cbe2",
            "a36b32ae.08121",
            "83d2c9c6.4b4498",
            "30b4c220.e99d9e",
            "a41bbe2f.57bd2",
            "e1dfd8ea.fffd58",
            "7ae9ba7e.e11304",
            "54d5da5a.b19834",
            "b963ee62.0bacb",
            "15d6f3f1.ab8b7c",
            "18145f6a.2a14e1",
            "d2a59bbe.fbbde8",
            "873c0269.04764",
            "e656d201.871e",
            "36fce0af.f503b",
            "89fd7fac.bb658",
            "16ff2fed.2b43c",
            "68a05bef.dbe7f4"
        ],
        "x": 74,
        "y": 319
    },
    {
        "id": "71f4fc5cdd6fa5e1",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "50f98a1fac9e57a9",
            "dcb83891445e3ea8"
        ],
        "x": 74,
        "y": 1999,
        "w": 292,
        "h": 82
    },
    {
        "id": "35c1c4d8f6876131",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "User ",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "72271f4b0d0ca5b2",
            "592921b18296dcff",
            "ddc1ca644b4ea6d1",
            "c11add2dca685276",
            "3d871d8eee51d972",
            "c33003255a976e77",
            "eb126f442652a19e",
            "63159b98727fcfca",
            "2c2b56eed2caa11e",
            "ebd130ff4e08c32b",
            "d622c11a0c335128",
            "b16e8a8adfa8e98b",
            "6e5bb35a1156b9c1",
            "19574f598fb6a74a",
            "e01ffdce5d16bd8a",
            "7cbc9d6efdf5e53f",
            "944f5de46b3e660d",
            "7d92d8e7c3957498"
        ],
        "x": 74,
        "y": 179,
        "w": 892,
        "h": 162
    },
    {
        "id": "0d3c11a0971dddf5",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "General",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "10b314fcc297872f",
            "9255dbdb5895ff9d",
            "99cce7a3cfa48706",
            "8d1e84af64a62ef9",
            "b19fcf8d07a7dcbf",
            "fc9fd18df7537d4d",
            "2d1fbd881715960f",
            "7ae4f131a044efa0",
            "6f8951f8ff30c001",
            "1eebb9419f820fa9",
            "e8bc3ae976348b45",
            "447229192a17fd03",
            "55afd99d32aab8a0"
        ],
        "x": 74,
        "y": 419,
        "w": 952,
        "h": 202
    },
    {
        "id": "7ae70b400595bed3",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "Alarm",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5e0632e3e0f0e63e",
            "c138d0a9d6f9d54e",
            "065b947f6f17b6c9",
            "5d07f75e6876f397",
            "654f8095af4e5c1e",
            "d7c7cb1bbf69cb0b",
            "200907da747d6057",
            "074b92dea4de775f",
            "459bd26e512b19d9",
            "650e50fc528cdc53",
            "5d07ed769562585f",
            "b166853b279f4273",
            "cf8b08b7daac2c80",
            "b22c00c4a89f8f50",
            "f3b120435b891362",
            "13173d7e447f274a",
            "0bfe479293789de2",
            "63d7c625e29bee0c",
            "f9c7cbcfe3d53059"
        ],
        "x": 74,
        "y": 639,
        "w": 892,
        "h": 282
    },
    {
        "id": "35782600f3808763",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "System Init",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "617c8b9761cd8388",
            "0e24669ce5cfa381",
            "6d6de640f131de10",
            "cf67309ab2fd24c3"
        ],
        "x": 74,
        "y": 19,
        "w": 452,
        "h": 122
    },
    {
        "id": "271ea4c3a934fc40",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "Buttons to elements config",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2f26ed50d0922614",
            "57f745056509aca2",
            "bbf38c88170e6435",
            "131a70f38349e042",
            "b021feefbe168350",
            "b075403b93dc15d6",
            "73292904e6a5f530",
            "55391f9bbf86696e",
            "9319fa7f5541f436",
            "cc4c357c67ac6814",
            "b9c314e53130d09b",
            "8657b4aaa7670dce",
            "0266ab6c5274d12e",
            "73f5a35fa13e0e19",
            "9e4cdb0ec9cf6cc1",
            "f37e4c68019088c4"
        ],
        "x": 74,
        "y": 1339,
        "w": 572,
        "h": 382
    },
    {
        "id": "37cd45ca9cc094c2",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "Save configuration",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fc3e196c4e0d3cd2",
            "4138c760b84f7088",
            "2b3015be862cece8",
            "112ee44ff773d69b",
            "854d3ced15e8282c",
            "b66fbb60797e9dc8",
            "dcdf9f5341f14a6a",
            "12e9d0f195f37589",
            "6f08f27ff87dd368",
            "5752afd7eea48156",
            "e04534f7fb99cb8c",
            "361de61207ad3066",
            "210977ef4d824ed7",
            "6e880a154103e303",
            "81c8028f83d4c809"
        ],
        "x": 74,
        "y": 1739,
        "w": 1112,
        "h": 242
    },
    {
        "id": "9709101fcf3468c9",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "3ffb82316bbb357b",
            "3a1f41139af2e3a2"
        ],
        "x": 674,
        "y": 1999,
        "w": 292,
        "h": 82
    },
    {
        "id": "1fbb4f6ae8c2a44f",
        "type": "group",
        "z": "de1fac70ffff56ff",
        "name": "Elements",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5f676fa47a191030",
            "3c4b77be0604ba17",
            "be04dadd9ba80430",
            "b592c5103513be5c",
            "b5cb01e6d0146433",
            "4244a1bf5e130abf",
            "b0a9a6b8f17d9d13",
            "fe175a09939565f9",
            "c1b621f3d71cd994",
            "18cfa3605bed2190",
            "27cf5ccccdae520d",
            "490d026198d904c4",
            "0ce7ae75666eed55",
            "7a4fd264900aab70",
            "8154d2e2ad96164a",
            "9789ca10f00b4108",
            "9f7ec48af7263900",
            "90e3af2802c5a45b",
            "28a6d96b2a61258d",
            "1392c386e170cf91",
            "5d68e41585d43001",
            "205f103f59b47314",
            "2796949b490395d9",
            "ea750b13bae54b5a",
            "da13c1187c9cb921"
        ],
        "x": 74,
        "y": 959,
        "w": 912,
        "h": 362
    },
    {
        "id": "4207d5e8985a7ae0",
        "type": "group",
        "z": "d0dd21499ec263d9",
        "name": "Save configuration",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "909fa6fe8dd46b31",
            "b99cc98c76717950",
            "65481ae18b96a604",
            "2c6e3fc0f7ebe293",
            "a61dd4dbb3337816",
            "d4bd65147b3d4933",
            "bb148ddcaf32c6e3",
            "ed67bd9dbf5f2b2e",
            "d5f184576811e8f6",
            "cdaf66da41cb7f71",
            "22f51116e2515fb3"
        ],
        "x": 174,
        "y": 1359
    },
    {
        "id": "d087d05fc3028b04",
        "type": "group",
        "z": "aa8dab55544f6dda",
        "name": "Chemical 4",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "13f4461b2073737b",
            "768fc2001f7f9ffd",
            "7cc3ec8c3ea13101",
            "eecea953ed0ff4a2",
            "6a2dfd95e0baa3fc",
            "ffe61b29f122089c",
            "e3cef8ac6fa3b559",
            "6e1483320562f5b2",
            "b431b2cccc81e59e",
            "287cd6f46889edac",
            "a9bf2b0ea87e90a2",
            "a9e02e4da5624df0",
            "b0204b6212097f0d",
            "1bae3bf51995b0f4",
            "8e5ca7898694f712",
            "e9c83daf18449e7c",
            "ebf326b5d359decf",
            "6970ec65b4d75dab",
            "274c1220c53ebc43",
            "bc65445d988b2375",
            "3f9898cbf31cbf0c",
            "394c75b81f9bb117",
            "5003df1fa47c08ce",
            "6e30d4c5e677cbca",
            "428ee0f659dffceb",
            "5f4ece7dd261c917",
            "0dffdff64c0679c4",
            "acb4f28501147131",
            "c88de8898c9e6f55",
            "92b51102e4810053",
            "c408c3d9c618c13b"
        ],
        "x": 94,
        "y": 1079
    },
    {
        "id": "70e8487e7c6323dc",
        "type": "group",
        "z": "aa8dab55544f6dda",
        "name": "Chemical 1",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "8eef0f5c629d146f",
            "4fdaadfab8872936",
            "da5d8c96d2468f9b",
            "19bc5ab82f83a5ba",
            "2ee31d6bfa2168ee",
            "39884fbc8594c1bf",
            "f388b74df3979968",
            "99b29fe266e28aec",
            "9a8b268885479dad",
            "084ed886360077ba",
            "75c9e6bb6b59a15d",
            "70dd3af57966569c",
            "8f02f63a21a3e52d",
            "5a3d8152daec7922",
            "d0f1d34449ad21fb",
            "1bba7f803823dce0",
            "00b784d0df9d8b45",
            "57d291d489c5faa0",
            "b8af89610f2708e4",
            "8c2d49681740a0af",
            "c768cf680622534a",
            "d228108bb0c7e1df",
            "b5407181a3554174",
            "bb3ae6a9cc29588a",
            "7195cf3a8313471f",
            "af2ae8d83f431ef9",
            "f65810028e9ec21d",
            "3d31526c3fa6c299",
            "9144e8ddeac69911",
            "489bfc79cff53430",
            "b876a556b406f7f5"
        ],
        "x": 94,
        "y": 39
    },
    {
        "id": "e6f6f439ef6ccfe8",
        "type": "group",
        "z": "aa8dab55544f6dda",
        "name": "Chemical 5",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "06094b035d1f5fc8",
            "4aecee364a04208b",
            "8631014f2c035bde",
            "b9801d57c7f1f066",
            "26023209d7878894",
            "4f46b1e1a5fcdfd8",
            "9453b7c9461407a2",
            "4627344a99f1ec26",
            "5b1c2a566cd556d9",
            "9a3e0e4fc7a08478",
            "5f8c74c0b1ef0d2a",
            "5eefab025d3f8f1e",
            "e9957651684daaaa",
            "8bc4949e250a3dea",
            "e7dc416df773b287",
            "70b7f94f1b394225",
            "4903ca206916fc0f",
            "cf46609ab152cc44",
            "a8ce558ab17f8d78",
            "9899383120754135",
            "e3cf9513ca3bf42c",
            "2609a73913bb53ba",
            "8366f83274c8f958",
            "4042b8d36ddd3e38",
            "bb080658bd79b104",
            "fa2fa8327bd2e0ba",
            "df5e6adcd427d833",
            "9adfd8cabceace4e",
            "adab2066882cfdec",
            "8db530aa9f507c51",
            "b2db8a9e0bc40605"
        ],
        "x": 94,
        "y": 1439
    },
    {
        "id": "04c01ffdfeba6735",
        "type": "group",
        "z": "aa8dab55544f6dda",
        "name": "Chemical 2",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7f4aba0dd6d8ac0b",
            "93eb9b9e899eade9",
            "2dead90ef477b71a",
            "d0af2c5502e3427a",
            "37af381d5f6c7c9c",
            "fba3d4d8dafe12ed",
            "1abe440f0becb3fd",
            "6c6222f1da20c92c",
            "dd688ce60c27d09c",
            "d1fa2153ccf6a379",
            "65eebecb5256b248",
            "8b7c6455549624fe",
            "e3791699f374de33",
            "2f814b75c007f129",
            "b0234a16d404558c",
            "f1ba6a57c00b2133",
            "fb18bf9c07285aa3",
            "0c2d6426d5f1303b",
            "66671d107a6e6367",
            "2f95881f867cc163",
            "c09af52345dbf362",
            "9ef0bcf8b3a81477",
            "88e898d3e7ba79fc",
            "b6733442e7a72f3b",
            "b69bb34e1ab91519",
            "a1d1f08c290913b0",
            "689ac633aad7fab6",
            "63718016af245c17",
            "6d3c5e7237d89093",
            "aac83ee6ee7a23d4",
            "34e992cfd731be9a"
        ],
        "x": 94,
        "y": 379
    },
    {
        "id": "ab861f9a30ba4872",
        "type": "group",
        "z": "aa8dab55544f6dda",
        "name": "Chemical 3",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f4d08523b57c888d",
            "e1bcf5cc2aa3f459",
            "754ee403306d5120",
            "69b159f2d9dadd78",
            "e4e62d120c808c4a",
            "7b7fc53286a6687e",
            "23644a3b82ce825e",
            "aa494b5fe22f2a5e",
            "ecc956d9b9eac330",
            "61656781d05bb7d3",
            "f7309850d80653f1",
            "9cd962b7c46df5a2",
            "f2821c41c2435aa7",
            "5fdbf66d59404582",
            "a8ebd824552fbbc7",
            "8d9f113d8c76f042",
            "14bdd9e8fa19e7c8",
            "cba10cfaca3c60bc",
            "65c0f69ea0bb460b",
            "509ad3b0dec90c34",
            "427c493444b71ab8",
            "a7f98a076077c17f",
            "f0e334fb7274603f",
            "a7b47f09e5c872bc",
            "811d92cf4949eaaa",
            "4f76a9eb67413d94",
            "a8e90d51a4cfbb7a",
            "0f02bb76fd2143af",
            "d751d88ead449788",
            "280b96de29fb6ad4",
            "a98c31a0c7ae75bc"
        ],
        "x": 94,
        "y": 719
    },
    {
        "id": "42241ea0.520dc",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 33,
                "sy": 39,
                "gx": 6,
                "gy": 8,
                "cx": 0,
                "cy": 10,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f2cbce8a.d212e",
        "type": "ui_tab",
        "name": "Main",
        "icon": "fa-play",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dd4e0296.f45f7",
        "type": "ui_group",
        "name": "Elements",
        "tab": "f2cbce8a.d212e",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "9ae2ed33.959bb",
        "type": "ui_group",
        "name": "Info",
        "tab": "f2cbce8a.d212e",
        "order": 3,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "bc6209d1.39d1b8",
        "type": "ui_group",
        "name": "Buttons",
        "tab": "f2cbce8a.d212e",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "79e6653a.ad26ac",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "fa-cog",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d25cf2f3.7729d",
        "type": "ui_group",
        "name": "General",
        "tab": "79e6653a.ad26ac",
        "order": 2,
        "disp": true,
        "width": 30,
        "collapse": false
    },
    {
        "id": "45fbf332.fe716c",
        "type": "ui_group",
        "name": "User",
        "tab": "79e6653a.ad26ac",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false
    },
    {
        "id": "7542aeb3.6f0b8",
        "type": "ui_group",
        "name": "Alarm",
        "tab": "79e6653a.ad26ac",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "dc2cf203.70a7c",
        "type": "ui_group",
        "name": "Elements",
        "tab": "79e6653a.ad26ac",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "8a66342d.4d2cc8",
        "type": "ui_tab",
        "name": "Hoppers",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "c223051d.3db338",
        "type": "ui_group",
        "name": "Hopper 1",
        "tab": "8a66342d.4d2cc8",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "67b37b2.cf78a84",
        "type": "ui_tab",
        "name": "Conveyors",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "35a7a6da.d61efa",
        "type": "ui_tab",
        "name": "Flat Fillers",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "a30e0f85.902c8",
        "type": "ui_tab",
        "name": "WaterGates",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "1efd71ae.8a2d9e",
        "type": "ui_group",
        "name": "Hopper 2",
        "tab": "8a66342d.4d2cc8",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "32de7540.2779ba",
        "type": "ui_group",
        "name": "Hopper 3",
        "tab": "8a66342d.4d2cc8",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "bd9c650.e9cfb98",
        "type": "ui_group",
        "name": "Hopper 4",
        "tab": "8a66342d.4d2cc8",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "fa855387.0b739",
        "type": "ui_group",
        "name": "Hopper 5",
        "tab": "8a66342d.4d2cc8",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "3a93b998.6415d6",
        "type": "ui_group",
        "name": "Chemical 1",
        "tab": "c4506a80.0ffb78",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "a01dd0c0.7697d",
        "type": "ui_group",
        "name": "Chemical 2",
        "tab": "c4506a80.0ffb78",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "9405de1d.83ee6",
        "type": "ui_group",
        "name": "Chemical 3",
        "tab": "c4506a80.0ffb78",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "56f6b2c6.8655ac",
        "type": "ui_group",
        "name": "Chemical 4",
        "tab": "c4506a80.0ffb78",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "a0c12ac4.c38db8",
        "type": "ui_group",
        "name": "Chemical 5",
        "tab": "c4506a80.0ffb78",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "4e9f5fb8.33a0f",
        "type": "ui_group",
        "name": "Conveyor 1",
        "tab": "67b37b2.cf78a84",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "d97f995.6541e68",
        "type": "ui_group",
        "name": "Conveyor 2",
        "tab": "67b37b2.cf78a84",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "fe935d7b.39225",
        "type": "ui_group",
        "name": "Conveyor 3",
        "tab": "67b37b2.cf78a84",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "19ec5f4f.cc9001",
        "type": "ui_group",
        "name": "Flat Filler 1",
        "tab": "35a7a6da.d61efa",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "14a65423.d6f2cc",
        "type": "ui_group",
        "name": "Flat Filler 2",
        "tab": "35a7a6da.d61efa",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "7f6b06e4.c2ab48",
        "type": "ui_group",
        "name": "Flat Filler 3",
        "tab": "35a7a6da.d61efa",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c6869ac3.8dcbc8",
        "type": "ui_group",
        "name": "Gate 1",
        "tab": "a30e0f85.902c8",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "825a2652.3a7e88",
        "type": "ui_group",
        "name": "Gate 2",
        "tab": "a30e0f85.902c8",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "7d0b6874.32e1e8",
        "type": "ui_group",
        "name": "Gate 3",
        "tab": "a30e0f85.902c8",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "134123e0.7e366c",
        "type": "ui_group",
        "name": "Water 1",
        "tab": "a30e0f85.902c8",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "ba3e9a12.46c318",
        "type": "ui_group",
        "name": "Water 2",
        "tab": "a30e0f85.902c8",
        "order": 6,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "21bd38e9.a7df98",
        "type": "ui_group",
        "name": "Flat Filler 4",
        "tab": "35a7a6da.d61efa",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "be63bc5b.f83b3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "16701c71.d33b94",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "c8bca4c1.95e518",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "41afbf3f.8521f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "1cfdc92c.c02ec7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "b82bb1cb.3ba73",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "f2748aad.52cb88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "f20fdb70.af7a28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "4654788d.17fe28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "19ec5f4f.cc9001",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "e45baaa0.1c4b18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "c87a08d5.229d78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "1ce1b862.6336a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "2279d5ee.a1a44a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "8abdf968.c05948",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "a625721e.1bf04",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "30823639.04d41a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "fa50f6d9.f5a248",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "fa280461.fb1b98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14a65423.d6f2cc",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "86732b89.442ec8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "e847710e.e0121",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "75429637.78b488",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "71f885da.88606c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "b577fd63.e6619",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "351c51e3.f17a0e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "3ce9ef79.c71d9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "48735483.c56a7c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "d25b2f4d.b102a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7f6b06e4.c2ab48",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "db996883.872368",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "6b7a18c6.053d98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 12,
        "width": "2",
        "height": 1
    },
    {
        "id": "d0577bc5.ab67e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 2,
        "width": "4",
        "height": 1
    },
    {
        "id": "84fe1292.8ca96",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 6,
        "width": "2",
        "height": 1
    },
    {
        "id": "32621bf6.9f4204",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 8,
        "width": "4",
        "height": 1
    },
    {
        "id": "adc8a806.817f38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 14,
        "width": "2",
        "height": 1
    },
    {
        "id": "d382c2a5.7a0b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 17,
        "width": "2",
        "height": 1
    },
    {
        "id": "891f1917.5b66b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 19,
        "width": "2",
        "height": 1
    },
    {
        "id": "770afed9.13f1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "21bd38e9.a7df98",
        "order": 10,
        "width": "4",
        "height": 1
    },
    {
        "id": "8875cfa0.ab0c",
        "type": "ui_group",
        "name": "Save / Load Config",
        "tab": "79e6653a.ad26ac",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "9e7bc9dc.b3f7a8",
        "type": "modbus-client",
        "name": "ATV312",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM4",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 10000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "73867a66.b4cb04",
        "type": "ui_tab",
        "name": "Recipes",
        "icon": "fa-coffee",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3c9e6e0c.e3e802",
        "type": "ui_group",
        "name": "Recipes",
        "tab": "73867a66.b4cb04",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false
    },
    {
        "id": "58ae2623.ce67b8",
        "type": "ui_tab",
        "name": "Inputs Outputs",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "f0ffd542.709278",
        "type": "ui_group",
        "name": "Inputs",
        "tab": "58ae2623.ce67b8",
        "order": 1,
        "disp": true,
        "width": 14,
        "collapse": false
    },
    {
        "id": "da84d080.14208",
        "type": "ui_group",
        "name": "Outputs",
        "tab": "58ae2623.ce67b8",
        "order": 2,
        "disp": true,
        "width": 14,
        "collapse": false
    },
    {
        "id": "ca80507e.04db4",
        "type": "ui_tab",
        "name": "Lines",
        "icon": "fa-list",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7d0a896.984158",
        "type": "ui_group",
        "name": "Lines",
        "tab": "ca80507e.04db4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "4be3201b.402ad",
        "type": "ui_tab",
        "name": "Calibration",
        "icon": "fa-bullseye",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f069bd2b.0faf4",
        "type": "ui_group",
        "name": "Hoppers",
        "tab": "4be3201b.402ad",
        "order": 1,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "be2ad30f.7237d",
        "type": "ui_group",
        "name": "Calibration",
        "tab": "4be3201b.402ad",
        "order": 3,
        "disp": true,
        "width": 25,
        "collapse": false
    },
    {
        "id": "4b1b3cf.7f70cc4",
        "type": "ui_tab",
        "name": "Faults",
        "icon": "fa-exclamation-triangle",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e35b9b72.0c52b8",
        "type": "ui_group",
        "name": "Faults",
        "tab": "4b1b3cf.7f70cc4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "57e82c3.85fd1d4",
        "type": "ui_group",
        "name": "Buttons",
        "tab": "4b1b3cf.7f70cc4",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "2b1e80e6.bccb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "57e82c3.85fd1d4",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "bf8c6c2d.5c52c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "57e82c3.85fd1d4",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "87cf1a27.33a9f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "57e82c3.85fd1d4",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "69d2d8a3.b99278",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "57e82c3.85fd1d4",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "9a61c4e9.5e8128",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "57e82c3.85fd1d4",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "c4506a80.0ffb78",
        "type": "ui_tab",
        "name": "Chemicals",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "898b9ee8.800c4",
        "type": "ui_group",
        "name": "Gate 4",
        "tab": "a30e0f85.902c8",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "e676f638.31c448",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "73a48cef.b126e4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "1e67d118.4d5a8f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "7bc9122c.99294c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "e34c370d.e241b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "d5fa469b.286538",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "929a3548.c62528",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "cdc83715.830668",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c223051d.3db338",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "510aa21d.60150c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "dee4f884.6d62f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3797879.7b50c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "65b45810.ee27b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "9d0bce97.efff3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "445e877a.7e7c78",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "bebe88d0.189ca8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "3ced598c.dd6966",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1efd71ae.8a2d9e",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "f00264e4.b3e698",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "83bb809f.25fbf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e609a32b.7af3b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "ddbf1570.3c4928",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "1b139e42.2f5842",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7f73202.efbd9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a738bcd.f42004",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "7b21e50d.cf222c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "32de7540.2779ba",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "3a8044f8.6994bc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "4a472818.830b38",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "4afc7675.2b4948",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "ff9901f.75a2d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "276660c5.9fe1f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9446583.cdbdc8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba66d0e8.cefe3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "674a4069.6a6f3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bd9c650.e9cfb98",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "3ea29bc7.de28f4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "76310860.3dcd08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d5a4ff3a.98ece",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "af7ea81a.269e58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "593f2048.71552",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a249ec.c3d2b62",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad1845ef.5ce9c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "dad234e8.f60cf8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fa855387.0b739",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "1135cff0.46ac1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "a36e22b8.51c2e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "39edcf18.3308c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "1f1d010c.1e26bf",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "afd7bf12.9eed2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "5e6047dd.f6e2c8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "183a8bd4.01dd14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "a56d5413.3b7718",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3a93b998.6415d6",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "23e5f501.672c5a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad287057.93fba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "58afd1ad.6b779",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "6f85eb34.94da44",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "1f357a51.1f8106",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "922463c5.97719",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "d7ad0cb5.a0fa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "d4a75522.8789e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a01dd0c0.7697d",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "3111f065.063e9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "73e63d2d.2def34",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "bab6293.ad720d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "d45e0d58.527f7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "9659e093.c3674",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "b64dc5e8.ddc438",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "91dbb364.0d30c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "b7400521.f58078",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9405de1d.83ee6",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "9eae0b70.ccae98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "f9af35a0.88af08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f358b128.c01fd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "a8b8f744.f63418",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "54fbd21e.e2777c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c3af581.b722da",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "4366a658.0c0498",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "a096f9bf.f494a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "56f6b2c6.8655ac",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "41041f46.a75ed",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3f7f79be.9c5fb6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "39405a8f.3cc626",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "9f184f32.afc5d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "df2a8ef3.0665f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "30baece1.df5f24",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "954e38f6.270c08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "2e521318.1ed99c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a0c12ac4.c38db8",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "2fec604f.f8a5e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c6869ac3.8dcbc8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "bea46c43.4d07c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c6869ac3.8dcbc8",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "7dc077d9.92a638",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c6869ac3.8dcbc8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec08dc5e.ed43f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c6869ac3.8dcbc8",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "74b5fbcb.857b24",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c6869ac3.8dcbc8",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "45559fbc.8c933",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c6869ac3.8dcbc8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "f5768789.387fa8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "825a2652.3a7e88",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "bd04d81a.922b28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "825a2652.3a7e88",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "260e22dd.d2a48e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "825a2652.3a7e88",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "f0d320d7.c25c1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "825a2652.3a7e88",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "2c2195f6.cdd7ba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "825a2652.3a7e88",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "b6aed6d5.016c28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "825a2652.3a7e88",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b8ef762.d86358",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7d0b6874.32e1e8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "a6330e76.808fa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7d0b6874.32e1e8",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "cc377e83.494b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7d0b6874.32e1e8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "fea1fb29.4cdbd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7d0b6874.32e1e8",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "fed9eb98.a01498",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7d0b6874.32e1e8",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "780a88f1.6d25f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "7d0b6874.32e1e8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "7953d9ff.889fe8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "898b9ee8.800c4",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "320b6467.72604c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "898b9ee8.800c4",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "2146f6d5.1b96da",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "898b9ee8.800c4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "ebe919f1.5d1cb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "898b9ee8.800c4",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "78c41765.5e7638",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "898b9ee8.800c4",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "2a98dd74.409bf2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "898b9ee8.800c4",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "559a83a1.da439c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "134123e0.7e366c",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "5027d08d.36775",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "134123e0.7e366c",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "5e2e32b7.c8986c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "134123e0.7e366c",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "cbf0858c.26d0b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ba3e9a12.46c318",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "ee92d6f6.a9c348",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ba3e9a12.46c318",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "96552d66.d883f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ba3e9a12.46c318",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0fb71b9.3b76b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "7062b3ff.28bccc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "5d7e0f1c.71cc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "e511e47.8d17518",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "63a8b861.ab5898",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 9,
        "width": 30,
        "height": 1
    },
    {
        "id": "b5bcc3b0.d4ea2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "a787a6e3.7fe478",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "3caa424.dfc5dbe",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "6e168395.49905c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 17,
        "width": 6,
        "height": 1
    },
    {
        "id": "35c50ab0.fc72d6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 18,
        "width": 30,
        "height": 1
    },
    {
        "id": "d474fd1f.7a3eb",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 22,
        "width": "1",
        "height": 1
    },
    {
        "id": "d3968a64.7a83b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "a7d0a896.984158",
        "order": 20,
        "width": "1",
        "height": 1
    },
    {
        "id": "c64e2512.e32f78",
        "type": "ui_group",
        "name": "Details",
        "tab": "73867a66.b4cb04",
        "order": 2,
        "disp": true,
        "width": 23,
        "collapse": false
    },
    {
        "id": "c1f9476.b71ceb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f069bd2b.0faf4",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "58259b3.e579364",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "c56be39a.26e94",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "b7be2aee.f822d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "c63e636a.10e85",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9488371.c89b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "7357b2f8.cf531c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 11,
        "width": 25,
        "height": 1
    },
    {
        "id": "39e31b08.bf0c14",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "a5a567de.7e3178",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 15,
        "width": 3,
        "height": 1
    },
    {
        "id": "8967362a.b8a2b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "b0b5a339.3f137",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 18,
        "width": 25,
        "height": 1
    },
    {
        "id": "2238a838.b20b18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "a418426d.85e81",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "82af5809.9d3378",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "69ba149e.b080ec",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 26,
        "width": 6,
        "height": 1
    },
    {
        "id": "aa2d5682.c6b1a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "f9420475.b10d08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "6b756c70.c8b8a4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "e467d39.d471f3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "9c1313f2.a44d3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "be2ad30f.7237d",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "698d5316.12c27c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "3c9e6e0c.e3e802",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "22290ccc.a5feb4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "30ae98.29787168",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "dd6af5ff.092258",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 5,
        "width": 9,
        "height": 1
    },
    {
        "id": "1463c593.5f7cfa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "25d7e1da.97927e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "de69a3df.dcd4e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 12,
        "width": 5,
        "height": 1
    },
    {
        "id": "d8bf5a46.2a0bf8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 14,
        "width": 3,
        "height": 1
    },
    {
        "id": "2a64da5a.39dc56",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "71ab3907.6fd5b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "6918a066.45c4e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "c95627a4.020ed8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "e75e13b7.69064",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 25,
        "width": 11,
        "height": 1
    },
    {
        "id": "5f4c2e1a.f5661",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a23e384.e8e07c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "e7b8f585.c69c68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "4c5993a4.393d0c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "35f9d13c.fbcc1e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 35,
        "width": 2,
        "height": 1
    },
    {
        "id": "c276bd77.eb0fa",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 37,
        "width": 10,
        "height": 1
    },
    {
        "id": "89900efc.b4a27",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "e41e1b60.0cfbe8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 40,
        "width": 2,
        "height": 1
    },
    {
        "id": "ef416305.af3f5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 42,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2a7af74.3efdc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 45,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba2aefcf.ddefd",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 47,
        "width": 2,
        "height": 1
    },
    {
        "id": "fb9633e6.3b583",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 49,
        "width": 10,
        "height": 1
    },
    {
        "id": "17cab2ad.d4d20d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "f7814037.c3ed6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 52,
        "width": 2,
        "height": 1
    },
    {
        "id": "55cff36b.b313dc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c64e2512.e32f78",
        "order": 54,
        "width": 1,
        "height": 1
    },
    {
        "id": "e6d6105d.4388",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": false,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.100",
        "tcpPort": "503",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "",
        "commandDelay": "1",
        "clientTimeout": "10000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "20000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "7ed5de59.b8cb4",
        "type": "modbus-client",
        "name": "Sea530_Read",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM5",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "2",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "247",
        "commandDelay": "100",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "443ac799.d0cea8",
        "type": "ui_group",
        "name": "Outputs",
        "tab": "f2cbce8a.d212e",
        "order": 4,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "f06c7623.d9ebb8",
        "type": "ui_group",
        "name": "Inputs",
        "tab": "f2cbce8a.d212e",
        "order": 5,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "40da6dfc.cb2f34",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "queueLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM6",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "even",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 10000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "b2818ff7.3c8a1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bc6209d1.39d1b8",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "fa448a94.800e18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "bc6209d1.39d1b8",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "efaf134e.e4b5d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "a8886f7b.1f706",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "ca89bf1b.93376",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "3f0b9eba.d5f432",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 29,
        "width": 2,
        "height": 1
    },
    {
        "id": "e2b22c2e.7e3c5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 31,
        "width": 4,
        "height": 1
    },
    {
        "id": "759d8d50.d304b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "9fe08011.fef54",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 34,
        "width": 4,
        "height": 1
    },
    {
        "id": "37cf85bc.2e2c3a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 36,
        "width": 2,
        "height": 1
    },
    {
        "id": "bca25a29.5d74d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 38,
        "width": 2,
        "height": 1
    },
    {
        "id": "625825d3.09278c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 40,
        "width": 2,
        "height": 1
    },
    {
        "id": "316b47df.f14338",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 42,
        "width": 4,
        "height": 1
    },
    {
        "id": "b85dedd7.24eea",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 43,
        "width": 4,
        "height": 1
    },
    {
        "id": "1e3f0d2e.f58813",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 44,
        "width": 2,
        "height": 1
    },
    {
        "id": "bee9e431.57c608",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 45,
        "width": 2,
        "height": 1
    },
    {
        "id": "480a749.a7bb78c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 46,
        "width": 2,
        "height": 1
    },
    {
        "id": "9c7a504c.8a21b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 47,
        "width": 4,
        "height": 1
    },
    {
        "id": "e3d136f6.734a18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 48,
        "width": 3,
        "height": 1
    },
    {
        "id": "8a2069eb.8c4108",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 53,
        "width": 3,
        "height": 1
    },
    {
        "id": "713eea32.2dc4f4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 54,
        "width": 7,
        "height": 1
    },
    {
        "id": "ee8a002b.3b72c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 55,
        "width": 3,
        "height": 1
    },
    {
        "id": "c24ce4bc.2e3598",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 56,
        "width": 7,
        "height": 1
    },
    {
        "id": "f197a1ba.b10f5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd4e0296.f45f7",
        "order": 57,
        "width": 3,
        "height": 1
    },
    {
        "id": "4f9acef9.33898",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9ae2ed33.959bb",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b6ef749f.520b88",
        "type": "ui_tab",
        "name": "Tab 15",
        "icon": "dashboard",
        "order": 15
    },
    {
        "id": "473bf1b.2a9e61",
        "type": "ui_group",
        "name": "Location",
        "tab": "b6ef749f.520b88",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "2936b813.6cde68",
        "type": "ui_tab",
        "name": "Scheduler Demo",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "780502941ca3e71b",
        "type": "ui_group",
        "name": "Schedule",
        "tab": "b6ef749f.520b88",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "9726116e.3762e",
        "type": "modbus-client",
        "name": "SeaIO530E",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": 247,
        "commandDelay": 1,
        "clientTimeout": 10000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 20000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "4348863f.7bca28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4e9f5fb8.33a0f",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "5d002a9e.053b74",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4e9f5fb8.33a0f",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "2107967f.7d643a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4e9f5fb8.33a0f",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "7ce52202.485cac",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4e9f5fb8.33a0f",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "93798f9d.a2b08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4e9f5fb8.33a0f",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "17b983f1.32f97c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4e9f5fb8.33a0f",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "ec2870d1.e4554",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d97f995.6541e68",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "7ae79303.71540c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d97f995.6541e68",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "3d185358.72df9c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d97f995.6541e68",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "85ca6a0.3e2dc98",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d97f995.6541e68",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "9a6e1f5e.bb724",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d97f995.6541e68",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "408af9a6.2f87b8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d97f995.6541e68",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "12ec8b90.fd1384",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fe935d7b.39225",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "9da3039f.ed0e3",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fe935d7b.39225",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "d99c14ad.ce1a28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fe935d7b.39225",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "26fbf2c6.6293be",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fe935d7b.39225",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "fe10fe1.fd4b5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fe935d7b.39225",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "b58cb339.77287",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fe935d7b.39225",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "e2675e2b00521022",
        "type": "modbus-client",
        "name": "Sea530",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.110",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 247,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "80719b13c1389922",
        "type": "modbus-client",
        "name": "SeaLevel",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.100",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "f5927aa058514130",
        "type": "modbus-client",
        "name": "Potting1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.101",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "c94c928e81c55c23",
        "type": "modbus-client",
        "name": "SerialDrives",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "Com5",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "8a87c38e43f8d784",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "45fbf332.fe716c",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c1a3f5be0dc61266",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "45fbf332.fe716c",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "e89868ffca22d7b0",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "45fbf332.fe716c",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "a87f234277a51384",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "45fbf332.fe716c",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "f4e5e059e04c8101",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "45fbf332.fe716c",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "6ebf2c97bcaca623",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "dc2cf203.70a7c",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "7e4ebfdece7ccec5",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "dc2cf203.70a7c",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "5312e229a1b1bcad",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "dc2cf203.70a7c",
        "order": 19,
        "width": 11,
        "height": 1
    },
    {
        "id": "879ed2f5a92d21cf",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "8875cfa0.ab0c",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "912cec38d0ccea81",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "8875cfa0.ab0c",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "48d4d9c425b4e0f0",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "8875cfa0.ab0c",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "c2d1b6d1c67b0ac8",
        "type": "ui_spacer",
        "z": "de1fac70ffff56ff",
        "name": "spacer",
        "group": "8875cfa0.ab0c",
        "order": 7,
        "width": 9,
        "height": 1
    },
    {
        "id": "d15028d86db4bd21",
        "type": "modbus-client",
        "name": "Serial2",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "Com5",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "10b314fcc297872f",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "label": "Production Capacity (yd3)",
        "tooltip": "",
        "group": "d25cf2f3.7729d",
        "order": 1,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 510,
        "y": 460,
        "wires": [
            [
                "fc9fd18df7537d4d"
            ]
        ]
    },
    {
        "id": "72271f4b0d0ca5b2",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 300,
        "wires": [
            [
                "2c2b56eed2caa11e"
            ]
        ]
    },
    {
        "id": "592921b18296dcff",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pass",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ddc1ca644b4ea6d1",
        "type": "function",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "CheckUser",
        "func": "const pass = flow.get(\"pass\");\n\nmsg.enabled = false;\nif (pass == \"Costa1234\")\n   {\n       msg.enabled =true\n   }\n/* else{\n     return;\n }*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 220,
        "wires": [
            [
                "63159b98727fcfca"
            ]
        ]
    },
    {
        "id": "9255dbdb5895ff9d",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "label": "Batch Gap (s)",
        "tooltip": "",
        "group": "d25cf2f3.7729d",
        "order": 2,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "x": 480,
        "y": 500,
        "wires": [
            [
                "e8bc3ae976348b45"
            ]
        ]
    },
    {
        "id": "99cce7a3cfa48706",
        "type": "ui_switch",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "label": "E_Stop Enabled",
        "tooltip": "",
        "group": "d25cf2f3.7729d",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 480,
        "y": 540,
        "wires": [
            [
                "55afd99d32aab8a0"
            ]
        ]
    },
    {
        "id": "c11add2dca685276",
        "type": "ui_text_input",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "label": "Password",
        "tooltip": "",
        "group": "45fbf332.fe716c",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 220,
        "wires": [
            [
                "592921b18296dcff"
            ]
        ]
    },
    {
        "id": "3d871d8eee51d972",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "group": "45fbf332.fe716c",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Log in",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "ddc1ca644b4ea6d1"
            ]
        ]
    },
    {
        "id": "c33003255a976e77",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "group": "45fbf332.fe716c",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Log out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 280,
        "wires": [
            [
                "72271f4b0d0ca5b2",
                "6e5bb35a1156b9c1"
            ]
        ]
    },
    {
        "id": "eb126f442652a19e",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "group": "45fbf332.fe716c",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 260,
        "wires": [
            [
                "d622c11a0c335128"
            ]
        ]
    },
    {
        "id": "5e0632e3e0f0e63e",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "label": "Time (s)",
        "tooltip": "",
        "group": "7542aeb3.6f0b8",
        "order": 5,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "x": 480,
        "y": 720,
        "wires": [
            [
                "b166853b279f4273"
            ]
        ]
    },
    {
        "id": "c138d0a9d6f9d54e",
        "type": "ui_switch",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "label": "On Init",
        "tooltip": "",
        "group": "7542aeb3.6f0b8",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 470,
        "y": 760,
        "wires": [
            [
                "cf8b08b7daac2c80"
            ]
        ]
    },
    {
        "id": "065b947f6f17b6c9",
        "type": "ui_switch",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "label": "On Error",
        "tooltip": "",
        "group": "7542aeb3.6f0b8",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 480,
        "y": 800,
        "wires": [
            [
                "b22c00c4a89f8f50"
            ]
        ]
    },
    {
        "id": "5d07f75e6876f397",
        "type": "ui_switch",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "label": "After Pause",
        "tooltip": "",
        "group": "7542aeb3.6f0b8",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "f3b120435b891362"
            ]
        ]
    },
    {
        "id": "5f676fa47a191030",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "label": "Hoppers",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 1,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "1",
        "x": 440,
        "y": 1000,
        "wires": [
            [
                "fe175a09939565f9"
            ]
        ]
    },
    {
        "id": "3c4b77be0604ba17",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "label": "Conveyors",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 15,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "6",
        "step": "1",
        "x": 450,
        "y": 1080,
        "wires": [
            [
                "0ce7ae75666eed55"
            ]
        ]
    },
    {
        "id": "be04dadd9ba80430",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "Waters",
        "label": "Waters",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 17,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "2",
        "step": "1",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "9789ca10f00b4108"
            ]
        ]
    },
    {
        "id": "b592c5103513be5c",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "label": "Gates",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "5",
        "step": "1",
        "x": 430,
        "y": 1200,
        "wires": [
            [
                "8154d2e2ad96164a"
            ]
        ]
    },
    {
        "id": "b5cb01e6d0146433",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "label": "Flat F.",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 3,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "1",
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "7a4fd264900aab70"
            ]
        ]
    },
    {
        "id": "654f8095af4e5c1e",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "label": "Output ",
        "tooltip": "",
        "group": "7542aeb3.6f0b8",
        "order": 6,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 470,
        "y": 880,
        "wires": [
            [
                "13173d7e447f274a"
            ]
        ]
    },
    {
        "id": "8d1e84af64a62ef9",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "label": "E_Stop Input",
        "tooltip": "",
        "group": "d25cf2f3.7729d",
        "order": 4,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 470,
        "y": 580,
        "wires": [
            [
                "447229192a17fd03"
            ]
        ]
    },
    {
        "id": "63159b98727fcfca",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "Log in ",
        "links": [
            "b19fcf8d07a7dcbf",
            "ebd130ff4e08c32b",
            "650e50fc528cdc53",
            "4244a1bf5e130abf",
            "b075403b93dc15d6",
            "686285f6.1b116c",
            "12e9d0f195f37589",
            "f2730fa4.62625"
        ],
        "x": 925,
        "y": 220,
        "wires": []
    },
    {
        "id": "b19fcf8d07a7dcbf",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "links": [
            "2c2b56eed2caa11e",
            "63159b98727fcfca",
            "d622c11a0c335128"
        ],
        "x": 115,
        "y": 460,
        "wires": [
            [
                "2d1fbd881715960f",
                "7ae4f131a044efa0",
                "6f8951f8ff30c001",
                "1eebb9419f820fa9"
            ]
        ]
    },
    {
        "id": "2c2b56eed2caa11e",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "Log Out ",
        "links": [
            "b19fcf8d07a7dcbf",
            "ebd130ff4e08c32b",
            "650e50fc528cdc53",
            "4244a1bf5e130abf",
            "b075403b93dc15d6",
            "686285f6.1b116c",
            "12e9d0f195f37589",
            "f2730fa4.62625"
        ],
        "x": 925,
        "y": 300,
        "wires": []
    },
    {
        "id": "fc9fd18df7537d4d",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.General.ProdCapacity",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2d1fbd881715960f",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.General.ProdCapacity",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 460,
        "wires": [
            [
                "10b314fcc297872f"
            ]
        ]
    },
    {
        "id": "ebd130ff4e08c32b",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "links": [
            "2c2b56eed2caa11e",
            "63159b98727fcfca"
        ],
        "x": 115,
        "y": 260,
        "wires": [
            [
                "eb126f442652a19e"
            ]
        ]
    },
    {
        "id": "d622c11a0c335128",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "Refresh",
        "links": [
            "b19fcf8d07a7dcbf",
            "650e50fc528cdc53",
            "4244a1bf5e130abf",
            "b075403b93dc15d6",
            "686285f6.1b116c",
            "12e9d0f195f37589",
            "f2730fa4.62625"
        ],
        "x": 335,
        "y": 260,
        "wires": []
    },
    {
        "id": "7ae4f131a044efa0",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Batch.Gap",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 500,
        "wires": [
            [
                "9255dbdb5895ff9d"
            ]
        ]
    },
    {
        "id": "6f8951f8ff30c001",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.EStop.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 540,
        "wires": [
            [
                "99cce7a3cfa48706"
            ]
        ]
    },
    {
        "id": "1eebb9419f820fa9",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.EStop.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 580,
        "wires": [
            [
                "8d1e84af64a62ef9"
            ]
        ]
    },
    {
        "id": "e8bc3ae976348b45",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Batch.Gap",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "55afd99d32aab8a0",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.EStop.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "447229192a17fd03",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "0d3c11a0971dddf5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.EStop.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b16e8a8adfa8e98b",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "links": [
            "19574f598fb6a74a"
        ],
        "x": 115,
        "y": 220,
        "wires": [
            [
                "c11add2dca685276"
            ]
        ]
    },
    {
        "id": "6e5bb35a1156b9c1",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "19574f598fb6a74a"
            ]
        ]
    },
    {
        "id": "19574f598fb6a74a",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "Clear Pass",
        "links": [
            "b16e8a8adfa8e98b"
        ],
        "x": 925,
        "y": 260,
        "wires": []
    },
    {
        "id": "074b92dea4de775f",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Alarm.OnInit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 760,
        "wires": [
            [
                "c138d0a9d6f9d54e"
            ]
        ]
    },
    {
        "id": "650e50fc528cdc53",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "links": [
            "2c2b56eed2caa11e",
            "63159b98727fcfca",
            "d622c11a0c335128"
        ],
        "x": 115,
        "y": 680,
        "wires": [
            [
                "459bd26e512b19d9",
                "074b92dea4de775f",
                "200907da747d6057",
                "d7c7cb1bbf69cb0b",
                "5d07ed769562585f",
                "0bfe479293789de2"
            ]
        ]
    },
    {
        "id": "459bd26e512b19d9",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Alarm.Time",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 720,
        "wires": [
            [
                "5e0632e3e0f0e63e"
            ]
        ]
    },
    {
        "id": "200907da747d6057",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Alarm.OnError",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 800,
        "wires": [
            [
                "065b947f6f17b6c9"
            ]
        ]
    },
    {
        "id": "d7c7cb1bbf69cb0b",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Alarm.AfterPause",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 840,
        "wires": [
            [
                "5d07f75e6876f397"
            ]
        ]
    },
    {
        "id": "b22c00c4a89f8f50",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.OnError",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "f3b120435b891362",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.AfterPause",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "cf8b08b7daac2c80",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.OnInit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b166853b279f4273",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.Time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "5d07ed769562585f",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Alarm.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 880,
        "wires": [
            [
                "654f8095af4e5c1e"
            ]
        ]
    },
    {
        "id": "13173d7e447f274a",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "0bfe479293789de2",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Alarm.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 680,
        "wires": [
            [
                "f9c7cbcfe3d53059"
            ]
        ]
    },
    {
        "id": "63d7c625e29bee0c",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "f9c7cbcfe3d53059",
        "type": "ui_switch",
        "z": "de1fac70ffff56ff",
        "g": "7ae70b400595bed3",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "7542aeb3.6f0b8",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 480,
        "y": 680,
        "wires": [
            [
                "63d7c625e29bee0c"
            ]
        ]
    },
    {
        "id": "2f26ed50d0922614",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Hoppers",
        "group": "dc2cf203.70a7c",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Hoppers",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Hoppers\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 1380,
        "wires": [
            [
                "57f745056509aca2",
                "73292904e6a5f530"
            ]
        ]
    },
    {
        "id": "57f745056509aca2",
        "type": "ui_ui_control",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "",
        "events": "all",
        "x": 560,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "bbf38c88170e6435",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Conveyors",
        "group": "dc2cf203.70a7c",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Conveyors",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Conveyors\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 1540,
        "wires": [
            [
                "57f745056509aca2",
                "73f5a35fa13e0e19"
            ]
        ]
    },
    {
        "id": "131a70f38349e042",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Flat Fillers",
        "group": "dc2cf203.70a7c",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Flat F.",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Flat Fillers\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 1460,
        "wires": [
            [
                "57f745056509aca2",
                "0266ab6c5274d12e"
            ]
        ]
    },
    {
        "id": "b021feefbe168350",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Gates",
        "group": "dc2cf203.70a7c",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Gates",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"WaterGates\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 1500,
        "wires": [
            [
                "57f745056509aca2",
                "9e4cdb0ec9cf6cc1"
            ]
        ]
    },
    {
        "id": "4244a1bf5e130abf",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "links": [
            "2c2b56eed2caa11e",
            "63159b98727fcfca",
            "d622c11a0c335128"
        ],
        "x": 115,
        "y": 1000,
        "wires": [
            [
                "b0a9a6b8f17d9d13",
                "c1b621f3d71cd994",
                "18cfa3605bed2190",
                "27cf5ccccdae520d",
                "490d026198d904c4",
                "28a6d96b2a61258d",
                "1392c386e170cf91",
                "2796949b490395d9"
            ]
        ]
    },
    {
        "id": "b0a9a6b8f17d9d13",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Hoppers",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "5f676fa47a191030"
            ]
        ]
    },
    {
        "id": "fe175a09939565f9",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Hoppers",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "c1b621f3d71cd994",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Conveyors",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1080,
        "wires": [
            [
                "3c4b77be0604ba17"
            ]
        ]
    },
    {
        "id": "18cfa3605bed2190",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.FlatFillers",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "b5cb01e6d0146433"
            ]
        ]
    },
    {
        "id": "27cf5ccccdae520d",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Waters",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "be04dadd9ba80430"
            ]
        ]
    },
    {
        "id": "490d026198d904c4",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Gates",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1200,
        "wires": [
            [
                "b592c5103513be5c"
            ]
        ]
    },
    {
        "id": "0ce7ae75666eed55",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Conveyors",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "7a4fd264900aab70",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.FlatFillers",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "9789ca10f00b4108",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Waters",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8154d2e2ad96164a",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Gates",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "b075403b93dc15d6",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "",
        "links": [
            "2c2b56eed2caa11e",
            "63159b98727fcfca",
            "d622c11a0c335128"
        ],
        "x": 115,
        "y": 1420,
        "wires": [
            [
                "2f26ed50d0922614",
                "131a70f38349e042",
                "b021feefbe168350",
                "bbf38c88170e6435",
                "55391f9bbf86696e",
                "9319fa7f5541f436",
                "cc4c357c67ac6814",
                "b9c314e53130d09b"
            ]
        ]
    },
    {
        "id": "73292904e6a5f530",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Hoppers",
        "links": [
            "1478a060.d7f8c",
            "2b740b92.c93934",
            "36a914c6.b6006c",
            "5f6e890b.149ef8",
            "89f4977d.c97288",
            "c27c9c67.88071",
            "d162f483.fc11d8",
            "e0bb6c55.ba347",
            "eddbc22d.e0809",
            "f60693b6.e7487"
        ],
        "x": 515,
        "y": 1380,
        "wires": []
    },
    {
        "id": "55391f9bbf86696e",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Water",
        "group": "dc2cf203.70a7c",
        "order": 18,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Water",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"WaterGates\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 1580,
        "wires": [
            [
                "57f745056509aca2",
                "f37e4c68019088c4"
            ]
        ]
    },
    {
        "id": "9319fa7f5541f436",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Inputs",
        "group": "dc2cf203.70a7c",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Inputs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Inputs Outputs\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 1620,
        "wires": [
            [
                "57f745056509aca2"
            ]
        ]
    },
    {
        "id": "cc4c357c67ac6814",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Outputs",
        "group": "dc2cf203.70a7c",
        "order": 13,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Outputs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Inputs Outputs\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "57f745056509aca2"
            ]
        ]
    },
    {
        "id": "9f7ec48af7263900",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "label": "Inputs",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 5,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": 1,
        "x": 430,
        "y": 1240,
        "wires": [
            [
                "5d68e41585d43001"
            ]
        ]
    },
    {
        "id": "90e3af2802c5a45b",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "Outputs",
        "label": "Outputs",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 12,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": 1,
        "x": 440,
        "y": 1280,
        "wires": [
            [
                "205f103f59b47314"
            ]
        ]
    },
    {
        "id": "28a6d96b2a61258d",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Inputs",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1240,
        "wires": [
            [
                "9f7ec48af7263900"
            ]
        ]
    },
    {
        "id": "1392c386e170cf91",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Outputs",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1280,
        "wires": [
            [
                "90e3af2802c5a45b"
            ]
        ]
    },
    {
        "id": "5d68e41585d43001",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Inputs",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "205f103f59b47314",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Outputs",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "fc3e196c4e0d3cd2",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "Save Configuration",
        "group": "8875cfa0.ab0c",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Save Configuration",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1780,
        "wires": [
            [
                "4138c760b84f7088"
            ]
        ]
    },
    {
        "id": "4138c760b84f7088",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "C:\\Users\\CNF_SoilMix\\.node-red\\projects\\Config\\SM3.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1780,
        "wires": [
            [
                "b66fbb60797e9dc8"
            ]
        ]
    },
    {
        "id": "2b3015be862cece8",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "Load Configuration",
        "group": "8875cfa0.ab0c",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Load Configuration",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1840,
        "wires": [
            [
                "112ee44ff773d69b"
            ]
        ]
    },
    {
        "id": "112ee44ff773d69b",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "C:\\Users\\CNF_SoilMix\\.node-red\\projects\\Config\\SM3.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1840,
        "wires": [
            [
                "81c8028f83d4c809"
            ]
        ]
    },
    {
        "id": "854d3ced15e8282c",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "b66fbb60797e9dc8",
        "type": "json",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 1780,
        "wires": [
            [
                "6e880a154103e303"
            ]
        ]
    },
    {
        "id": "dcdf9f5341f14a6a",
        "type": "json",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 870,
        "y": 1840,
        "wires": [
            [
                "854d3ced15e8282c"
            ]
        ]
    },
    {
        "id": "12e9d0f195f37589",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "links": [
            "2c2b56eed2caa11e",
            "63159b98727fcfca",
            "d622c11a0c335128"
        ],
        "x": 115,
        "y": 1780,
        "wires": [
            [
                "fc3e196c4e0d3cd2",
                "2b3015be862cece8",
                "5752afd7eea48156"
            ]
        ]
    },
    {
        "id": "6f08f27ff87dd368",
        "type": "inject",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 1880,
        "wires": [
            [
                "112ee44ff773d69b"
            ]
        ]
    },
    {
        "id": "5752afd7eea48156",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "Check Configuration",
        "group": "8875cfa0.ab0c",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Check Configuration",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "config",
        "topicType": "str",
        "x": 240,
        "y": 1940,
        "wires": [
            [
                "e04534f7fb99cb8c"
            ]
        ]
    },
    {
        "id": "e04534f7fb99cb8c",
        "type": "function",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "Check Config Errors",
        "func": "let hoppers = global.get(\"System.Elements.Hoppers\");\nlet chemicals = global.get(\"System.Elements.Chemicals\");\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet flatfillers = global.get(\"System.Elements.FlatFillers\");\nlet inputs = global.get(\"System.Elements.Inputs\");\nlet outputs = global.get(\"System.Elements.Outputs\");\nlet faults = global.get(\"System.Fault.Faults\");\nlet waters = global.get(\"System.Elements.Waters\");\nlet gates = global.get(\"System.Elements.Gates\");\n\n//msg.fault =0;\n/*Check prod capacity*/\nif(global.get(\"System.General.ProdCapacity\") ==0){\n    let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n    fault.Type = \"Config Error\";\n    fault.Code = 100;\n    fault.Message = \"Production Capacity can't be 0\";\n    faults.push(fault);\n    msg.fault =1;\n}\n\n/*Check for error in Hopper Configurations*/\nfor (let i= 0; i < hoppers; i ++)\n{\n    if(global.get(`System.Hopper[${i}].Enabled`)){\n        if(global.get(`System.Hopper[${i}].FC`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 200+i;\n            fault.Message = global.get(`System.Hopper[${i}].Name`) + ` Full Capacity can't be 0`;\n            faults.push(fault);\n           \n        }\n        if(global.get(`System.Hopper[${i}].MaxSpeed`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 300+i;\n            fault.Message = global.get(`System.Hopper[${i}].Name`) + ` Max Speed can't be 0`; \n            faults.push(fault);\n        }\n    }\n}\n\n/*Check for error in Chemical Configurations*/\nfor (let i= 0; i < chemicals; i ++)\n{\n    if(global.get(`System.Chemical[${i}].Enabled`)){\n        if(global.get(`System.Chemical[${i}].FC`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 250+i;\n            fault.Message = global.get(`System.Chemical[${i}].Name`) + ` Full Capacity can't be 0`; \n            faults.push(fault);\n            \n          \n        }\n        if(global.get(`System.Chemical[${i}].MaxSpeed`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 350+i;\n            fault.Message = global.get(`System.Chemical[${i}].Name`) + ` Max Speed can't be 0`; \n            faults.push(fault);\n        }\n    }\n}\n\n/*Check for error in Conveyors Configurations*/\nfor (let i= 0; i < conveyors; i ++)\n{\n    if(global.get(`System.Conveyor[${i}].Enabled`)){\n        if(global.get(`System.Conveyor[${i}].DriveFrec`)==0 && global.get(`System.Conveyor[${i}].HasDrive`) ){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 400+i;\n            fault.Message = `Conveyor ${i}` + ` Speed can't be 0`; \n            faults.push(fault);\n        }\n        if(global.get(`System.Conveyor[${i}].WorkTime`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 500+i;\n            fault.Message = `Conveyor ${i}` + ` Worktime can't be 0`; \n            faults.push(fault);\n        }\n    }\n}\n\n/*Check for error in Flat Fillers Configurations*/\nfor (let i= 0; i < flatfillers; i ++)\n{\n    if(global.get(`System.FlatFiller[${i}].Enabled`)){\n        if(global.get(`System.FlatFiller[${i}].Batch.MaxSize`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 600+i;\n            fault.Message = `FlatFiller ${i+1}` + ` Batch Max Size can't be 0`; \n            faults.push(fault);\n        }\n        if(global.get(`System.FlatFiller[${i}].Batch.TotalTime`)==0){\n            let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n            fault.Code = 700+i;\n            fault.Message = `FlatFiller ${i+1}` + ` Batch Total Time can't be 0`; \n            faults.push(fault);\n        }\n        \n    }\n}\n\n/*Check overlap in inputs*/\nvar element =0;\nfor(let i=0; i<inputs ;  i++){\n    if(global.get(`System.EStop.Input`) === i && global.get(`System.EStop.Enabled`)){\n        element++;\n    }\n    for (let j=0; j<chemicals; j++){\n        if(global.get(`System.Chemical[${j}].Enabled`))\n        {\n            if(global.get(`System.Chemical[${j}].Sensor.Input`) == i && global.get(`System.Chemical[${j}].Sensor.Enabled`))\n            {\n                element++;\n            }\n        }\n       \n    }\n    for (let j=0; j<flatfillers; j++){\n        if(global.get(`System.FlatFiller[${j}].Enabled`))\n        {\n            if(global.get(`System.FlatFiller[${j}].Sensor.Input`) === i && global.get(`System.FlatFiller[${j}].Sensor.Enabled`))\n            {\n                element++;\n            }\n        }\n       \n    }\n    \n    if(element > 1){\n        let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n        fault.Code = 900+i;\n        fault.Message = `Input ${i} overlaid`; \n        faults.push(fault);\n        \n    }\n    element =0;\n}\n\nelement =0;\nfor(let i=0; i<outputs ;  i++)\n{\n    if(global.get(`System.Alarm.Output`) === i && global.get(`System.Alarm.Enabled`))\n    {\n        element++;\n    }\n    for (let j=0; j<hoppers; j++)\n    {\n        if(global.get(`System.Hopper[${j}].Enabled`))\n        {\n            if(global.get(`System.Hopper[${j}].Mixer.Output`) == i && global.get(`System.Hopper[${j}].Mixer.Enabled`) )\n            {\n                element++;\n            }\n        }\n    }\n    for (let j=0; j<conveyors; j++)\n    {\n        if(global.get(`System.Conveyor[${j}].Enabled`))\n        {\n            if(!global.get(`System.Conveyor[${j}].HasDrive`) && global.get(`System.Conveyor[${j}].Output`)== i)\n            {\n                element++ ;\n            }\n            if(global.get(`System.Conveyor[${j}].Mixer.Enabled`) && global.get(`System.Conveyor[${j}].Mixer.Output`)== i)\n            {\n                element++ ;\n            }\n        }\n       \n    }\n    for (let j=0; j<gates; j++)\n    {\n        if(global.get(`System.Gate[${j}].Enabled`))\n        {\n            if(global.get(`System.Gate[${j}].OutputClose`) == i  )\n            {\n                element++;\n            }\n            if(global.get(`System.Gate[${j}].OutputOpen`) == i && global.get(`System.Gate[${j}].Bistable`))\n            {\n                 element++;\n            }\n        }\n       \n    }\n    for (let j=0; j<waters; j++)\n    {\n       if(global.get(`System.Water[${j}].Output`) === i && global.get(`System.Water[${j}].Enabled`))\n       {\n           element++\n       }\n    }\n    \n    if(element > 1){\n        let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n        fault.Code = 950+i;\n        fault.Message = `Ouput ${i} overlaid`; \n        faults.push(fault);\n        \n    }\n    element =0;\n}\n\nif(faults.length > 0){\n   global.set(\"System.Mode.Status\", 0); //System in fault\n   global.set(\"System.Mode.Fault\", true); \n   global.set(\"System.Fault.Faults\",faults);\n   global.set(\"System.Fault.Stop\",true);\n   global.set(\"System.Fault.Code\",1);\n   return ;\n}\n\nlet topic = msg.topic;\nif (topic === \"config\"){\n    return;\n}\n\nmsg.payload = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1940,
        "wires": [
            [
                "210977ef4d824ed7"
            ]
        ]
    },
    {
        "id": "b9c314e53130d09b",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Chemicals",
        "group": "dc2cf203.70a7c",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Setup Chemicals",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tab\":\"Chemicals\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 1420,
        "wires": [
            [
                "57f745056509aca2",
                "8657b4aaa7670dce"
            ]
        ]
    },
    {
        "id": "2796949b490395d9",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Elements.Chemicals",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1040,
        "wires": [
            [
                "ea750b13bae54b5a"
            ]
        ]
    },
    {
        "id": "ea750b13bae54b5a",
        "type": "ui_numeric",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "label": "Chemicals",
        "tooltip": "",
        "group": "dc2cf203.70a7c",
        "order": 8,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "1",
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "da13c1187c9cb921"
            ]
        ]
    },
    {
        "id": "da13c1187c9cb921",
        "type": "change",
        "z": "de1fac70ffff56ff",
        "g": "1fbb4f6ae8c2a44f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Chemicals",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "361de61207ad3066",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "Check Config Error In",
        "links": [
            "58f2dc60.2899c4"
        ],
        "x": 375,
        "y": 1900,
        "wires": [
            [
                "e04534f7fb99cb8c"
            ]
        ]
    },
    {
        "id": "210977ef4d824ed7",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "Check Config Errors Out",
        "links": [
            "256774f6.223d8c"
        ],
        "x": 665,
        "y": 1900,
        "wires": []
    },
    {
        "id": "617c8b9761cd8388",
        "type": "inject",
        "z": "de1fac70ffff56ff",
        "g": "35782600f3808763",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "0e24669ce5cfa381"
            ]
        ]
    },
    {
        "id": "0e24669ce5cfa381",
        "type": "function",
        "z": "de1fac70ffff56ff",
        "g": "35782600f3808763",
        "name": "Actual configuration",
        "func": "var Hoppers = 5;\nvar Chemicals = 5;\nvar Conveyors = 3;\nvar FlatFillers = 4;\nvar Gates =4;\nvar Waters = 2;\nvar Inputs = 15;\nvar Outputs = 15;\nvar Drives = 10;\n\nglobal.set(\"System.Elements.Hoppers\",Hoppers);\nglobal.set(\"System.Elements.Chemicals\",Chemicals);\nglobal.set(\"System.Elements.Conveyors\",Conveyors);\nglobal.set(\"System.Elements.FlatFillers\",FlatFillers);\nglobal.set(\"System.Elements.Gates\",Gates);\nglobal.set(\"System.Elements.Waters\",Waters);\nglobal.set(\"System.Elements.Inputs\",Inputs);\nglobal.set(\"System.Elements.Outputs\",Outputs);\nglobal.set(\"System.Elements.Drives\",Drives)\n\n\n/*System*/\nglobal.set(`System.General.ProdCapacity`,2);\n\n/*System Status*/\n/*0 - Fault    1-Ready   2-Auto    3-Active   4-Pause   5-Stop   */\nglobal.set(`System.Mode.Status`,1);\nglobal.set(`System.Mode.Auto`,false);\nglobal.set(`System.Mode.Stop`,false);\nglobal.set(`System.Mode.Pause`,false);\nglobal.set(`System.Mode.Manual`,false);\nglobal.set(`System.Mode.Fault`,false);\nglobal.set(`System.Mode.Starting`,true);\n\nglobal.set(`System.EStop.Active`,false);\nglobal.set(`System.EStop.Enabled`,true);\nglobal.set(`System.EStop.Input`,0);\n\n/*Inputs*/\nfor (let i=0;i<Inputs;i++){\n    global.set(`System.Input[${i}]`,false);\n}\n\n/*Outputs*/\nfor (let i=0;i<Outputs;i++){\n    global.set(`System.Output[${i}]`,false);\n}\n\n/*Drive*/\nfor (let i=0;i<Drives;i++){\n    global.set(`System.Drive[${i}].ID`,0);\n    global.set(`System.Drive[${i}].Speed`,0);\n    global.set(`System.Drive[${i}].Active`,false);\n    global.set(`System.Drive[${i}].Enabled`, true);\n    global.set(`System.Drive[${i}].RefSpeed`,0);\n}\n\n/*Fault*/\nglobal.set(`System.Fault.Pause`,false);\nglobal.set(`System.Fault.PauseCode`,0);\nglobal.set(`System.Fault.RecipeCode`,0);\nglobal.set(`System.Fault.Stop`,false);\n/*1: Configuration Error  2:E-Stop pressed  3:Chemical low level sensor 4:Recipe error*/\nglobal.set(`System.Fault.Code`,0);\nglobal.set(`System.Fault.Clear`,false);\nglobal.set(`System.Fault.Faults`,[]);\n\n/*Batch*/\nglobal.set(`System.Batch.Gap`,0);\nglobal.set(`System.Batch.NextEncoder`,0);\nglobal.set(`System.Batch.NextID`,0);\nglobal.set(`System.Batch.RTEncoder`,0);\nglobal.set(`System.Batch.Target`,0);\nfor (let i = 0; i < FlatFillers; i++) {\n    global.set(`System.Batch.NextEnc[${i}]`, 0);\n}\n\n/*Alarm*/\nglobal.set(`System.Alarm.Enabled`,true);\nglobal.set(`System.Alarm.OnError`,true);\nglobal.set(`System.Alarm.Time`,3);\nglobal.set(`System.Alarm.AfterPause`,true);\nglobal.set(`System.Alarm.OnInit`,true);\nglobal.set(`System.Alarm.AfterPause`,true);\nglobal.set(`System.Alarm.Active`,true);\nglobal.set(`System.Alarm.Output`,0);\n\n\n/*Hoppers*/\nfor (let i=0;i<Hoppers;i++){\n    global.set(`System.Hopper[${i}].DriveID`,i);\n    global.set(`System.Hopper[${i}].Active`,false);\n    global.set(`System.Hopper[${i}].Enabled`,true);\n    global.set(`System.Hopper[${i}].Error`,false);\n    global.set(`System.Hopper[${i}].FC`,100);\n    global.set(`System.Hopper[${i}].Manual`,false);\n    global.set(`System.Hopper[${i}].MaxSpeed`,60);\n    global.set(`System.Hopper[${i}].Mixer.Output`,0);\n    global.set(`System.Hopper[${i}].Mixer.Enabled`,false);\n    global.set(`System.Hopper[${i}].Name`, `Hopper ${i+1}`);\n    global.set(`System.Hopper[${i}].Quantity`,0);\n    global.set(`System.Hopper[${i}].SP`,0);\n    global.set(`System.Hopper[${i}].Speed`,0);\n    global.set(`System.Hopper[${i}].Status`,1);\n    global.set(`System.Hopper[${i}].TTS`,2*i);\n    global.set(`System.Hopper[${i}].Unit`,\"yd3\");\n    \n}\n\n/*Chemicals*/\nfor (let i=0;i<Chemicals;i++){\n    global.set(`System.Chemical[${i}].DriveID`,i+5);\n    global.set(`System.Chemical[${i}].Active`,false);\n    global.set(`System.Chemical[${i}].Enabled`,true);\n    global.set(`System.Chemical[${i}].Error`,false);\n    global.set(`System.Chemical[${i}].FC`,10);\n    global.set(`System.Chemical[${i}].Manual`,false);\n    global.set(`System.Chemical[${i}].MaxSpeed`,60);\n    global.set(`System.Chemical[${i}].Name`, `Ch ${i+1}`);\n    global.set(`System.Chemical[${i}].Quantity`,0);\n    global.set(`System.Chemical[${i}].Sensor.Active`,false);\n    global.set(`System.Chemical[${i}].Sensor.Input`,i+1);\n    global.set(`System.Chemical[${i}].Sensor.Enabled`,true);\n    global.set(`System.Chemical[${i}].SP`,0);\n    global.set(`System.Chemical[${i}].Speed`,0);\n    global.set(`System.Chemical[${i}].Status`,1);\n    global.set(`System.Chemical[${i}].TTS`,2*i+10);\n    global.set(`System.Chemical[${i}].Unit`,\"lbs\");\n    \n}\n\n/*Conveyors*/\nfor (let i=0;i<Conveyors;i++){\n    global.set(`System.Conveyor[${i}].HasDrive`,false);\n    global.set(`System.Conveyor[${i}].DriveID`,0);\n    global.set(`System.Conveyor[${i}].Output`,1 + i);\n    global.set(`System.Conveyor[${i}].Active`,false);\n    global.set(`System.Conveyor[${i}].Enabled`,true);\n    global.set(`System.Conveyor[${i}].Idle`,false);\n    global.set(`System.Conveyor[${i}].IdleTime`,0);\n    global.set(`System.Conveyor[${i}].Manual`,false);\n    global.set(`System.Conveyor[${i}].DriveFrec`,0);\n    global.set(`System.Conveyor[${i}].IdleStart`,false);\n    global.set(`System.Conveyor[${i}].Status`,1);\n    global.set(`System.Conveyor[${i}].TTS`,0+2*i);\n    global.set(`System.Conveyor[${i}].WorkTime`,10);\n    global.set(`System.Conveyor[${i}].Mixer.Enabled`,false);\n    global.set(`System.Conveyor[${i}].Mixer.Output`,0);\n   \n}\n\n/*Gates*/\nfor (let i=0;i<Gates;i++){\n    global.set(`System.Gate[${i}].Bistable`,false);\n    global.set(`System.Gate[${i}].Closed`,false);\n    global.set(`System.Gate[${i}].Enabled`,true);\n    global.set(`System.Gate[${i}].ID`,0);\n    global.set(`System.Gate[${i}].PulseDuration`,0);\n    global.set(`System.Gate[${i}].TTS`,10 + 5*i);\n    global.set(`System.Gate[${i}].OutputClose`,i+4);\n    global.set(`System.Gate[${i}].OutputOpen`,0);\n    /*0: open 1:close*/\n    global.set(`System.Gate[${i}].Status`,0);\n    \n    \n}\n\n/*Targets*/\nfor (let i=0;i<Gates+1;i++){\n    global.set(`System.Target[${i}].Status`,0);\n}\n\n/*Waters*/\nfor (let i=0;i<Waters;i++){\n    global.set(`System.Water[${i}].Active`,false);\n    global.set(`System.Water[${i}].Manual`,false);\n    global.set(`System.Water[${i}].Enabled`,false);\n    global.set(`System.Water[${i}].Status`,0);\n    global.set(`System.Water[${i}].TTS`,0);\n    global.set(`System.Water[${i}].Output`,0);\n    \n}\n\n/*Flat Fillers*/\nfor (let i=0;i<FlatFillers;i++){\n    global.set(`System.FlatFiller[${i}].Enabled`,true);\n    global.set(`System.FlatFiller[${i}].Active`,false);\n    global.set(`System.FlatFiller[${i}].Call`,false);\n    \n    global.set(`System.FlatFiller[${i}].Batch.Size`,1);\n    global.set(`System.FlatFiller[${i}].Batch.CompTime`,0);\n    global.set(`System.FlatFiller[${i}].Batch.ID`,0);\n    global.set(`System.FlatFiller[${i}].Batch.MaxSize`,2);\n    global.set(`System.FlatFiller[${i}].Batch.TotalTime`,20 +5*i);\n    global.set(`System.FlatFiller[${i}].Batch.Time`,0);\n    global.set(`System.FlatFiller[${i}].Batch.Encoder.Start`,0);\n    global.set(`System.FlatFiller[${i}].Batch.Encoder.End`,0);\n    global.set(`System.FlatFiller[${i}].Batch.Encoder.Value`,0);\n\n    \n    for (let j=0;j<Conveyors;j++){\n         global.set(`System.FlatFiller[${i}].Conveyor[${j}].Active`,false);\n         global.set(`System.FlatFiller[${i}].Conveyor[${j}].EncodStart`,0);\n         global.set(`System.FlatFiller[${i}].Conveyor[${j}].EncodEnd`,0);\n    }\n    for (let j=0;j<Hoppers;j++){\n         global.set(`System.FlatFiller[${i}].Hopper[${j}].Active`,false);\n         global.set(`System.FlatFiller[${i}].Hopper[${j}].SP`,0);\n         global.set(`System.FlatFiller[${i}].Hopper[${j}].Speed`,0);\n         global.set(`System.FlatFiller[${i}].Hopper[${j}].EncodStart`,0);\n         global.set(`System.FlatFiller[${i}].Hopper[${j}].EncodEnd`,0);\n    }\n    for (let j=0;j<Chemicals;j++){\n         global.set(`System.FlatFiller[${i}].Chemical[${j}].Active`,false);\n         global.set(`System.FlatFiller[${i}].Chemical[${j}].SP`,0);\n         global.set(`System.FlatFiller[${i}].Chemical[${j}].Speed`,0);\n         global.set(`System.FlatFiller[${i}].Chemical[${j}].EncodStart`,0);\n         global.set(`System.FlatFiller[${i}].Chemical[${j}].EncodEnd`,0);\n    }\n    for (let j=0;j<Gates;j++){\n         /*0-Disabled  1-Close  2-Open*/\n         global.set(`System.FlatFiller[${i}].Gate[${j}].Enabled`,0);\n         global.set(`System.FlatFiller[${i}].Gate[${j}].EncodStart`,0);\n         global.set(`System.FlatFiller[${i}].Gate[${j}].EncodEnd`,0);\n    }\n    for (let j=0;j<Waters;j++){\n         global.set(`System.FlatFiller[${i}].Water[${j}].Active`,false);\n         global.set(`System.FlatFiller[${i}].Water[${j}]EncodStart`,0);\n         global.set(`System.FlatFiller[${i}].Water[${j}]EncodEnd`,0);\n    }\n    global.set(`System.FlatFiller[${i}].Recipe.Load`,false);\n    global.set(`System.FlatFiller[${i}].Recipe.No`,0);\n    global.set(`System.FlatFiller[${i}].Recipe.Name`,\"\");\n    global.set(`System.FlatFiller[${i}].Recipe.Read`,false);\n    global.set(`System.FlatFiller[${i}].Sensor.Enabled`,true);\n    global.set(`System.FlatFiller[${i}].Sensor.Active`,false);\n    global.set(`System.FlatFiller[${i}].Sensor.Delay`,0);\n    global.set(`System.FlatFiller[${i}].Sensor.Input`,i+6);\n    global.set(`System.FlatFiller[${i}].Status`,0);\n    global.set(`System.FlatFiller[${i}].Batch.Encoder.Start`,0);\n    global.set(`System.FlatFiller[${i}].Batch.Encoder.End`,0);\n    global.set(`System.FlatFiller[${i}].Batch.Encoder.Value`,0);\n    \n}\n\n/*System*/\nglobal.set(`System.General.ProdCapacity`,2);\nglobal.set(`System.EStop.Enabled`,true);\nglobal.set(`System.EStop.Input`,0);\n\n\n/*Batch*/\nglobal.set(`System.Batch.Gap`,3);\n\n\n/*Alarm*/\nglobal.set(`System.Alarm.Enabled`,true);\nglobal.set(`System.Alarm.OnError`,true);\nglobal.set(`System.Alarm.Time`,3);\nglobal.set(`System.Alarm.AfterPause`,true);\nglobal.set(`System.Alarm.OnInit`,true);\nglobal.set(`System.Alarm.Output`,0);\n\n\n/*Hoppers*/\nglobal.set(`System.Hopper[0].DriveID`,1);\nglobal.set(`System.Drive[0].ID`,1);\nglobal.set(`System.Hopper[0].Enabled`,true);\nglobal.set(`System.Hopper[0].FC`,100);\nglobal.set(`System.Hopper[0].MaxSpeed`,60);\nglobal.set(`System.Hopper[0].Mixer.Output`,2);\nglobal.set(`System.Hopper[0].Mixer.Enabled`,false);\nglobal.set(`System.Hopper[0].Name`, `Hopper 1`);\nglobal.set(`System.Hopper[0].TTS`,0);\n\nglobal.set(`System.Hopper[1].DriveID`,2);\nglobal.set(`System.Drive[1].ID`,2);\nglobal.set(`System.Hopper[1].Enabled`,true);\nglobal.set(`System.Hopper[1].FC`,100);\nglobal.set(`System.Hopper[1].MaxSpeed`,60);\nglobal.set(`System.Hopper[1].Mixer.Output`,2);\nglobal.set(`System.Hopper[1].Mixer.Enabled`,false);\nglobal.set(`System.Hopper[1].Name`, `Hopper 2`);\nglobal.set(`System.Hopper[1].TTS`,5);\n\nglobal.set(`System.Hopper[2].DriveID`,3);\nglobal.set(`System.Drive[2].ID`,3);\nglobal.set(`System.Hopper[2].Enabled`, true);\nglobal.set(`System.Hopper[2].FC`,100);\nglobal.set(`System.Hopper[2].MaxSpeed`,60);\nglobal.set(`System.Hopper[2].Mixer.Output`,3);\nglobal.set(`System.Hopper[2].Mixer.Enabled`,false);\nglobal.set(`System.Hopper[2].Name`, `Hopper 3`);\nglobal.set(`System.Hopper[2].TTS`,10);\n\nglobal.set(`System.Hopper[3].DriveID`,4);\nglobal.set(`System.Drive[3].ID`,4);\nglobal.set(`System.Hopper[3].Enabled`, true);\nglobal.set(`System.Hopper[3].FC`,100);\nglobal.set(`System.Hopper[3].MaxSpeed`,60);\nglobal.set(`System.Hopper[3].Mixer.Output`,4);\nglobal.set(`System.Hopper[3].Mixer.Enabled`,false);\nglobal.set(`System.Hopper[3].Name`, `Hopper 4`);\nglobal.set(`System.Hopper[3].TTS`,15);\n\nglobal.set(`System.Hopper[4].DriveID`,5);\nglobal.set(`System.Drive[4].ID`,5);\nglobal.set(`System.Hopper[4].Enabled`, true);\nglobal.set(`System.Hopper[4].FC`,100);\nglobal.set(`System.Hopper[4].MaxSpeed`,60);\nglobal.set(`System.Hopper[4].Mixer.Output`,5);\nglobal.set(`System.Hopper[4].Mixer.Enabled`,false);\nglobal.set(`System.Hopper[4].Name`, `Hopper 5`);\nglobal.set(`System.Hopper[4].TTS`,20);\n\n/*Chemicals*/\nglobal.set(`System.Chemical[0].DriveID`,6);\nglobal.set(`System.Drive[5].ID`,6);\nglobal.set(`System.Chemical[0].Enabled`, true);\nglobal.set(`System.Chemical[0].FC`,3);\nglobal.set(`System.Chemical[0].MaxSpeed`,60);\nglobal.set(`System.Chemical[0].Name`, `CH 1`);\nglobal.set(`System.Chemical[0].Sensor.Enabled`,true);\nglobal.set(`System.Chemical[0].Sensor.Input`,1);\nglobal.set(`System.Chemical[0].TTS`,25);\n\nglobal.set(`System.Chemical[1].DriveID`,7);\nglobal.set(`System.Drive[6].ID`,7);\nglobal.set(`System.Chemical[1].Enabled`, true);\nglobal.set(`System.Chemical[1].FC`,3);\nglobal.set(`System.Chemical[1].MaxSpeed`,60);\nglobal.set(`System.Chemical[1].Name`, `CH 2`);\nglobal.set(`System.Chemical[1].Sensor.Enabled`,true);\nglobal.set(`System.Chemical[1].Sensor.Input`,2);\nglobal.set(`System.Chemical[1].TTS`,30);\n\nglobal.set(`System.Chemical[2].DriveID`,8);\nglobal.set(`System.Drive[7].ID`,8);\nglobal.set(`System.Chemical[2].Enabled`, true);\nglobal.set(`System.Chemical[2].FC`,3);\nglobal.set(`System.Chemical[2].MaxSpeed`,60);\nglobal.set(`System.Chemical[2].Name`, `CH 3`);\nglobal.set(`System.Chemical[2].Sensor.Enabled`,true);\nglobal.set(`System.Chemical[2].Sensor.Input`,3);\nglobal.set(`System.Chemical[2].TTS`,35);\n\nglobal.set(`System.Chemical[3].DriveID`,9);\nglobal.set(`System.Drive[8].ID`,9);\nglobal.set(`System.Drive[8].Enabled`,true);\nglobal.set(`System.Chemical[3].Enabled`,true);\nglobal.set(`System.Chemical[3].FC`,3);\nglobal.set(`System.Chemical[3].MaxSpeed`,60);\nglobal.set(`System.Chemical[3].Name`, `CH 4`);\nglobal.set(`System.Chemical[3].Sensor.Enabled`,true);\nglobal.set(`System.Chemical[3].Sensor.Input`,4);\nglobal.set(`System.Chemical[3].TTS`,40);\n\nglobal.set(`System.Chemical[4].DriveID`,10);\nglobal.set(`System.Drive[9].ID`,10);\nglobal.set(`System.Drive[9].Enabled`,true);\nglobal.set(`System.Chemical[4].Enabled`,true);\nglobal.set(`System.Chemical[4].FC`,3);\nglobal.set(`System.Chemical[4].MaxSpeed`,60);\nglobal.set(`System.Chemical[4].Name`, `CH 5`);\nglobal.set(`System.Chemical[4].Sensor.Enabled`,true);\nglobal.set(`System.Chemical[4].Sensor.Input`,5);\nglobal.set(`System.Chemical[4].TTS`,45);\n\n\n/*Conveyors*/\n\nglobal.set(`System.Conveyor[0].HasDrive`,false);\nglobal.set(`System.Conveyor[0].DriveID`,30);\nglobal.set(`System.Conveyor[0].Output`,1);\nglobal.set(`System.Conveyor[0].Enabled`,true);\nglobal.set(`System.Conveyor[0].Idle`,false);\nglobal.set(`System.Conveyor[0].IdleTime`,0);\nglobal.set(`System.Conveyor[0].DriveFrec`,60);\nglobal.set(`System.Conveyor[0].TTS`,0);\nglobal.set(`System.Conveyor[0].WorkTime`,30);\nglobal.set(`System.Conveyor[0].Mixer.Enabled`,false);\nglobal.set(`System.Conveyor[0].Mixer.Output`,21);\nglobal.set(`System.Conveyor[0].WorkTime`,30);\n\nglobal.set(`System.Conveyor[1].HasDrive`,false);\nglobal.set(`System.Conveyor[1].DriveID`,31);\nglobal.set(`System.Conveyor[1].Output`,2);\nglobal.set(`System.Conveyor[1].Enabled`,true);\nglobal.set(`System.Conveyor[1].Idle`,false);\nglobal.set(`System.Conveyor[1].IdleTime`,0);\nglobal.set(`System.Conveyor[1].DriveFrec`,60);\nglobal.set(`System.Conveyor[1].TTS`,50);\nglobal.set(`System.Conveyor[1].WorkTime`,30);\nglobal.set(`System.Conveyor[1].Mixer.Enabled`,false);\nglobal.set(`System.Conveyor[1].Mixer.Output`,0);\nglobal.set(`System.Conveyor[1].WorkTime`,30);\n\nglobal.set(`System.Conveyor[2].HasDrive`,false);\nglobal.set(`System.Conveyor[2].DriveID`,32);\nglobal.set(`System.Conveyor[2].Output`,3);\nglobal.set(`System.Conveyor[2].Enabled`,true);\nglobal.set(`System.Conveyor[2].Idle`,false);\nglobal.set(`System.Conveyor[2].IdleTime`,0);\nglobal.set(`System.Conveyor[2].DriveFrec`,60);\nglobal.set(`System.Conveyor[2].TTS`,55);\nglobal.set(`System.Conveyor[2].WorkTime`,30);\nglobal.set(`System.Conveyor[2].Mixer.Enabled`,false);\nglobal.set(`System.Conveyor[2].Mixer.Output`,0);\nglobal.set(`System.Conveyor[2].WorkTime`,30);\n\n\nglobal.set(`System.Gate[0].Bistable`,false);\nglobal.set(`System.Gate[0].Enabled`,true);\nglobal.set(`System.Gate[0].PulseDuration`,0);\nglobal.set(`System.Gate[0].TTS`,65);\nglobal.set(`System.Gate[0].OutputClose`,4);\nglobal.set(`System.Gate[0].OutputOpen`,31);\n    \nglobal.set(`System.Gate[1].Bistable`,false);\nglobal.set(`System.Gate[1].Enabled`,true);\nglobal.set(`System.Gate[1].PulseDuration`,0);\nglobal.set(`System.Gate[1].TTS`,70);\nglobal.set(`System.Gate[1].OutputClose`,5);\nglobal.set(`System.Gate[1].OutputOpen`,33);\n\nglobal.set(`System.Gate[2].Bistable`,false);\nglobal.set(`System.Gate[2].Enabled`,true);\nglobal.set(`System.Gate[2].PulseDuration`,0);\nglobal.set(`System.Gate[2].TTS`,75);\nglobal.set(`System.Gate[2].OutputClose`,6);\nglobal.set(`System.Gate[2].OutputOpen`,34);\n\nglobal.set(`System.Gate[3].Bistable`,false);\nglobal.set(`System.Gate[3].Enabled`,true);\nglobal.set(`System.Gate[3].PulseDuration`,0);\nglobal.set(`System.Gate[3].TTS`,80);\nglobal.set(`System.Gate[3].OutputClose`,7);\nglobal.set(`System.Gate[3].OutputOpen`,34);\n\n\nglobal.set(`System.Water[0].Enabled`,false);\nglobal.set(`System.Water[0].TTS`,10);\nglobal.set(`System.Water[0].Output`,40);    \n\nglobal.set(`System.Water[1].Enabled`,false);\nglobal.set(`System.Water[1].TTS`,15);\nglobal.set(`System.Water[1].Output`,41);   \n\n\nglobal.set(`System.FlatFiller[0].Enabled`,true);\nglobal.set(`System.FlatFiller[0].Batch.CompTime`,60);\nglobal.set(`System.FlatFiller[0].Batch.Size`,1);\nglobal.set(`System.FlatFiller[0].Batch.MaxSize`,2);\nglobal.set(`System.FlatFiller[0].Batch.TotalTime`,60);\nglobal.set(`System.FlatFiller[0].Gate[0].Enabled`,1);\nglobal.set(`System.FlatFiller[0].Gate[1].Enabled`,0);\nglobal.set(`System.FlatFiller[0].Gate[2].Enabled`,0);\nglobal.set(`System.FlatFiller[0].Gate[3].Enabled`,0);\nglobal.set(`System.FlatFiller[0].Sensor.Enabled`,true);\nglobal.set(`System.FlatFiller[0].Sensor.Delay`,0);\nglobal.set(`System.FlatFiller[0].Sensor.Input`,6);\n\n\nglobal.set(`System.FlatFiller[1].Enabled`,true);\nglobal.set(`System.FlatFiller[1].Batch.CompTime`,65);\nglobal.set(`System.FlatFiller[1].Batch.Size`,1);\nglobal.set(`System.FlatFiller[1].Batch.MaxSize`,2);\nglobal.set(`System.FlatFiller[1].Batch.TotalTime`,65);\nglobal.set(`System.FlatFiller[1].Gate[0].Enabled`,2);\nglobal.set(`System.FlatFiller[1].Gate[1].Enabled`,1);\nglobal.set(`System.FlatFiller[1].Gate[2].Enabled`,0);\nglobal.set(`System.FlatFiller[1].Gate[3].Enabled`,0);\nglobal.set(`System.FlatFiller[1].Sensor.Enabled`,true);\nglobal.set(`System.FlatFiller[1].Sensor.Delay`,0);\nglobal.set(`System.FlatFiller[1].Sensor.Input`,7);\n\n\nglobal.set(`System.FlatFiller[2].Enabled`,true);\nglobal.set(`System.FlatFiller[2].Batch.CompTime`,70);\nglobal.set(`System.FlatFiller[2].Batch.Size`,1);\nglobal.set(`System.FlatFiller[2].Batch.MaxSize`,2);\nglobal.set(`System.FlatFiller[2].Batch.TotalTime`,70);\nglobal.set(`System.FlatFiller[2].Gate[0].Enabled`,2);\nglobal.set(`System.FlatFiller[2].Gate[1].Enabled`,2);\nglobal.set(`System.FlatFiller[2].Gate[2].Enabled`,1);\nglobal.set(`System.FlatFiller[2].Gate[3].Enabled`,0);\nglobal.set(`System.FlatFiller[2].Sensor.Enabled`,true);\nglobal.set(`System.FlatFiller[2].Sensor.Delay`,0);\nglobal.set(`System.FlatFiller[2].Sensor.Input`,8);\n\nglobal.set(`System.FlatFiller[3].Enabled`,true);\nglobal.set(`System.FlatFiller[3].Batch.CompTime`,70);\nglobal.set(`System.FlatFiller[3].Batch.Size`,2);\nglobal.set(`System.FlatFiller[3].Batch.MaxSize`,2);\nglobal.set(`System.FlatFiller[3].Batch.TotalTime`,70);\nglobal.set(`System.FlatFiller[3].Gate[0].Enabled`,2);\nglobal.set(`System.FlatFiller[3].Gate[1].Enabled`,2);\nglobal.set(`System.FlatFiller[3].Gate[2].Enabled`,2);\nglobal.set(`System.FlatFiller[3].Gate[3].Enabled`,1);\nglobal.set(`System.FlatFiller[3].Sensor.Enabled`,true);\nglobal.set(`System.FlatFiller[3].Sensor.Delay`,0);\nglobal.set(`System.FlatFiller[3].Sensor.Input`,9);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6d6de640f131de10",
        "type": "inject",
        "z": "de1fac70ffff56ff",
        "g": "35782600f3808763",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "cf67309ab2fd24c3"
            ]
        ]
    },
    {
        "id": "cf67309ab2fd24c3",
        "type": "function",
        "z": "de1fac70ffff56ff",
        "g": "35782600f3808763",
        "name": "Recipes",
        "func": "let Hoppers = global.get(\"System.Elements.Hoppers\");\nlet Chemicals = global.get(\"System.Elements.Chemicals\")\n\n/*Recipe*/\nfor (let i=0;i<20;i++){\n    global.set(`Recipe[${i}].Number`,i+1);\n     global.set(`Recipe[${i}].id`,i);\n    global.set(`Recipe[${i}].Name`,`Mix${i}`);\n    for (let j=0;j<Hoppers;j++){\n        if(j===0){\n            global.set(`Recipe[${i}].Hopper[${j}]`,100);\n        }\n        else{\n            global.set(`Recipe[${i}].Hopper[${j}]`,0);\n        }\n        \n    }\n    for (let j=0;j<Chemicals;j++){\n        global.set(`Recipe[${i}].Chemical[${j}]`,3);\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8657b4aaa7670dce",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Chemicals",
        "mode": "link",
        "links": [
            "da5d8c96d2468f9b",
            "70dd3af57966569c",
            "7f4aba0dd6d8ac0b",
            "d1fa2153ccf6a379",
            "f4d08523b57c888d",
            "61656781d05bb7d3",
            "13f4461b2073737b",
            "287cd6f46889edac",
            "06094b035d1f5fc8",
            "9a3e0e4fc7a08478"
        ],
        "x": 515,
        "y": 1420,
        "wires": []
    },
    {
        "id": "0266ab6c5274d12e",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Hoppers",
        "links": [
            "189f19e3.df9086",
            "25e9da6e.3ee6c6",
            "282223b2.6b4d4c",
            "33847909.e0fb26",
            "38686a62.6c1316",
            "3bcf4ec4.f2eec2",
            "7f6cd3ab.98327c",
            "b1765773.0cc1e8"
        ],
        "x": 515,
        "y": 1460,
        "wires": []
    },
    {
        "id": "73f5a35fa13e0e19",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Hoppers",
        "links": [
            "1a9e032f.0f6f8d",
            "298204ff.69465c",
            "367d850d.83d84a",
            "5f689700.bb0748",
            "6b1dc9fe.5ccb48",
            "afb38704.e092d8"
        ],
        "x": 515,
        "y": 1540,
        "wires": []
    },
    {
        "id": "9e4cdb0ec9cf6cc1",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Hoppers",
        "links": [
            "1a8b645d.228ddc",
            "203b16d7.9bb62a",
            "2cb33f2e.0f31d",
            "32d24c3c.2e7804",
            "5fe8b5a3.2dc9ac",
            "6700e306.09870c",
            "67b816a7.823c98",
            "878cd084.49e95",
            "a77c013b.3402",
            "f1feb7db.6aeba8"
        ],
        "x": 515,
        "y": 1500,
        "wires": []
    },
    {
        "id": "f37e4c68019088c4",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "271ea4c3a934fc40",
        "name": "Setup Hoppers",
        "links": [
            "1a8b645d.228ddc",
            "203b16d7.9bb62a",
            "2cb33f2e.0f31d",
            "32d24c3c.2e7804",
            "5fe8b5a3.2dc9ac",
            "6700e306.09870c",
            "67b816a7.823c98",
            "878cd084.49e95",
            "a77c013b.3402",
            "f1feb7db.6aeba8"
        ],
        "x": 515,
        "y": 1580,
        "wires": []
    },
    {
        "id": "50f98a1fac9e57a9",
        "type": "function",
        "z": "de1fac70ffff56ff",
        "g": "71f4fc5cdd6fa5e1",
        "name": "DrivesSetup",
        "func": "let hopperId=msg.payload;\nlet driveId = global.get(`System.Hopper[${hopperId}].DriveID`);\nlet enabled = global.get(`System.Hopper[${hopperId}].Enabled`);\nglobal.set(`System.Drive[${hopperId}].Enabled`,enabled);\nglobal.set(`System.Drive[${hopperId}].ID`,driveId);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "dcb83891445e3ea8",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "71f4fc5cdd6fa5e1",
        "name": "",
        "links": [
            "3b97a8c8181c6e4b",
            "3fe25cd350043d94",
            "5c95b001da62f9ec",
            "7b791e120ee7e63e",
            "cac48189c9f8cb2b"
        ],
        "x": 115,
        "y": 2040,
        "wires": [
            [
                "50f98a1fac9e57a9"
            ]
        ]
    },
    {
        "id": "3ffb82316bbb357b",
        "type": "function",
        "z": "de1fac70ffff56ff",
        "g": "9709101fcf3468c9",
        "name": "DrivesSetup",
        "func": "let hoppers = global.get(\"System.Elements.Hoppers\");\nlet chId=msg.payload ;\n\nlet driveId = global.get(`System.Chemical[${chId}].DriveID`);\nlet enabled = global.get(`System.Chemical[${chId}].Enabled`);\nglobal.set(`System.Drive[${chId + hoppers}].Enabled`,enabled);\nglobal.set(`System.Drive[${chId + hoppers}].ID`,driveId);\n\nmsg.payload = chId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "3a1f41139af2e3a2",
        "type": "link in",
        "z": "de1fac70ffff56ff",
        "g": "9709101fcf3468c9",
        "name": "ChemicalSetup",
        "links": [
            "b5407181a3554174",
            "2f95881f867cc163",
            "509ad3b0dec90c34",
            "bc65445d988b2375",
            "9899383120754135"
        ],
        "x": 715,
        "y": 2040,
        "wires": [
            [
                "3ffb82316bbb357b"
            ]
        ]
    },
    {
        "id": "e01ffdce5d16bd8a",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "group": "45fbf332.fe716c",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Start Comm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "7cbc9d6efdf5e53f"
            ]
        ]
    },
    {
        "id": "7cbc9d6efdf5e53f",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "links": [
            "4bb08767c470679a",
            "7182b63d4e430f9a",
            "134dc4eed47e9a66",
            "3339db53fe28c810",
            "dbf43e9bd703a9eb",
            "35f5ea267ed2cfda"
        ],
        "x": 285,
        "y": 300,
        "wires": []
    },
    {
        "id": "944f5de46b3e660d",
        "type": "ui_button",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "group": "45fbf332.fe716c",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Stop Comm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "7d92d8e7c3957498"
            ]
        ]
    },
    {
        "id": "7d92d8e7c3957498",
        "type": "link out",
        "z": "de1fac70ffff56ff",
        "g": "35c1c4d8f6876131",
        "name": "",
        "links": [
            "62d957ca3202af38",
            "3cdc20b9ea0357dc",
            "d51fe73ad352bdc7",
            "6adfaa62cb6efc1d"
        ],
        "x": 505,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e880a154103e303",
        "type": "file",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "81c8028f83d4c809",
        "type": "file in",
        "z": "de1fac70ffff56ff",
        "g": "37cd45ca9cc094c2",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 1840,
        "wires": [
            [
                "dcdf9f5341f14a6a"
            ]
        ]
    },
    {
        "id": "ee8353cb.5f853",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Drive",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "359fe311.b919fc"
            ]
        ]
    },
    {
        "id": "89a2db7a.fc50c8",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 80,
        "wires": [
            [
                "ea6d3cd2.6b801"
            ]
        ]
    },
    {
        "id": "f5a51d25.13a72",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Speed (Hz)",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 7,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "ba7d191b.6604f8"
            ]
        ]
    },
    {
        "id": "44325c71.2715c4",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 5,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 420,
        "y": 140,
        "wires": [
            [
                "393a92cb.dfba9e"
            ]
        ]
    },
    {
        "id": "56a8b3cf.28abcc",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "d1269ce3.e23ee"
            ]
        ]
    },
    {
        "id": "acc4077d.10ff28",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 13,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "e6cbdf3c.a54c6"
            ]
        ]
    },
    {
        "id": "9654cca4.fac44",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 12,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 990,
        "y": 260,
        "wires": [
            [
                "a2d8ed69.8835b"
            ]
        ]
    },
    {
        "id": "171e8507.afd9ab",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Output",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 9,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 990,
        "y": 200,
        "wires": [
            [
                "5fc4105.b7e1df"
            ]
        ]
    },
    {
        "id": "4932a991.a80e78",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Drive",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "664df0b2.9c82e"
            ]
        ]
    },
    {
        "id": "5df2eb8.e07b114",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 440,
        "wires": [
            [
                "36b6ae90.5a2542"
            ]
        ]
    },
    {
        "id": "c2385d1d.e9c03",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Speed (Hz)",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 7,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 450,
        "y": 560,
        "wires": [
            [
                "11031eff.6cc2a1"
            ]
        ]
    },
    {
        "id": "bfabd0f0.d9d56",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 5,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 440,
        "y": 500,
        "wires": [
            [
                "607de52a.06e15c"
            ]
        ]
    },
    {
        "id": "fd5f7701.9c2898",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 430,
        "y": 680,
        "wires": [
            [
                "8bf0e52e.b52828"
            ]
        ]
    },
    {
        "id": "a3d3c1c2.aabb2",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 13,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 460,
        "y": 620,
        "wires": [
            [
                "e5cd2e10.ad4ec"
            ]
        ]
    },
    {
        "id": "879a89b2.a485a8",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 12,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "cb587c38.f9aa"
            ]
        ]
    },
    {
        "id": "94554160.a3e0e",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Output",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 9,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1010,
        "y": 560,
        "wires": [
            [
                "8664b8bc.dba5e8"
            ]
        ]
    },
    {
        "id": "14ac660f.b2a1ca",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Drive",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 970,
        "y": 820,
        "wires": [
            [
                "792c2d1b.6497e4"
            ]
        ]
    },
    {
        "id": "82c05204.efa9d",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "f84c9490.96d548"
            ]
        ]
    },
    {
        "id": "b9f8605f.6e462",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Speed (Hz)",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 7,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 430,
        "y": 940,
        "wires": [
            [
                "f8673f29.59c0e"
            ]
        ]
    },
    {
        "id": "c427f3fe.7b903",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 5,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 420,
        "y": 880,
        "wires": [
            [
                "486c6360.a7351c"
            ]
        ]
    },
    {
        "id": "aecfcfa6.71f5e",
        "type": "ui_switch",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "7332e220.47d08c"
            ]
        ]
    },
    {
        "id": "812d8fd8.09e01",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 13,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 440,
        "y": 1000,
        "wires": [
            [
                "1ffcff43.2c8d01"
            ]
        ]
    },
    {
        "id": "1f75aa62.1085d6",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 12,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1010,
        "y": 1000,
        "wires": [
            [
                "880681c1.9088b"
            ]
        ]
    },
    {
        "id": "57954394.42bccc",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Output",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 9,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 990,
        "y": 940,
        "wires": [
            [
                "85d4cbd3.a3dfe8"
            ]
        ]
    },
    {
        "id": "1aca3b9a.aa3434",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "label": "Work Time (s)",
        "tooltip": "",
        "group": "4e9f5fb8.33a0f",
        "order": 14,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "200",
        "step": "0.5",
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "b814a03e.a8aae"
            ]
        ]
    },
    {
        "id": "8f8f8058.af683",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "label": "Work Time (s)",
        "tooltip": "",
        "group": "d97f995.6541e68",
        "order": 14,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "step": "0.5",
        "x": 1020,
        "y": 500,
        "wires": [
            [
                "b9283fe8.70936"
            ]
        ]
    },
    {
        "id": "a8efc5b6.f48438",
        "type": "ui_numeric",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "label": "Work Time (s)",
        "tooltip": "",
        "group": "fe935d7b.39225",
        "order": 14,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 1020,
        "y": 880,
        "wires": [
            [
                "71967ef9.16cdc"
            ]
        ]
    },
    {
        "id": "3d11b235.a6b6ce",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 80,
        "wires": [
            [
                "89a2db7a.fc50c8"
            ]
        ]
    },
    {
        "id": "6b1dc9fe.5ccb48",
        "type": "link in",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "links": [
            "18270d0e69d0452d"
        ],
        "x": 135,
        "y": 80,
        "wires": [
            [
                "3d11b235.a6b6ce",
                "7d8b0c57.912df4",
                "6653639a.5a06ec",
                "9540e00.18aa62",
                "a9ab738d.aea96"
            ]
        ]
    },
    {
        "id": "7d8b0c57.912df4",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 140,
        "wires": [
            [
                "44325c71.2715c4"
            ]
        ]
    },
    {
        "id": "6653639a.5a06ec",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].DriveFrec",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "f5a51d25.13a72"
            ]
        ]
    },
    {
        "id": "9540e00.18aa62",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "acc4077d.10ff28"
            ]
        ]
    },
    {
        "id": "a9ab738d.aea96",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "56a8b3cf.28abcc"
            ]
        ]
    },
    {
        "id": "d1269ce3.e23ee",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e6cbdf3c.a54c6",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ba7d191b.6604f8",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].DriveFrec",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "393a92cb.dfba9e",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ea6d3cd2.6b801",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c7968e29.bafcb",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Drive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].HasDrive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "ee8353cb.5f853"
            ]
        ]
    },
    {
        "id": "afb38704.e092d8",
        "type": "link in",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "",
        "links": [
            "18270d0e69d0452d"
        ],
        "x": 695,
        "y": 80,
        "wires": [
            [
                "c7968e29.bafcb",
                "5728627e.c3966c",
                "33376198.26b9fe",
                "257a0083.a4e8d"
            ]
        ]
    },
    {
        "id": "5728627e.c3966c",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "WorkTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].WorkTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 140,
        "wires": [
            [
                "1aca3b9a.aa3434"
            ]
        ]
    },
    {
        "id": "33376198.26b9fe",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 200,
        "wires": [
            [
                "171e8507.afd9ab"
            ]
        ]
    },
    {
        "id": "257a0083.a4e8d",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[0].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "9654cca4.fac44"
            ]
        ]
    },
    {
        "id": "a2d8ed69.8835b",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5fc4105.b7e1df",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b814a03e.a8aae",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Work Time",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].WorkTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "359fe311.b919fc",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "f364af39.9d2f7",
        "name": "Drive",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[0].HasDrive",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "1a9e032f.0f6f8d",
        "type": "link in",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "links": [
            "18270d0e69d0452d"
        ],
        "x": 135,
        "y": 440,
        "wires": [
            [
                "cea603c3.8142f",
                "8f9ba8b7.b7e938",
                "c84fa9c.665da58",
                "7aa457f3.fbe448",
                "66743021.42d85"
            ]
        ]
    },
    {
        "id": "cea603c3.8142f",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "5df2eb8.e07b114"
            ]
        ]
    },
    {
        "id": "8f9ba8b7.b7e938",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 500,
        "wires": [
            [
                "bfabd0f0.d9d56"
            ]
        ]
    },
    {
        "id": "c84fa9c.665da58",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].DriveFrec",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 560,
        "wires": [
            [
                "c2385d1d.e9c03"
            ]
        ]
    },
    {
        "id": "7aa457f3.fbe448",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 620,
        "wires": [
            [
                "a3d3c1c2.aabb2"
            ]
        ]
    },
    {
        "id": "66743021.42d85",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 680,
        "wires": [
            [
                "fd5f7701.9c2898"
            ]
        ]
    },
    {
        "id": "8bf0e52e.b52828",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e5cd2e10.ad4ec",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "11031eff.6cc2a1",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].DriveFrec",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "607de52a.06e15c",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "36b6ae90.5a2542",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "298204ff.69465c",
        "type": "link in",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "",
        "links": [
            "18270d0e69d0452d"
        ],
        "x": 715,
        "y": 440,
        "wires": [
            [
                "618fd4fe.15525c",
                "30c15cf2.689074",
                "c4373b2b.2effd8",
                "130dadd0.e45302"
            ]
        ]
    },
    {
        "id": "618fd4fe.15525c",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Drive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].HasDrive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 440,
        "wires": [
            [
                "4932a991.a80e78"
            ]
        ]
    },
    {
        "id": "30c15cf2.689074",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "WorkTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].WorkTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 500,
        "wires": [
            [
                "8f8f8058.af683"
            ]
        ]
    },
    {
        "id": "c4373b2b.2effd8",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 560,
        "wires": [
            [
                "94554160.a3e0e"
            ]
        ]
    },
    {
        "id": "130dadd0.e45302",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[1].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 620,
        "wires": [
            [
                "879a89b2.a485a8"
            ]
        ]
    },
    {
        "id": "cb587c38.f9aa",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8664b8bc.dba5e8",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b9283fe8.70936",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Work Time",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].WorkTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "664df0b2.9c82e",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "5e32e7f9.f5e928",
        "name": "Drive",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[1].HasDrive",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5f689700.bb0748",
        "type": "link in",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "links": [
            "18270d0e69d0452d"
        ],
        "x": 135,
        "y": 820,
        "wires": [
            [
                "f2e5fb97.8e1b48",
                "3d086921.cd9e26",
                "ea22784b.b4f788",
                "b1075acc.a938b8",
                "cde8072d.cc2818"
            ]
        ]
    },
    {
        "id": "f2e5fb97.8e1b48",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 820,
        "wires": [
            [
                "82c05204.efa9d"
            ]
        ]
    },
    {
        "id": "3d086921.cd9e26",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 880,
        "wires": [
            [
                "c427f3fe.7b903"
            ]
        ]
    },
    {
        "id": "ea22784b.b4f788",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].DriveFrec",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 940,
        "wires": [
            [
                "b9f8605f.6e462"
            ]
        ]
    },
    {
        "id": "b1075acc.a938b8",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1000,
        "wires": [
            [
                "812d8fd8.09e01"
            ]
        ]
    },
    {
        "id": "cde8072d.cc2818",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "aecfcfa6.71f5e"
            ]
        ]
    },
    {
        "id": "7332e220.47d08c",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "1ffcff43.2c8d01",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "f8673f29.59c0e",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].DriveFrec",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "486c6360.a7351c",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "f84c9490.96d548",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "367d850d.83d84a",
        "type": "link in",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "",
        "links": [
            "18270d0e69d0452d"
        ],
        "x": 695,
        "y": 820,
        "wires": [
            [
                "f6429e70.f18f5",
                "4c2cbd18.db5fc4",
                "8ccc546d.b787e8",
                "e446a649.681828"
            ]
        ]
    },
    {
        "id": "f6429e70.f18f5",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Drive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].HasDrive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 820,
        "wires": [
            [
                "14ac660f.b2a1ca"
            ]
        ]
    },
    {
        "id": "4c2cbd18.db5fc4",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "WorkTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].WorkTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 880,
        "wires": [
            [
                "a8efc5b6.f48438"
            ]
        ]
    },
    {
        "id": "8ccc546d.b787e8",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 940,
        "wires": [
            [
                "57954394.42bccc"
            ]
        ]
    },
    {
        "id": "e446a649.681828",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Conveyor[2].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "1f75aa62.1085d6"
            ]
        ]
    },
    {
        "id": "880681c1.9088b",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "85d4cbd3.a3dfe8",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "71967ef9.16cdc",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Work Time",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].WorkTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "792c2d1b.6497e4",
        "type": "change",
        "z": "76d35c42.db5f64",
        "g": "89af0a97.014f08",
        "name": "Drive",
        "rules": [
            {
                "t": "set",
                "p": "System.Conveyor[2].HasDrive",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "4572697e.f7cf38",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "19ec5f4f.cc9001",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "d72a6921.5f8208"
            ]
        ]
    },
    {
        "id": "a5ffa498.ed7cf8",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "19ec5f4f.cc9001",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 120,
        "wires": [
            [
                "76dc670f.879768"
            ]
        ]
    },
    {
        "id": "c9535d9.247b6a",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Sensor delay (s)",
        "tooltip": "",
        "group": "19ec5f4f.cc9001",
        "order": 11,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 1100,
        "y": 120,
        "wires": [
            [
                "e8444a01.baef98"
            ]
        ]
    },
    {
        "id": "d39e68f6.15bb98",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Max Capacity yd3)",
        "tooltip": "",
        "group": "19ec5f4f.cc9001",
        "order": 3,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "step": "0.1",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "c1d27a4d.50a688"
            ]
        ]
    },
    {
        "id": "23cc7dfa.6ad242",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Batch Time (s)",
        "tooltip": "",
        "group": "19ec5f4f.cc9001",
        "order": 5,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "step": "0.5",
        "x": 440,
        "y": 200,
        "wires": [
            [
                "30715c4f.9d73e4"
            ]
        ]
    },
    {
        "id": "3e404b9c.e60d14",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Gate 3",
        "tooltip": "",
        "place": "Select option",
        "group": "19ec5f4f.cc9001",
        "order": 17,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "c165e765.c65b48"
            ]
        ]
    },
    {
        "id": "9cd8f303.0cbe6",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Gate 1",
        "tooltip": "",
        "place": "Select option",
        "group": "19ec5f4f.cc9001",
        "order": 13,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "ab11a254.34f18"
            ]
        ]
    },
    {
        "id": "64b1593f.93fac8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Gate 2",
        "tooltip": "",
        "place": "Select option",
        "group": "19ec5f4f.cc9001",
        "order": 15,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "438405c2.9a9d4c"
            ]
        ]
    },
    {
        "id": "3b1d14e8.c095cc",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "19ec5f4f.cc9001",
        "order": 9,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "b50c8905.01e648"
            ]
        ]
    },
    {
        "id": "38686a62.6c1316",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 95,
        "y": 120,
        "wires": [
            [
                "884084.97c65f8",
                "735a0098.0112",
                "230d0e4.c3212f2",
                "b5065d89.24643",
                "8251b66b.4c6fa8"
            ]
        ]
    },
    {
        "id": "884084.97c65f8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "a5ffa498.ed7cf8"
            ]
        ]
    },
    {
        "id": "735a0098.0112",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Batch.MaxSize",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "d39e68f6.15bb98"
            ]
        ]
    },
    {
        "id": "230d0e4.c3212f2",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Batch.TotalTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 200,
        "wires": [
            [
                "23cc7dfa.6ad242"
            ]
        ]
    },
    {
        "id": "b5065d89.24643",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 240,
        "wires": [
            [
                "4572697e.f7cf38"
            ]
        ]
    },
    {
        "id": "8251b66b.4c6fa8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 280,
        "wires": [
            [
                "3b1d14e8.c095cc"
            ]
        ]
    },
    {
        "id": "b50c8905.01e648",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d72a6921.5f8208",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "30715c4f.9d73e4",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Batch.TotalTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c1d27a4d.50a688",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Batch.MaxSize",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "76dc670f.879768",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "33847909.e0fb26",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 775,
        "y": 120,
        "wires": [
            [
                "7aa0dc80.7720d4",
                "b637fbfe.70bc08",
                "11a89dbb.6e1012",
                "620ea38b.c11d5c",
                "9a6b9e2a.650ac"
            ]
        ]
    },
    {
        "id": "7aa0dc80.7720d4",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Sensor.Delay",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 120,
        "wires": [
            [
                "c9535d9.247b6a"
            ]
        ]
    },
    {
        "id": "b637fbfe.70bc08",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Gate[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 160,
        "wires": [
            [
                "9cd8f303.0cbe6"
            ]
        ]
    },
    {
        "id": "11a89dbb.6e1012",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Gate[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "64b1593f.93fac8"
            ]
        ]
    },
    {
        "id": "620ea38b.c11d5c",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "3e404b9c.e60d14"
            ]
        ]
    },
    {
        "id": "c165e765.c65b48",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Gate[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "438405c2.9a9d4c",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Gate[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ab11a254.34f18",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate1",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Gate[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e8444a01.baef98",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[0].Sensor.Delay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "66d0284b.a4f2e8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "",
        "label": "Gate 4",
        "tooltip": "",
        "place": "Select option",
        "group": "19ec5f4f.cc9001",
        "order": 19,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "7f0ce707.ef5148"
            ]
        ]
    },
    {
        "id": "9a6b9e2a.650ac",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "66d0284b.a4f2e8"
            ]
        ]
    },
    {
        "id": "7f0ce707.ef5148",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "73e5e255.57fe8c",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "198aa3fa.c1c64c",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "14a65423.d6f2cc",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 540,
        "wires": [
            [
                "b2e7483f.795ec8"
            ]
        ]
    },
    {
        "id": "4b96ca5a.d5e4f4",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "14a65423.d6f2cc",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "9e962e0.11ebdd"
            ]
        ]
    },
    {
        "id": "82b9a3a1.c90c9",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Sensor delay (s)",
        "tooltip": "",
        "group": "14a65423.d6f2cc",
        "order": 11,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 1100,
        "y": 420,
        "wires": [
            [
                "decd7cb1.e924e"
            ]
        ]
    },
    {
        "id": "a28874d7.ac6ab8",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Max Capacity yd3)",
        "tooltip": "",
        "group": "14a65423.d6f2cc",
        "order": 3,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "step": "0.1",
        "x": 450,
        "y": 460,
        "wires": [
            [
                "a30e2ba9.648328"
            ]
        ]
    },
    {
        "id": "444a42c9.b2c0cc",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Batch Time (s)",
        "tooltip": "",
        "group": "14a65423.d6f2cc",
        "order": 5,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "step": "0.5",
        "x": 440,
        "y": 500,
        "wires": [
            [
                "c56a90ca.7d078"
            ]
        ]
    },
    {
        "id": "866daac1.d971a8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Gate 3",
        "tooltip": "",
        "place": "Select option",
        "group": "14a65423.d6f2cc",
        "order": 17,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 540,
        "wires": [
            [
                "79518717.a0eff8"
            ]
        ]
    },
    {
        "id": "9d1f58be.d483a8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Gate 1",
        "tooltip": "",
        "place": "Select option",
        "group": "14a65423.d6f2cc",
        "order": 13,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 460,
        "wires": [
            [
                "e0c819ff.1dd4d8"
            ]
        ]
    },
    {
        "id": "577dd298.c6dd1c",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Gate 2",
        "tooltip": "",
        "place": "Select option",
        "group": "14a65423.d6f2cc",
        "order": 15,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 500,
        "wires": [
            [
                "66e6df51.7cc17"
            ]
        ]
    },
    {
        "id": "4426691d.44e5c8",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "14a65423.d6f2cc",
        "order": 9,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 430,
        "y": 580,
        "wires": [
            [
                "12acb1f5.9adabe"
            ]
        ]
    },
    {
        "id": "25e9da6e.3ee6c6",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 95,
        "y": 420,
        "wires": [
            [
                "c7c8f14c.471cb",
                "b367dea2.d9a16",
                "d685fd44.7f4ba",
                "57278a66.340ef4",
                "bfdd8c7d.3f99a"
            ]
        ]
    },
    {
        "id": "c7c8f14c.471cb",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 420,
        "wires": [
            [
                "4b96ca5a.d5e4f4"
            ]
        ]
    },
    {
        "id": "b367dea2.d9a16",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Batch.MaxSize",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "a28874d7.ac6ab8"
            ]
        ]
    },
    {
        "id": "d685fd44.7f4ba",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Batch.TotalTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 500,
        "wires": [
            [
                "444a42c9.b2c0cc"
            ]
        ]
    },
    {
        "id": "57278a66.340ef4",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 540,
        "wires": [
            [
                "198aa3fa.c1c64c"
            ]
        ]
    },
    {
        "id": "bfdd8c7d.3f99a",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 580,
        "wires": [
            [
                "4426691d.44e5c8"
            ]
        ]
    },
    {
        "id": "12acb1f5.9adabe",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b2e7483f.795ec8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c56a90ca.7d078",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Batch.TotalTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a30e2ba9.648328",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Batch.MaxSize",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9e962e0.11ebdd",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7f6cd3ab.98327c",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 775,
        "y": 420,
        "wires": [
            [
                "ffe3bf12.cc86b",
                "6c46d1da.27b36",
                "451a35ae.390b1c",
                "b7c6eb3d.7c70f8",
                "873e48e6.18a6c8"
            ]
        ]
    },
    {
        "id": "ffe3bf12.cc86b",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Sensor.Delay",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 420,
        "wires": [
            [
                "82b9a3a1.c90c9"
            ]
        ]
    },
    {
        "id": "6c46d1da.27b36",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Gate[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 460,
        "wires": [
            [
                "9d1f58be.d483a8"
            ]
        ]
    },
    {
        "id": "451a35ae.390b1c",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Gate[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 500,
        "wires": [
            [
                "577dd298.c6dd1c"
            ]
        ]
    },
    {
        "id": "b7c6eb3d.7c70f8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 540,
        "wires": [
            [
                "866daac1.d971a8"
            ]
        ]
    },
    {
        "id": "79518717.a0eff8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Gate[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "66e6df51.7cc17",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Gate[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e0c819ff.1dd4d8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate1",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Gate[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "decd7cb1.e924e",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[1].Sensor.Delay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2b3cbc2b.484fe4",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "",
        "label": "Gate 4",
        "tooltip": "",
        "place": "Select option",
        "group": "14a65423.d6f2cc",
        "order": 19,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 580,
        "wires": [
            [
                "d58d24f3.497f08"
            ]
        ]
    },
    {
        "id": "873e48e6.18a6c8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 580,
        "wires": [
            [
                "2b3cbc2b.484fe4"
            ]
        ]
    },
    {
        "id": "d58d24f3.497f08",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "4fb353d9.a3f99c",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a0ab8be4.90f1a8",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "7f6b06e4.c2ab48",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "6f03ba50.ec6a34"
            ]
        ]
    },
    {
        "id": "d598c741.a70d08",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "7f6b06e4.c2ab48",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 700,
        "wires": [
            [
                "d726bd89.d4f0f"
            ]
        ]
    },
    {
        "id": "e4c70f7.efc17f",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Sensor delay (s)",
        "tooltip": "",
        "group": "7f6b06e4.c2ab48",
        "order": 11,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 1100,
        "y": 700,
        "wires": [
            [
                "e7405c98.e7c44"
            ]
        ]
    },
    {
        "id": "3d3817ce.9c6308",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Max Capacity yd3)",
        "tooltip": "",
        "group": "7f6b06e4.c2ab48",
        "order": 3,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "step": "0.1",
        "x": 450,
        "y": 740,
        "wires": [
            [
                "df0ff2fa.07981"
            ]
        ]
    },
    {
        "id": "743d948f.1f966c",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Batch Time (s)",
        "tooltip": "",
        "group": "7f6b06e4.c2ab48",
        "order": 5,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "step": "0.5",
        "x": 440,
        "y": 780,
        "wires": [
            [
                "ccff4d61.cee9a"
            ]
        ]
    },
    {
        "id": "b4cf45fb.e0f4f8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Gate 3",
        "tooltip": "",
        "place": "Select option",
        "group": "7f6b06e4.c2ab48",
        "order": 17,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 820,
        "wires": [
            [
                "8c6291c3.0aec7"
            ]
        ]
    },
    {
        "id": "31b459e3.5c1d26",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Gate 1",
        "tooltip": "",
        "place": "Select option",
        "group": "7f6b06e4.c2ab48",
        "order": 13,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 740,
        "wires": [
            [
                "278aba4f.62aae6"
            ]
        ]
    },
    {
        "id": "2605b547.d7d21a",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Gate 2",
        "tooltip": "",
        "place": "Select option",
        "group": "7f6b06e4.c2ab48",
        "order": 15,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "8cad3120.364d"
            ]
        ]
    },
    {
        "id": "cfe6cfb0.de6ab",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "7f6b06e4.c2ab48",
        "order": 9,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 430,
        "y": 860,
        "wires": [
            [
                "9097ea24.388448"
            ]
        ]
    },
    {
        "id": "189f19e3.df9086",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 95,
        "y": 700,
        "wires": [
            [
                "2154dbed.397724",
                "7c86cc8b.1d9e04",
                "740cb054.4906d",
                "bb57d568.0003e8",
                "3a24f1eb.c5c1be"
            ]
        ]
    },
    {
        "id": "2154dbed.397724",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 700,
        "wires": [
            [
                "d598c741.a70d08"
            ]
        ]
    },
    {
        "id": "7c86cc8b.1d9e04",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Batch.MaxSize",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 740,
        "wires": [
            [
                "3d3817ce.9c6308"
            ]
        ]
    },
    {
        "id": "740cb054.4906d",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Batch.TotalTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 780,
        "wires": [
            [
                "743d948f.1f966c"
            ]
        ]
    },
    {
        "id": "bb57d568.0003e8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 820,
        "wires": [
            [
                "a0ab8be4.90f1a8"
            ]
        ]
    },
    {
        "id": "3a24f1eb.c5c1be",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 860,
        "wires": [
            [
                "cfe6cfb0.de6ab"
            ]
        ]
    },
    {
        "id": "9097ea24.388448",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "6f03ba50.ec6a34",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ccff4d61.cee9a",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Batch.TotalTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "df0ff2fa.07981",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Batch.MaxSize",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d726bd89.d4f0f",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "b1765773.0cc1e8",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 775,
        "y": 700,
        "wires": [
            [
                "f46abb24.805af8",
                "4f039e14.ef9e4",
                "e207dcb2.fb406",
                "8f2edc44.c661d",
                "d2f098c2.3ae498"
            ]
        ]
    },
    {
        "id": "f46abb24.805af8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Sensor.Delay",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 700,
        "wires": [
            [
                "e4c70f7.efc17f"
            ]
        ]
    },
    {
        "id": "4f039e14.ef9e4",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Gate[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 740,
        "wires": [
            [
                "31b459e3.5c1d26"
            ]
        ]
    },
    {
        "id": "e207dcb2.fb406",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Gate[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 780,
        "wires": [
            [
                "2605b547.d7d21a"
            ]
        ]
    },
    {
        "id": "8f2edc44.c661d",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 820,
        "wires": [
            [
                "b4cf45fb.e0f4f8"
            ]
        ]
    },
    {
        "id": "8c6291c3.0aec7",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Gate[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "8cad3120.364d",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Gate[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "278aba4f.62aae6",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate1",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Gate[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "e7405c98.e7c44",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Sensor.Delay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "54b67729.a52cc8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "",
        "label": "Gate 4",
        "tooltip": "",
        "place": "Select option",
        "group": "7f6b06e4.c2ab48",
        "order": 19,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "48249b9d.7c4a24"
            ]
        ]
    },
    {
        "id": "d2f098c2.3ae498",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Gate[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 860,
        "wires": [
            [
                "54b67729.a52cc8"
            ]
        ]
    },
    {
        "id": "48249b9d.7c4a24",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6a104cad.23b5e4",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[2].Gate[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1260c912.56ad97",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "21bd38e9.a7df98",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 1100,
        "wires": [
            [
                "d356aab9.4d31d8"
            ]
        ]
    },
    {
        "id": "54ad3c1e.7dda24",
        "type": "ui_switch",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "21bd38e9.a7df98",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 980,
        "wires": [
            [
                "4806228a.9af8cc"
            ]
        ]
    },
    {
        "id": "17796aa4.520045",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Sensor delay (s)",
        "tooltip": "",
        "group": "21bd38e9.a7df98",
        "order": 11,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 1100,
        "y": 980,
        "wires": [
            [
                "980b750a.905528"
            ]
        ]
    },
    {
        "id": "dfe93138.9aa3a",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Max Capacity yd3)",
        "tooltip": "",
        "group": "21bd38e9.a7df98",
        "order": 3,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "step": "0.1",
        "x": 450,
        "y": 1020,
        "wires": [
            [
                "11de1fc0.314df"
            ]
        ]
    },
    {
        "id": "ed3eda4b.708c78",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Batch Time (s)",
        "tooltip": "",
        "group": "21bd38e9.a7df98",
        "order": 5,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "step": "0.5",
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "1d294433.7c82bc"
            ]
        ]
    },
    {
        "id": "16d14248.f68f8e",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Gate 3",
        "tooltip": "",
        "place": "Select option",
        "group": "21bd38e9.a7df98",
        "order": 17,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 1100,
        "wires": [
            [
                "9f4b7a22.55d1d8"
            ]
        ]
    },
    {
        "id": "e73fe439.b8c3a8",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Gate 1",
        "tooltip": "",
        "place": "Select option",
        "group": "21bd38e9.a7df98",
        "order": 13,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 1020,
        "wires": [
            [
                "dbb36704.cc8698"
            ]
        ]
    },
    {
        "id": "dddffc58.8465c",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Gate 2",
        "tooltip": "",
        "place": "Select option",
        "group": "21bd38e9.a7df98",
        "order": 15,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 1060,
        "wires": [
            [
                "c6ac2ce1.d4812"
            ]
        ]
    },
    {
        "id": "2d341030.7af6",
        "type": "ui_numeric",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "21bd38e9.a7df98",
        "order": 9,
        "width": 9,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "d7333a8d.5063e8"
            ]
        ]
    },
    {
        "id": "282223b2.6b4d4c",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 95,
        "y": 980,
        "wires": [
            [
                "c125012.fcafc",
                "b6455325.341fe",
                "4359ebf2.da1194",
                "c9552a78.ca7b38",
                "58f593a6.99389c"
            ]
        ]
    },
    {
        "id": "c125012.fcafc",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 980,
        "wires": [
            [
                "54ad3c1e.7dda24"
            ]
        ]
    },
    {
        "id": "b6455325.341fe",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Batch.MaxSize",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1020,
        "wires": [
            [
                "dfe93138.9aa3a"
            ]
        ]
    },
    {
        "id": "4359ebf2.da1194",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Batch.TotalTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1060,
        "wires": [
            [
                "ed3eda4b.708c78"
            ]
        ]
    },
    {
        "id": "c9552a78.ca7b38",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1100,
        "wires": [
            [
                "1260c912.56ad97"
            ]
        ]
    },
    {
        "id": "58f593a6.99389c",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1140,
        "wires": [
            [
                "2d341030.7af6"
            ]
        ]
    },
    {
        "id": "d7333a8d.5063e8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "d356aab9.4d31d8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "1d294433.7c82bc",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "BatchTotalTime",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Batch.TotalTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "11de1fc0.314df",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "MaxSize",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Batch.MaxSize",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "4806228a.9af8cc",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "3bcf4ec4.f2eec2",
        "type": "link in",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "links": [
            "d35bb1ec24dec9d4"
        ],
        "x": 775,
        "y": 980,
        "wires": [
            [
                "855ab5ed.a265d8",
                "33a51d1b.2dcd92",
                "a69b2821.231c18",
                "292a9b79.009f44",
                "f9a39b67.abe8e8"
            ]
        ]
    },
    {
        "id": "855ab5ed.a265d8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Sensor.Delay",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 980,
        "wires": [
            [
                "17796aa4.520045"
            ]
        ]
    },
    {
        "id": "33a51d1b.2dcd92",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Gate[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1020,
        "wires": [
            [
                "e73fe439.b8c3a8"
            ]
        ]
    },
    {
        "id": "a69b2821.231c18",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Gate[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "dddffc58.8465c"
            ]
        ]
    },
    {
        "id": "292a9b79.009f44",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1100,
        "wires": [
            [
                "16d14248.f68f8e"
            ]
        ]
    },
    {
        "id": "9f4b7a22.55d1d8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 3",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Gate[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "c6ac2ce1.d4812",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 2",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Gate[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "dbb36704.cc8698",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate1",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Gate[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "980b750a.905528",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Sensor Delay",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Sensor.Delay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "d27a0d23.b2039",
        "type": "ui_dropdown",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "",
        "label": "Gate 4",
        "tooltip": "",
        "place": "Select option",
        "group": "21bd38e9.a7df98",
        "order": 19,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Close",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Open",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Disabled",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 1140,
        "wires": [
            [
                "cd6f6dcd.a06d4"
            ]
        ]
    },
    {
        "id": "f9a39b67.abe8e8",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Gate[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "d27a0d23.b2039"
            ]
        ]
    },
    {
        "id": "cd6f6dcd.a06d4",
        "type": "change",
        "z": "3c8c08fb.d28dc8",
        "g": "6e355e97.be70f",
        "name": "Gate 4",
        "rules": [
            {
                "t": "set",
                "p": "System.FlatFiller[3].Gate[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "f3e155d8.3a4b48",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "label": "Bistable",
        "tooltip": "",
        "group": "c6869ac3.8dcbc8",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1100,
        "y": 80,
        "wires": [
            [
                "99c7c44b.1e0d38"
            ]
        ]
    },
    {
        "id": "12fd710c.476f7f",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "c6869ac3.8dcbc8",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 80,
        "wires": [
            [
                "eba1f327.53bbc"
            ]
        ]
    },
    {
        "id": "f4178c2a.23995",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "label": "Pulse Duration",
        "tooltip": "",
        "group": "c6869ac3.8dcbc8",
        "order": 5,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 440,
        "y": 120,
        "wires": [
            [
                "e19213c.53c2cf"
            ]
        ]
    },
    {
        "id": "347dcba5.fa0dc4",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "label": "Time to Start",
        "tooltip": "",
        "group": "c6869ac3.8dcbc8",
        "order": 11,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "1000",
        "step": 1,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "762740d9.d38a"
            ]
        ]
    },
    {
        "id": "98fbeeb1.8a961",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "label": "Bistable",
        "tooltip": "",
        "group": "825a2652.3a7e88",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1100,
        "y": 300,
        "wires": [
            [
                "9cfc357a.f52338"
            ]
        ]
    },
    {
        "id": "bb41de2f.d418d",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "825a2652.3a7e88",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "8375b13.858375"
            ]
        ]
    },
    {
        "id": "f63c65ab.164d18",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "label": "Pulse Duration",
        "tooltip": "",
        "group": "825a2652.3a7e88",
        "order": 5,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 460,
        "y": 340,
        "wires": [
            [
                "f8d37936.02f058"
            ]
        ]
    },
    {
        "id": "a017b9db.3431f8",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "label": "Time to Start",
        "tooltip": "",
        "group": "825a2652.3a7e88",
        "order": 11,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "1000",
        "step": 1,
        "x": 450,
        "y": 380,
        "wires": [
            [
                "78651311.8a2ddc"
            ]
        ]
    },
    {
        "id": "e4ffb365.c388a",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "label": "Bistable",
        "tooltip": "",
        "group": "7d0b6874.32e1e8",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1100,
        "y": 540,
        "wires": [
            [
                "6cfd7077.9aabd"
            ]
        ]
    },
    {
        "id": "3b3f8300.74148e",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "7d0b6874.32e1e8",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 540,
        "wires": [
            [
                "5720f1.68545f1"
            ]
        ]
    },
    {
        "id": "4492dd37.6073a4",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "label": "Pulse Duration",
        "tooltip": "",
        "group": "7d0b6874.32e1e8",
        "order": 5,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 460,
        "y": 580,
        "wires": [
            [
                "f2d5ca92.6a7428"
            ]
        ]
    },
    {
        "id": "df891140.69598",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "label": "Time to Start",
        "tooltip": "",
        "group": "7d0b6874.32e1e8",
        "order": 11,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "1000",
        "step": 1,
        "x": 430,
        "y": 620,
        "wires": [
            [
                "b1a21c86.8f7d1"
            ]
        ]
    },
    {
        "id": "f6da62db.8cebc",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "134123e0.7e366c",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 380,
        "y": 980,
        "wires": [
            [
                "1f4ce9e9.96bb86"
            ]
        ]
    },
    {
        "id": "56067aff.543564",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "",
        "label": "Time to Start",
        "tooltip": "",
        "group": "134123e0.7e366c",
        "order": 5,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "1000",
        "step": 1,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "6c772f6a.620e2"
            ]
        ]
    },
    {
        "id": "82ed2e44.dfdf",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "ba3e9a12.46c318",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "e2ae9d19.1d73e"
            ]
        ]
    },
    {
        "id": "4f075b38.89c454",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "",
        "label": "Time to Start",
        "tooltip": "",
        "group": "ba3e9a12.46c318",
        "order": 5,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "1000",
        "step": 1,
        "x": 1050,
        "y": 1060,
        "wires": [
            [
                "be5e21e3.d5045"
            ]
        ]
    },
    {
        "id": "50763c7a.ac4444",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "label": "Output Open",
        "tooltip": "",
        "group": "c6869ac3.8dcbc8",
        "order": 9,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "7ccb72bf.caef5c"
            ]
        ]
    },
    {
        "id": "da6e5162.302a6",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "label": "Output Close",
        "tooltip": "",
        "group": "c6869ac3.8dcbc8",
        "order": 7,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "baaf7a07.0eaa98"
            ]
        ]
    },
    {
        "id": "2ecabb4a.765c14",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "label": "Output Open",
        "tooltip": "",
        "group": "825a2652.3a7e88",
        "order": 9,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1110,
        "y": 380,
        "wires": [
            [
                "a9b6724d.fc0e3"
            ]
        ]
    },
    {
        "id": "a91044bb.c09948",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "label": "Output Close",
        "tooltip": "",
        "group": "825a2652.3a7e88",
        "order": 7,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "1398e2d4.6a53dd"
            ]
        ]
    },
    {
        "id": "bca7fe77.3ddc8",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "label": "Output Open",
        "tooltip": "",
        "group": "7d0b6874.32e1e8",
        "order": 9,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1110,
        "y": 620,
        "wires": [
            [
                "c103324f.768ea"
            ]
        ]
    },
    {
        "id": "8738d725.979558",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "label": "Output Close",
        "tooltip": "",
        "group": "7d0b6874.32e1e8",
        "order": 7,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1130,
        "y": 580,
        "wires": [
            [
                "8a65f9bb.c6b1a8"
            ]
        ]
    },
    {
        "id": "ebae46b.3ce6bb8",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "",
        "label": "Output",
        "tooltip": "",
        "group": "ba3e9a12.46c318",
        "order": 3,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1030,
        "y": 1020,
        "wires": [
            [
                "ad392a26.8a2c78"
            ]
        ]
    },
    {
        "id": "54073fbb.b6892",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "",
        "label": "Output ",
        "tooltip": "",
        "group": "134123e0.7e366c",
        "order": 3,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "c7dce854.7ff8b8"
            ]
        ]
    },
    {
        "id": "67b816a7.823c98",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 115,
        "y": 80,
        "wires": [
            [
                "f297beb0.8e899",
                "ff0d50d4.46578",
                "e58ec5d0.42cbb8"
            ]
        ]
    },
    {
        "id": "f297beb0.8e899",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 80,
        "wires": [
            [
                "12fd710c.476f7f"
            ]
        ]
    },
    {
        "id": "ff0d50d4.46578",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[0].PulseDuration",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "f4178c2a.23995"
            ]
        ]
    },
    {
        "id": "e58ec5d0.42cbb8",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[0].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "347dcba5.fa0dc4"
            ]
        ]
    },
    {
        "id": "762740d9.d38a",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "TTS",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[0].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e19213c.53c2cf",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[0].PulseDuration",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "eba1f327.53bbc",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6700e306.09870c",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 795,
        "y": 80,
        "wires": [
            [
                "7eea3de5.17ecd4",
                "9c903f0b.5949c",
                "200c4f85.cc6c9"
            ]
        ]
    },
    {
        "id": "7eea3de5.17ecd4",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[0].Bistable",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 80,
        "wires": [
            [
                "f3e155d8.3a4b48"
            ]
        ]
    },
    {
        "id": "9c903f0b.5949c",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Output Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[0].OutputClose",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 120,
        "wires": [
            [
                "da6e5162.302a6"
            ]
        ]
    },
    {
        "id": "200c4f85.cc6c9",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[0].OutputOpen",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 160,
        "wires": [
            [
                "50763c7a.ac4444"
            ]
        ]
    },
    {
        "id": "99c7c44b.1e0d38",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[0].Bistable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "baaf7a07.0eaa98",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "OutputClose",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[0].OutputClose",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7ccb72bf.caef5c",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "b8af4779.5bff48",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[0].OutputOpen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "878cd084.49e95",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 115,
        "y": 300,
        "wires": [
            [
                "c03dcc77.33e9c",
                "eb683405.de5148",
                "6a19f2da.d2a73c"
            ]
        ]
    },
    {
        "id": "c03dcc77.33e9c",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 300,
        "wires": [
            [
                "bb41de2f.d418d"
            ]
        ]
    },
    {
        "id": "eb683405.de5148",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[1].PulseDuration",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 340,
        "wires": [
            [
                "f63c65ab.164d18"
            ]
        ]
    },
    {
        "id": "6a19f2da.d2a73c",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[1].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 380,
        "wires": [
            [
                "a017b9db.3431f8"
            ]
        ]
    },
    {
        "id": "8375b13.858375",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f8d37936.02f058",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[1].PulseDuration",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "78651311.8a2ddc",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "TTS",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[1].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f6cb38ed.0359d8",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[1].Bistable",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 300,
        "wires": [
            [
                "98fbeeb1.8a961"
            ]
        ]
    },
    {
        "id": "5fe8b5a3.2dc9ac",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 795,
        "y": 300,
        "wires": [
            [
                "f6cb38ed.0359d8",
                "c76f36dc.d26ee8",
                "e6da1cfc.d4cdc"
            ]
        ]
    },
    {
        "id": "c76f36dc.d26ee8",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Output Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[1].OutputClose",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 340,
        "wires": [
            [
                "a91044bb.c09948"
            ]
        ]
    },
    {
        "id": "e6da1cfc.d4cdc",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[1].OutputOpen",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 380,
        "wires": [
            [
                "2ecabb4a.765c14"
            ]
        ]
    },
    {
        "id": "9cfc357a.f52338",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[1].Bistable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1398e2d4.6a53dd",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "OutputClose",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[1].OutputClose",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a9b6724d.fc0e3",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "733dfd4b.dbe184",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[1].OutputOpen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2cb33f2e.0f31d",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 115,
        "y": 540,
        "wires": [
            [
                "cbe9029e.0c31e",
                "c3cf5a49.665968",
                "bbac1367.58f31"
            ]
        ]
    },
    {
        "id": "cbe9029e.0c31e",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 540,
        "wires": [
            [
                "3b3f8300.74148e"
            ]
        ]
    },
    {
        "id": "c3cf5a49.665968",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[2].PulseDuration",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 580,
        "wires": [
            [
                "4492dd37.6073a4"
            ]
        ]
    },
    {
        "id": "bbac1367.58f31",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[2].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 620,
        "wires": [
            [
                "df891140.69598"
            ]
        ]
    },
    {
        "id": "5720f1.68545f1",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "f2d5ca92.6a7428",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[2].PulseDuration",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b1a21c86.8f7d1",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "TTS",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[2].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8bb3bf91.fcdc6",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[2].Bistable",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 540,
        "wires": [
            [
                "e4ffb365.c388a"
            ]
        ]
    },
    {
        "id": "a77c013b.3402",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 795,
        "y": 540,
        "wires": [
            [
                "8bb3bf91.fcdc6",
                "6c4ea681.95ce18",
                "3b3029e0.caa786"
            ]
        ]
    },
    {
        "id": "6c4ea681.95ce18",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Output Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[2].OutputClose",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 580,
        "wires": [
            [
                "8738d725.979558"
            ]
        ]
    },
    {
        "id": "3b3029e0.caa786",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[2].OutputOpen",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 620,
        "wires": [
            [
                "bca7fe77.3ddc8"
            ]
        ]
    },
    {
        "id": "6cfd7077.9aabd",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[2].Bistable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8a65f9bb.c6b1a8",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "OutputClose",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[2].OutputClose",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "c103324f.768ea",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "5556813e.33673",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[2].OutputOpen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "203b16d7.9bb62a",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 95,
        "y": 980,
        "wires": [
            [
                "19a405f2.1effea",
                "f2b39d96.66715",
                "7027e3b7.a8ba9c"
            ]
        ]
    },
    {
        "id": "19a405f2.1effea",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Water[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 980,
        "wires": [
            [
                "f6da62db.8cebc"
            ]
        ]
    },
    {
        "id": "f2b39d96.66715",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Water[0].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "56067aff.543564"
            ]
        ]
    },
    {
        "id": "1f4ce9e9.96bb86",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Water[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "c7dce854.7ff8b8",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Water[0].Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "6c772f6a.620e2",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "System.Water[0].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "7027e3b7.a8ba9c",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "f755b3cc.dba84",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Water[0].Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "54073fbb.b6892"
            ]
        ]
    },
    {
        "id": "f1feb7db.6aeba8",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 755,
        "y": 980,
        "wires": [
            [
                "ed8e91e.f52257",
                "5c8c5ac2.900c84",
                "32a2e19b.d6deae"
            ]
        ]
    },
    {
        "id": "ed8e91e.f52257",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Water[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 980,
        "wires": [
            [
                "82ed2e44.dfdf"
            ]
        ]
    },
    {
        "id": "32a2e19b.d6deae",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Water[1].Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "ebae46b.3ce6bb8"
            ]
        ]
    },
    {
        "id": "5c8c5ac2.900c84",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Water[1].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "4f075b38.89c454"
            ]
        ]
    },
    {
        "id": "e2ae9d19.1d73e",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Water[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "ad392a26.8a2c78",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Water[1].Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "be5e21e3.d5045",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "2425a841.054778",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "System.Water[1].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "9a796ce.56c279",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "label": "Bistable",
        "tooltip": "",
        "group": "898b9ee8.800c4",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1100,
        "y": 740,
        "wires": [
            [
                "2a968f9e.bd30b"
            ]
        ]
    },
    {
        "id": "cfc89d62.da84f",
        "type": "ui_switch",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "898b9ee8.800c4",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 740,
        "wires": [
            [
                "42fa81c4.5b45e"
            ]
        ]
    },
    {
        "id": "d7bf0223.c9161",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "label": "Pulse Duration",
        "tooltip": "",
        "group": "898b9ee8.800c4",
        "order": 5,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "60",
        "step": 1,
        "x": 460,
        "y": 780,
        "wires": [
            [
                "39a5f2ce.4fad3e"
            ]
        ]
    },
    {
        "id": "587b6c80.c18424",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "label": "Time to Start",
        "tooltip": "",
        "group": "898b9ee8.800c4",
        "order": 11,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "1000",
        "step": 1,
        "x": 430,
        "y": 820,
        "wires": [
            [
                "2c5ed2ae.d6d92e"
            ]
        ]
    },
    {
        "id": "b9fb846c.c55ee8",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "label": "Output Open",
        "tooltip": "",
        "group": "898b9ee8.800c4",
        "order": 9,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1110,
        "y": 820,
        "wires": [
            [
                "28a421e6.a3c5ae"
            ]
        ]
    },
    {
        "id": "96997aee.9d2c58",
        "type": "ui_numeric",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "label": "Output Close",
        "tooltip": "",
        "group": "898b9ee8.800c4",
        "order": 7,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "f0d4f78f.4cbf88"
            ]
        ]
    },
    {
        "id": "32d24c3c.2e7804",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 115,
        "y": 740,
        "wires": [
            [
                "739755b0.44cb4c",
                "e5ea0d49.787eb",
                "8c46f3e.6a3541"
            ]
        ]
    },
    {
        "id": "739755b0.44cb4c",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 740,
        "wires": [
            [
                "cfc89d62.da84f"
            ]
        ]
    },
    {
        "id": "e5ea0d49.787eb",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[3].PulseDuration",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 780,
        "wires": [
            [
                "d7bf0223.c9161"
            ]
        ]
    },
    {
        "id": "8c46f3e.6a3541",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Time to start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[3].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 820,
        "wires": [
            [
                "587b6c80.c18424"
            ]
        ]
    },
    {
        "id": "42fa81c4.5b45e",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "39a5f2ce.4fad3e",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Pulse Duration",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[3].PulseDuration",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "2c5ed2ae.d6d92e",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "TTS",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[3].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "18cb201b.4749f",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[3].Bistable",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 740,
        "wires": [
            [
                "9a796ce.56c279"
            ]
        ]
    },
    {
        "id": "1a8b645d.228ddc",
        "type": "link in",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "",
        "links": [
            "381bffa66851542d",
            "774304eed0adc85e",
            "de9082933ee2d03c"
        ],
        "x": 795,
        "y": 740,
        "wires": [
            [
                "18cb201b.4749f",
                "f9b9b7f7.fa2b68",
                "1ddca9fe.be3b36"
            ]
        ]
    },
    {
        "id": "f9b9b7f7.fa2b68",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Output Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[3].OutputClose",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 780,
        "wires": [
            [
                "96997aee.9d2c58"
            ]
        ]
    },
    {
        "id": "1ddca9fe.be3b36",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Gate[3].OutputOpen",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 820,
        "wires": [
            [
                "b9fb846c.c55ee8"
            ]
        ]
    },
    {
        "id": "2a968f9e.bd30b",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Bistable",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[3].Bistable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f0d4f78f.4cbf88",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "OutputClose",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[3].OutputClose",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "28a421e6.a3c5ae",
        "type": "change",
        "z": "f463037c.8482c",
        "g": "bf7a0892.314b58",
        "name": "Output Open",
        "rules": [
            {
                "t": "set",
                "p": "System.Gate[3].OutputOpen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "aaa604bfbf2a1030",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "Load Recipes",
        "func": "let tab = msg.name;\nif(tab != \"Recipes\")\n return;\n \nmsg.payload=global.get(\"Recipe\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "79ee43488901fa85",
                "74bbb9a4ce128830"
            ]
        ]
    },
    {
        "id": "22e403c4141d7a1e",
        "type": "inject",
        "z": "d0dd21499ec263d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "aaa604bfbf2a1030"
            ]
        ]
    },
    {
        "id": "79ee43488901fa85",
        "type": "ui_table",
        "z": "d0dd21499ec263d9",
        "group": "3c9e6e0c.e3e802",
        "name": "Recipes",
        "order": 1,
        "width": 5,
        "height": 12,
        "columns": [
            {
                "field": "Number",
                "title": "#",
                "width": "30px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Name",
                "title": "Mix",
                "width": "70px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 740,
        "y": 140,
        "wires": [
            [
                "824614abf9fd861d",
                "e5a63b40e3c3b99a",
                "3226b7d21016d628",
                "56efca6ab86f50e2",
                "9356fb8b87aea599"
            ]
        ]
    },
    {
        "id": "2665bee72c97b41d",
        "type": "ui_table",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "name": "Details",
        "order": 6,
        "width": 23,
        "height": 1,
        "columns": [
            {
                "field": "Hopper.0",
                "title": "Soil 1 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.1",
                "title": "Soil 2 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.2",
                "title": "Soil 3 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.3",
                "title": "Soil 4 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.4",
                "title": "Soil 5  (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "824614abf9fd861d",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "Recipe Details",
        "func": "if(msg.topic ==\"bypass\"){\n    return msg;\n}\nvar recipe =[];\nrecipe.push(msg.payload);\nflow.set(\"recipe\",recipe)\nmsg.payload = recipe;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 160,
        "wires": [
            [
                "2665bee72c97b41d",
                "6fc33d2780ebb7ed",
                "f8103f62741de55a"
            ]
        ]
    },
    {
        "id": "6fc33d2780ebb7ed",
        "type": "ui_table",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "name": "Details",
        "order": 7,
        "width": 23,
        "height": 1,
        "columns": [
            {
                "field": "Chemical.0",
                "title": "Chem 1 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.1",
                "title": "Chem 2 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.2",
                "title": "Chem 3 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.3",
                "title": "Chem 4 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.4",
                "title": "Chem 5 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1210,
        "y": 180,
        "wires": []
    },
    {
        "id": "e5a63b40e3c3b99a",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Recipe No:",
        "format": "{{msg.payload.Number}}",
        "layout": "row-spread",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "3226b7d21016d628",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 16,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Mix:",
        "format": "{{msg.payload.Name}}",
        "layout": "row-left",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "73238ba915699427",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Bin 1",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 27,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 390,
        "y": 520,
        "wires": [
            [
                "ed66aec2d9da6881"
            ]
        ]
    },
    {
        "id": "08b5a8e9a9c64210",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Bin  2",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 34,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "61ff6f62d06065b9"
            ]
        ]
    },
    {
        "id": "ea76ec6c8e6f75e3",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Bin 3",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 39,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "91748ca45185f392"
            ]
        ]
    },
    {
        "id": "bbe38da54ad27ee1",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Bin 4",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 46,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 390,
        "y": 700,
        "wires": [
            [
                "6eb3c4f32aa202d4"
            ]
        ]
    },
    {
        "id": "76131f927071d9f1",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Bin 5",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 51,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 390,
        "y": 760,
        "wires": [
            [
                "80b5a73ad5ca6282"
            ]
        ]
    },
    {
        "id": "9b20c6822edd5673",
        "type": "ui_text_input",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Soil bins (%)",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 22,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4122b664b8afc75b",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "CH 1",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 29,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "x": 890,
        "y": 520,
        "wires": [
            [
                "56596413bad44799"
            ]
        ]
    },
    {
        "id": "be26c43952578b75",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "CH 2",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 36,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "x": 890,
        "y": 580,
        "wires": [
            [
                "40cd9291d8085862"
            ]
        ]
    },
    {
        "id": "a05437a7e06ccd86",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "CH 3",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 41,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "x": 890,
        "y": 640,
        "wires": [
            [
                "1c7c8c1085be78cc"
            ]
        ]
    },
    {
        "id": "ff39bd1875541453",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "CH 4",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 48,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "x": 890,
        "y": 700,
        "wires": [
            [
                "cf998d91538cc7a1"
            ]
        ]
    },
    {
        "id": "aa9189a1ac21cb33",
        "type": "ui_numeric",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "CH 5",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 53,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "0.1",
        "x": 890,
        "y": 760,
        "wires": [
            [
                "0d962f37a290c5dc"
            ]
        ]
    },
    {
        "id": "d3ad652db5b4ff63",
        "type": "ui_text_input",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Chemicals (lbs)",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 24,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 840,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "07386d97578758b5",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "name": "",
        "group": "c64e2512.e32f78",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Edit Recipe",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "c748b21d5d79b426",
                "8e27a00a36d1bc4b"
            ]
        ]
    },
    {
        "id": "ee2ee2ce534b9949",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "name": "",
        "group": "c64e2512.e32f78",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Save Changes",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "e5a8d42ca87c5d0e",
                "adc4510ce5ad9e4e"
            ]
        ]
    },
    {
        "id": "d6c0685ad3d612c4",
        "type": "ui_text_input",
        "z": "d0dd21499ec263d9",
        "name": "",
        "label": "Mix",
        "tooltip": "",
        "group": "c64e2512.e32f78",
        "order": 17,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 420,
        "wires": [
            [
                "a67cd05c8c3fb0a3"
            ]
        ]
    },
    {
        "id": "a137b8bba8f6574a",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "name": "",
        "group": "c64e2512.e32f78",
        "order": 19,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "--> Line 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "Line 1",
        "topicType": "str",
        "x": 400,
        "y": 940,
        "wires": [
            [
                "9a77bc121a264b5f"
            ]
        ]
    },
    {
        "id": "6799db043c26ac0f",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "name": "",
        "group": "c64e2512.e32f78",
        "order": 31,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "--> Line 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "Line 2",
        "topicType": "str",
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "9a77bc121a264b5f"
            ]
        ]
    },
    {
        "id": "d33e806873836499",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "name": "",
        "group": "c64e2512.e32f78",
        "order": 43,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "--> Line 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "Line 3",
        "topicType": "str",
        "x": 400,
        "y": 1060,
        "wires": [
            [
                "9a77bc121a264b5f"
            ]
        ]
    },
    {
        "id": "0e3e7b632e3b109b",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "name": "",
        "group": "c64e2512.e32f78",
        "order": 55,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "--> Line  4",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "Line 4",
        "topicType": "str",
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "9a77bc121a264b5f"
            ]
        ]
    },
    {
        "id": "56efca6ab86f50e2",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Mix",
        "format": "{{msg.payload.Name}}",
        "layout": "row-spread",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "963b0cd436394231",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 20,
        "width": 4,
        "height": 1,
        "name": "FF1",
        "label": "",
        "format": "Mix {{msg.payload}}",
        "layout": "row-center",
        "x": 1230,
        "y": 920,
        "wires": []
    },
    {
        "id": "c941f682981b6550",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 32,
        "width": 4,
        "height": 1,
        "name": "FF2",
        "label": "",
        "format": "Mix {{msg.payload}}",
        "layout": "row-center",
        "x": 1230,
        "y": 980,
        "wires": []
    },
    {
        "id": "4c5ebe157abf66c3",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 44,
        "width": 4,
        "height": 1,
        "name": "FF3",
        "label": "",
        "format": "Mix {{msg.payload}}",
        "layout": "row-center",
        "x": 1230,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c2b05e7f45b1dc8e",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 56,
        "width": 4,
        "height": 1,
        "name": "FF4",
        "label": "",
        "format": "Mix {{msg.payload}}",
        "layout": "row-center",
        "x": 1230,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ae97b3e36125eccc",
        "type": "ui_text",
        "z": "d0dd21499ec263d9",
        "group": "c64e2512.e32f78",
        "order": 13,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Assing to Lines",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 400,
        "y": 880,
        "wires": []
    },
    {
        "id": "b065b9af1506ca48",
        "type": "ui_ui_control",
        "z": "d0dd21499ec263d9",
        "name": "",
        "events": "all",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "aaa604bfbf2a1030"
            ]
        ]
    },
    {
        "id": "abc7a0959309f203",
        "type": "link out",
        "z": "d0dd21499ec263d9",
        "name": "Recipe details out",
        "links": [
            "6b86d00183a9e9ae",
            "564879818647abd7",
            "e6a67b6.eb32f88",
            "82347a6dfa87c138"
        ],
        "x": 1315,
        "y": 220,
        "wires": []
    },
    {
        "id": "f8103f62741de55a",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "abc7a0959309f203"
            ]
        ]
    },
    {
        "id": "6b86d00183a9e9ae",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "abc7a0959309f203",
            "5f7ce9b12a4863ff"
        ],
        "x": 95,
        "y": 440,
        "wires": [
            [
                "78afb4d4f7d17e94",
                "3f6ff07bd9130ea9",
                "e67b1a2df70f2f6b",
                "78f41e731d611e01",
                "ec6b59f6528e5db3",
                "80d7bdb7eeafa88d"
            ]
        ]
    },
    {
        "id": "78afb4d4f7d17e94",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Mix",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "d6c0685ad3d612c4"
            ]
        ]
    },
    {
        "id": "c748b21d5d79b426",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "recipe",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "5f7ce9b12a4863ff"
            ]
        ]
    },
    {
        "id": "5f7ce9b12a4863ff",
        "type": "link out",
        "z": "d0dd21499ec263d9",
        "name": "Recipe enabled true",
        "links": [
            "6b86d00183a9e9ae",
            "564879818647abd7",
            "e6a67b6.eb32f88",
            "82347a6dfa87c138"
        ],
        "x": 595,
        "y": 280,
        "wires": []
    },
    {
        "id": "3f6ff07bd9130ea9",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hopper[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 520,
        "wires": [
            [
                "73238ba915699427"
            ]
        ]
    },
    {
        "id": "e67b1a2df70f2f6b",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hopper[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 580,
        "wires": [
            [
                "08b5a8e9a9c64210"
            ]
        ]
    },
    {
        "id": "78f41e731d611e01",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hopper[2]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 640,
        "wires": [
            [
                "ea76ec6c8e6f75e3"
            ]
        ]
    },
    {
        "id": "ec6b59f6528e5db3",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hopper[3]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 700,
        "wires": [
            [
                "bbe38da54ad27ee1"
            ]
        ]
    },
    {
        "id": "80d7bdb7eeafa88d",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hopper[4]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 760,
        "wires": [
            [
                "76131f927071d9f1"
            ]
        ]
    },
    {
        "id": "564879818647abd7",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "abc7a0959309f203",
            "5f7ce9b12a4863ff"
        ],
        "x": 655,
        "y": 440,
        "wires": [
            [
                "8d1c4a4c8a8a5d53",
                "129dcc439b40c85f",
                "b7528039de62daef",
                "299d17f8960e4903",
                "c7886a75c08f5892"
            ]
        ]
    },
    {
        "id": "8d1c4a4c8a8a5d53",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Chemical[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "4122b664b8afc75b"
            ]
        ]
    },
    {
        "id": "129dcc439b40c85f",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Chemical[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 580,
        "wires": [
            [
                "be26c43952578b75"
            ]
        ]
    },
    {
        "id": "b7528039de62daef",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Chemical[2]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "a05437a7e06ccd86"
            ]
        ]
    },
    {
        "id": "299d17f8960e4903",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Chemical[3]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 700,
        "wires": [
            [
                "ff39bd1875541453"
            ]
        ]
    },
    {
        "id": "c7886a75c08f5892",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Chemical[4]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 760,
        "wires": [
            [
                "aa9189a1ac21cb33"
            ]
        ]
    },
    {
        "id": "ed66aec2d9da6881",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 0",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Hopper[0]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "61ff6f62d06065b9",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 1",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Hopper[1]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "91748ca45185f392",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 2",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Hopper[2]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6eb3c4f32aa202d4",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 3",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Hopper[3]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "80b5a73ad5ca6282",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Hopper 4",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Hopper[4]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "56596413bad44799",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 0",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Chemical[0]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "40cd9291d8085862",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 1",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Chemical[1]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "1c7c8c1085be78cc",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 2",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Chemical[2]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "cf998d91538cc7a1",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 3",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Chemical[3]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "0d962f37a290c5dc",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 4",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Chemical[4]",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a67cd05c8c3fb0a3",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "CH 0",
        "rules": [
            {
                "t": "set",
                "p": "recipe[0].Name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e5a8d42ca87c5d0e",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "Save recipe",
        "func": "\nlet recipe = flow.get(\"recipe\");\nlet id = recipe[0].id;\n\nglobal.set(`Recipe[${id}]`,recipe[0])\n\nmsg.name = \"Recipes\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nlet Hoppers = global.get(\"System.Elements.Hoppers\");\nlet Chemicals = global.get(\"System.Elements.Chemicals\")\n\n/*Recipe*/\n\n    flow.set(`recipe[0].Number`,1);\n    flow.set(`recipe[0].Name`,\"\");\n    for (let j=0;j<Hoppers;j++){\n        flow.set(`recipe[0].Hopper[${j}]`,0);\n    }\n    for (let j=0;j<Chemicals;j++){\n        flow.set(`recipe[0].Chemical[${j}]`,0);\n    }\n\n\nreturn ;",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "aaa604bfbf2a1030",
                "b940c98808c24dcd"
            ]
        ]
    },
    {
        "id": "8e27a00a36d1bc4b",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "79ee43488901fa85",
                "11ba1ce5e91ac169"
            ]
        ]
    },
    {
        "id": "b940c98808c24dcd",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "79ee43488901fa85",
                "37ac7f2104b2a56d",
                "fe8af89a74a66379"
            ]
        ]
    },
    {
        "id": "37ac7f2104b2a56d",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "Recipe",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "recipe",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bypass",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "824614abf9fd861d"
            ]
        ]
    },
    {
        "id": "adc4510ce5ad9e4e",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "ee2ee2ce534b9949"
            ]
        ]
    },
    {
        "id": "82347a6dfa87c138",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "5f7ce9b12a4863ff",
            "abc7a0959309f203"
        ],
        "x": 95,
        "y": 140,
        "wires": [
            [
                "ee2ee2ce534b9949"
            ]
        ]
    },
    {
        "id": "9a77bc121a264b5f",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "Check recipe errors",
        "func": "let line;\nswitch(msg.topic){\n    case \"Line 1\":\n        line = 0;\n        break;\n    case \"Line 2\":\n        line = 1\n        break;\n    case \"Line 3\":\n        line = 2\n        break;\n    case \"Line 4\":\n        line = 3\n        break;\n}\n\nlet recipe = flow.get(\"recipe[0]\");\nlet hoppers = global.get(\"System.Elements.Hoppers\")\nlet chemicals = global.get(\"System.Elements.Chemicals\")\nlet hopper = global.get(\"System.Hopper\");\nlet chemical = global.get(\"System.Chemical\");\nlet faults = global.get(\"System.Fault.Faults\");\n\n/*Check bulk = 100 %*/\nlet bulk = 0;\nfor(let i=0; i<hoppers; i++){\n    if(hopper[i].Enabled){\n        bulk += recipe.Hopper[i];\n    }\n    \n}\nif (bulk != 100){\n   \n    let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n    fault.Message = `Bulk error, sum of bins must be 100%`;\n    node.error(fault.Message, msg);\n    fault.Code = 1000;\n    faults.push(fault);\n    global.set(\"System.Mode.Fault\",true);\n    global.set(\"System.Fault.Stop\",true);\n    global.set(\"System.Fault.RecipeCode\",fault.Code);\n    global.set(\"System.Fault.Code\",4);\n    global.set(`System.FlatFiller[${line}].Recipe.Load`, false);\n    return;\n}\nfor (let i=0; i<chemicals; i++){\n    if(chemical[i].Enabled && recipe.Chemical[i] > chemical[i].FC){\n        let fault = {DateTime:new Date() , Type:\"Config Error\", Code:0, Message:\"\", Ack:false};\n        fault.Message = `Chemical ${i+1} error, Quantity exceed capacity`;\n        node.error(fault.Message, msg);\n        fault.Code = 2000 + i;\n        faults.push(fault);\n        global.set(\"System.Mode.Fault\",true);\n        global.set(\"System.Fault.Stop\",true);\n        global.set(\"System.Fault.RecipeCode\",fault.Code);\n        global.set(\"System.Fault.Code\",4);\n        global.set(`System.FlatFiller[${line}].Recipe.Load`, false);\n        return ;\n        \n    }\n}\n\nglobal.set(\"System.Fault.RecipeCode\",0);\nmsg.recipe = recipe;\nmsg.payload = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1000,
        "wires": [
            [
                "bf65629463c27afe",
                "f6b746d82606201e",
                "5bf76ac239f9ece9",
                "c7d7a6a05f2699e5"
            ]
        ]
    },
    {
        "id": "bf65629463c27afe",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "Load Recipe ",
        "func": "let line =0;\n\nswitch(msg.topic){\n    case \"Line 1\":\n        line = 0;\n        break;\n    case \"Line 2\":\n        line = 1\n        break;\n    case \"Line 3\":\n        line = 2\n        break;\n    case \"Line 4\":\n        line = 3\n        break;\n}\n\nmsg.payload = line;\n\n\nlet recipe = msg.recipe; //flow.get(\"recipe[0]\");\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet chemicals = global.get(\"System.Elements.Chemicals\");\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet gates = global.get(\"System.Elements.Gates\");\nlet waters = global.get(\"System.Elements.Waters\");\nlet flatFiller = global.get(`System.FlatFiller[${line}]`); \nlet hopper = global.get(\"System.Hopper\");\nlet chemical = global.get(\"System.Chemical\");\nlet conveyor = global.get(\"System.Conveyor\");\nlet gate = global.get(\"System.Gate\");\nlet water = global.get(\"System.Water\");\nlet prodCapacity = global.get(\"System.General.ProdCapacity\");\nlet addComp = true;\nlet batchGap = global.get(\"System.Batch.Gap\");\n\nflatFiller.Batch.CompTime =0;\nflatFiller.Recipe.Name = recipe.Name;\nflatFiller.Recipe.No = recipe.Number;\nflatFiller.Recipe.Load = true;\n\n/*Batch Time depend of size of batch*/\nflatFiller.Batch.Time = flatFiller.Batch.Size / prodCapacity *60;\n\n/*Set Point, Speed and Compensation Time*/\nfor(let i=0; i<hoppers; i++){\n    if(hopper[i].Enabled && recipe.Hopper[i] > 0){\n            flatFiller.Hopper[i].SP = recipe.Hopper[i];\n            flatFiller.Hopper[i].Speed = recipe.Hopper[i]/hopper[i].FC*hopper[i].MaxSpeed;\n            if(addComp){\n                flatFiller.Batch.CompTime += hopper[i].TTS;\n            }\n            addComp = false;\n        \n    }\n    else{\n        flatFiller.Hopper[i].SP = 0;\n        flatFiller.Hopper[i].Speed = 0;\n    }\n}\nfor(let i=0; i<chemicals; i++){\n    if(chemical[i].Enabled && recipe.Chemical[i] > 0){\n        flatFiller.Chemical[i].SP = recipe.Chemical[i];\n        flatFiller.Chemical[i].Speed = recipe.Chemical[i]/chemical[i].FC*chemical[i].MaxSpeed;\n    }\n    else{\n        flatFiller.Chemical[i].SP = 0;\n        flatFiller.Chemical[i].Speed = 0;\n    }\n}\n\n/*Start and End Encoders*/\nfor(let i=0; i<hoppers; i++){\n    if(flatFiller.Hopper[i].SP > 0){\n        msg.payload = flatFiller.Batch.Time;\n        flatFiller.Hopper[i].EncodStart = (hopper[i].TTS - flatFiller.Batch.CompTime) * 10;\n        flatFiller.Hopper[i].EncodEnd = flatFiller.Hopper[i].EncodStart + (flatFiller.Batch.Time *10);\n    }\n    else{\n        flatFiller.Hopper[i].EncodStart = 0;\n        flatFiller.Hopper[i].EncodEnd = 0;\n    }\n}\nfor(let i=0; i<chemicals; i++){\n    if(flatFiller.Chemical[i].SP > 0){\n        flatFiller.Chemical[i].EncodStart = (chemical[i].TTS - flatFiller.Batch.CompTime) * 10;\n        flatFiller.Chemical[i].EncodEnd = flatFiller.Chemical[i].EncodStart + (flatFiller.Batch.Time *10);\n    }\n    else{\n        flatFiller.Chemical[i].EncodStart = 0;\n        flatFiller.Chemical[i].EncodEnd = 0;\n    }\n}\nfor(let i=0; i<conveyors; i++){\n    flatFiller.Conveyor[i].EncodStart = (conveyor[i].TTS - flatFiller.Batch.CompTime) * 10;\n    flatFiller.Conveyor[i].EncodEnd = flatFiller.Conveyor[i].EncodStart + (flatFiller.Batch.Time *10) + (conveyor[i].WorkTime  * 10);\n   \n}\nfor(let i=0; i<gates; i++){\n    if(flatFiller.Gate[i].Enabled){\n        flatFiller.Gate[i].EncodStart = (gate[i].TTS - flatFiller.Batch.CompTime - batchGap/2 ) * 10;\n        flatFiller.Gate[i].EncodEnd = flatFiller.Gate[i].EncodStart + (flatFiller.Batch.Time * 10);\n    }\n    else{\n        flatFiller.Gate[i].EncodStart = 0;\n        flatFiller.Gate[i].EncodEnd = 0;\n    }\n}\nfor(let i=0; i<water; i++){\n    flatFiller.Water[i].EncodStart = (water[i].TTS - flatFiller.Batch.CompTime) * 10;\n    flatFiller.Water[i].EncodEnd = flatFiller.Water[i].EncodStart + (flatFiller.Batch.Time) * 10;\n   \n}\n\n\nglobal.set(`System.FlatFiller[${line}]`, flatFiller);\n//msg.payload = msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1000,
        "wires": [
            [
                "ad3345cae2447849",
                "7d9892ec8d5e577b",
                "2531fdf817c83696",
                "7d9615ad6031b023"
            ]
        ]
    },
    {
        "id": "ad3345cae2447849",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "FF1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[0].Recipe.Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 920,
        "wires": [
            [
                "963b0cd436394231"
            ]
        ]
    },
    {
        "id": "7d9892ec8d5e577b",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "FF2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[1].Recipe.Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 980,
        "wires": [
            [
                "c941f682981b6550"
            ]
        ]
    },
    {
        "id": "2531fdf817c83696",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "FF3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[2].Recipe.Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1040,
        "wires": [
            [
                "4c5ebe157abf66c3"
            ]
        ]
    },
    {
        "id": "7d9615ad6031b023",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "FF4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.FlatFiller[3].Recipe.Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1100,
        "wires": [
            [
                "c2b05e7f45b1dc8e"
            ]
        ]
    },
    {
        "id": "cc921e69642093e9",
        "type": "catch",
        "z": "d0dd21499ec263d9",
        "name": "",
        "scope": [
            "9a77bc121a264b5f"
        ],
        "uncaught": false,
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "b1ec1e52e4ebbec1"
            ]
        ]
    },
    {
        "id": "b1ec1e52e4ebbec1",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "",
        "func": "msg.topic = \"Error\";\nmsg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1200,
        "wires": [
            [
                "b4d6fbd2e96113c3"
            ]
        ]
    },
    {
        "id": "b4d6fbd2e96113c3",
        "type": "ui_toast",
        "z": "d0dd21499ec263d9",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 680,
        "y": 1200,
        "wires": []
    },
    {
        "id": "909fa6fe8dd46b31",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "Save Recipes",
        "group": "3c9e6e0c.e3e802",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1400,
        "wires": [
            [
                "b99cc98c76717950"
            ]
        ]
    },
    {
        "id": "b99cc98c76717950",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Recipe",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "C:\\Users\\CNF_SoilMix\\.node-red\\projects\\Config\\Recipes.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1400,
        "wires": [
            [
                "bb148ddcaf32c6e3"
            ]
        ]
    },
    {
        "id": "65481ae18b96a604",
        "type": "ui_button",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "Load Recipes",
        "group": "3c9e6e0c.e3e802",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Load",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "2c6e3fc0f7ebe293"
            ]
        ]
    },
    {
        "id": "2c6e3fc0f7ebe293",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "C:\\Users\\CNF_SoilMix\\.node-red\\projects\\Config\\Recipes.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1460,
        "wires": [
            [
                "a61dd4dbb3337816"
            ]
        ]
    },
    {
        "id": "a61dd4dbb3337816",
        "type": "file in",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 740,
        "y": 1460,
        "wires": [
            [
                "d5f184576811e8f6"
            ]
        ]
    },
    {
        "id": "d4bd65147b3d4933",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Recipe",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "bb148ddcaf32c6e3",
        "type": "json",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1400,
        "wires": [
            [
                "ed67bd9dbf5f2b2e"
            ]
        ]
    },
    {
        "id": "ed67bd9dbf5f2b2e",
        "type": "file",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 910,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "d5f184576811e8f6",
        "type": "json",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 880,
        "y": 1460,
        "wires": [
            [
                "d4bd65147b3d4933"
            ]
        ]
    },
    {
        "id": "cdaf66da41cb7f71",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "links": [
            "260dd2e5.0a393e",
            "edb3658f.148928",
            "87dabb6f.851c98"
        ],
        "x": 215,
        "y": 1400,
        "wires": [
            [
                "909fa6fe8dd46b31",
                "65481ae18b96a604"
            ]
        ]
    },
    {
        "id": "22f51116e2515fb3",
        "type": "inject",
        "z": "d0dd21499ec263d9",
        "g": "4207d5e8985a7ae0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 1500,
        "wires": [
            [
                "2c6e3fc0f7ebe293"
            ]
        ]
    },
    {
        "id": "add16b199ff043a4",
        "type": "switch",
        "z": "d0dd21499ec263d9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 980,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "11ba1ce5e91ac169",
        "type": "link out",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "b17f2c1e52915c8b"
        ],
        "x": 655,
        "y": 240,
        "wires": []
    },
    {
        "id": "b17f2c1e52915c8b",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "11ba1ce5e91ac169",
            "fe8af89a74a66379"
        ],
        "x": 255,
        "y": 1020,
        "wires": [
            [
                "a137b8bba8f6574a",
                "6799db043c26ac0f",
                "d33e806873836499",
                "0e3e7b632e3b109b"
            ]
        ]
    },
    {
        "id": "fe8af89a74a66379",
        "type": "link out",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "b17f2c1e52915c8b"
        ],
        "x": 735,
        "y": 240,
        "wires": []
    },
    {
        "id": "9034299f62464cb0",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "29f4cafe.5f4fb6",
            "620e2e7c.5392d",
            "49759ecff5f46ca8",
            "68fb9b082aa1bc78"
        ],
        "x": 615,
        "y": 860,
        "wires": [
            [
                "bf65629463c27afe",
                "45286e10746909c6",
                "a8a90d68240373d0",
                "2834e7624be60017"
            ]
        ]
    },
    {
        "id": "74bbb9a4ce128830",
        "type": "link out",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "f7c10a309d5498af"
        ],
        "x": 665,
        "y": 80,
        "wires": []
    },
    {
        "id": "f7c10a309d5498af",
        "type": "link in",
        "z": "d0dd21499ec263d9",
        "name": "",
        "links": [
            "74bbb9a4ce128830"
        ],
        "x": 75,
        "y": 1020,
        "wires": [
            [
                "a650b8c1efd2a014",
                "eb7436b7f824e689",
                "13188ffff6f53a4a",
                "a02474bcaefe74a2"
            ]
        ]
    },
    {
        "id": "a650b8c1efd2a014",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "enL1",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "System.FlatFiller[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 940,
        "wires": [
            [
                "a137b8bba8f6574a"
            ]
        ]
    },
    {
        "id": "eb7436b7f824e689",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "enL1",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "System.FlatFiller[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "6799db043c26ac0f"
            ]
        ]
    },
    {
        "id": "13188ffff6f53a4a",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "enL1",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "System.FlatFiller[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 1060,
        "wires": [
            [
                "d33e806873836499"
            ]
        ]
    },
    {
        "id": "a02474bcaefe74a2",
        "type": "change",
        "z": "d0dd21499ec263d9",
        "name": "enL1",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "System.FlatFiller[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "0e3e7b632e3b109b"
            ]
        ]
    },
    {
        "id": "ba5e54caa8a1d4be",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "",
        "func": "let line =1;\n\n\n\n\nlet recipe = flow.get(\"recipe[0]\");\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet chemicals = global.get(\"System.Elements.Chemicals\");\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet gates = global.get(\"System.Elements.Gates\");\nlet waters = global.get(\"System.Elements.Waters\");\nlet flatFiller = global.get(`System.FlatFiller[${line}]`); \nlet hopper = global.get(\"System.Hopper\");\nlet chemical = global.get(\"System.Chemical\");\nlet conveyor = global.get(\"System.Conveyor\");\nlet gate = global.get(\"System.Gate\");\nlet water = global.get(\"System.Water\");\nlet prodCapacity = global.get(\"System.General.ProdCapacity\");\nlet addComp = true;\nlet batchGap = global.get(\"System.Batch.Gap\");\n\nflatFiller.Batch.CompTime =0;\nflatFiller.Recipe.Name = recipe.Name;\nflatFiller.Recipe.No = recipe.Number;\nflatFiller.Recipe.Load = true;\n\n/*Batch Time depend of size of batch*/\nflatFiller.Batch.Time = flatFiller.Batch.Size / prodCapacity *60;\n\n/*Set Point, Speed and Compensation Time*/\nfor(let i=0; i<hoppers; i++){\n    if(hopper[i].Enabled && recipe.Hopper[i] > 0){\n            flatFiller.Hopper[i].SP = recipe.Hopper[i];\n            flatFiller.Hopper[i].Speed = recipe.Hopper[i]/hopper[i].FC*hopper[i].MaxSpeed;\n            if(addComp){\n                flatFiller.Batch.CompTime += hopper[i].TTS;\n            }\n            addComp = false;\n        \n    }\n    else{\n        flatFiller.Hopper[i].SP = 0;\n        flatFiller.Hopper[i].Speed = 0;\n    }\n}\nfor(let i=0; i<chemicals; i++){\n    if(chemical[i].Enabled && recipe.Chemical[i] > 0){\n        flatFiller.Chemical[i].SP = recipe.Chemical[i];\n        flatFiller.Chemical[i].Speed = recipe.Chemical[i]/chemical[i].FC*chemical[i].MaxSpeed;\n    }\n    else{\n        flatFiller.Chemical[i].SP = 0;\n        flatFiller.Chemical[i].Speed = 0;\n    }\n}\n\n/*Start and End Encoders*/\nfor(let i=0; i<hoppers; i++){\n    if(flatFiller.Hopper[i].SP > 0){\n        msg.payload = flatFiller.Batch.Time;\n        flatFiller.Hopper[i].EncodStart = (hopper[i].TTS - flatFiller.Batch.CompTime) * 10;\n        flatFiller.Hopper[i].EncodEnd = flatFiller.Hopper[i].EncodStart + (flatFiller.Batch.Time *10);\n    }\n}\nfor(let i=0; i<chemicals; i++){\n    if(flatFiller.Chemical[i].SP > 0){\n        flatFiller.Chemical[i].EncodStart = (chemical[i].TTS - flatFiller.Batch.CompTime) * 10;\n        flatFiller.Chemical[i].EncodEnd = flatFiller.Chemical[i].EncodStart + (flatFiller.Batch.Time *10);\n    }\n}\nfor(let i=0; i<conveyors; i++){\n    flatFiller.Conveyor[i].EncodStart = (conveyor[i].TTS - flatFiller.Batch.CompTime) * 10;\n    flatFiller.Conveyor[i].EncodEnd = flatFiller.Conveyor[i].EncodStart + (flatFiller.Batch.Time *10) + (conveyor[i].WorkTime  * 10);\n   \n}\nfor(let i=0; i<gates; i++){\n    if(flatFiller.Gate[i].Enabled){\n        flatFiller.Gate[i].EncodStart = (gate[i].TTS - flatFiller.Batch.CompTime - batchGap/2 ) * 10;\n        flatFiller.Gate[i].EncodEnd = flatFiller.Gate[i].EncodStart + (flatFiller.Batch.Time * 10);\n    }\n    else{\n        flatFiller.Gate[i].EncodStart = 0;\n        flatFiller.Gate[i].EncodEnd = 0;\n    }\n}\nfor(let i=0; i<water; i++){\n    flatFiller.Water[i].EncodStart = (water[i].TTS - flatFiller.Batch.CompTime) * 10;\n    flatFiller.Water[i].EncodEnd = flatFiller.Water[i].EncodStart + (flatFiller.Batch.Time) * 10;\n   \n}\n\n\n//global.set(`System.FlatFiller[${line}]`, flatFiller);\nmsg.payload = flatFiller;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2060,
        "wires": [
            [
                "30b36c3c66a00c4c"
            ]
        ]
    },
    {
        "id": "30b36c3c66a00c4c",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 2060,
        "wires": []
    },
    {
        "id": "3bbec6e368cae6ec",
        "type": "inject",
        "z": "d0dd21499ec263d9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2060,
        "wires": [
            [
                "ba5e54caa8a1d4be"
            ]
        ]
    },
    {
        "id": "abee41fecb42bd05",
        "type": "function",
        "z": "d0dd21499ec263d9",
        "name": "",
        "func": "let line =0;\n\nswitch(msg.topic){\n    case \"Line 1\":\n        line = 0;\n        break;\n    case \"Line 2\":\n        line = 1\n        break;\n    case \"Line 3\":\n        line = 2\n        break;\n    case \"Line 4\":\n        line = 3\n        break;\n}\n\nmsg.payload = line;\n\n\nlet recipe = flow.get(\"recipe[0]\");\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet chemicals = global.get(\"System.Elements.Chemicals\");\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet gates = global.get(\"System.Elements.Gates\");\nlet waters = global.get(\"System.Elements.Waters\");\nlet flatFiller = global.get(`System.FlatFiller[${line}]`); \nlet hopper = global.get(\"System.Hopper\");\nlet chemical = global.get(\"System.Chemical\");\nlet conveyor = global.get(\"System.Conveyor\");\nlet gate = global.get(\"System.Gate\");\nlet water = global.get(\"System.Water\");\nlet prodCapacity = global.get(\"System.General.ProdCapacity\");\nlet addComp = true;\nlet batchGap = global.get(\"System.Batch.Gap\");\n\nflatFiller.Batch.CompTime =0;\nflatFiller.Recipe.Name = recipe.Name;\nflatFiller.Recipe.No = recipe.Number;\nflatFiller.Recipe.Load = true;\n\n/*Batch Time depend of size of batch*/\nflatFiller.Batch.Time = flatFiller.Batch.Size / prodCapacity *60;\n\n/*Set Point, Speed and Compensation Time*/\nfor(let i=0; i<hoppers; i++){\n    if(hopper[i].Enabled && recipe.Hopper[i] > 0){\n        if(recipe.Hopper[i] > 0){\n            flatFiller.Hopper[i].SP = recipe.Hopper[i];\n            flatFiller.Hopper[i].Speed = recipe.Hopper[i]/hopper[i].FC*hopper[i].MaxSpeed;\n            addComp = false;\n        }\n        else{\n            if(addComp){\n                flatFiller.Batch.CompTime += Hopper[i].TTS;\n            }\n        }\n    }\n}\nfor(let i=0; i<chemicals; i++){\n    if(chemical[i].Enabled && recipe.Chemical[i] > 0){\n        flatFiller.Chemical[i].SP = recipe.Chemical[i];\n        flatFiller.Chemical[i].Speed = recipe.Chemical[i]/chemical[i].FC*chemical[i].MaxSpeed;\n    }\n}\n\n/*Start and End Encoders*/\nfor(let i=0; i<hoppers; i++){\n    if(flatFiller.Hopper[i].SP > 0){\n        msg.payload = flatFiller.Batch.Time;\n        flatFiller.Hopper[i].EncodStart = (hopper[i].TTS - flatFiller.Batch.CompTime) * 10;\n        flatFiller.Hopper[i].EncodEnd = flatFiller.Hopper[i].EncodStart + (flatFiller.Batch.Time *10);\n    }\n}\nfor(let i=0; i<chemicals; i++){\n    if(flatFiller.Chemical[i].SP > 0){\n        flatFiller.Chemical[i].EncodStart = (chemical[i].TTS - flatFiller.Batch.CompTime) * 10;\n        flatFiller.Chemical[i].EncodEnd = flatFiller.Chemical[i].EncodStart + (flatFiller.Batch.Time *10);\n    }\n}\nfor(let i=0; i<conveyors; i++){\n    flatFiller.Conveyor[i].EncodStart = (conveyor[i].TTS - flatFiller.Batch.CompTime) * 10;\n    flatFiller.Conveyor[i].EncodEnd = flatFiller.Conveyor[i].EncodStart + (flatFiller.Batch.Time *10) + (conveyor[i].WorkTime  * 10);\n   \n}\nfor(let i=0; i<gates; i++){\n    if(flatFiller.Gate[i].Enabled){\n        flatFiller.Gate[i].EncodStart = (gate[i].TTS - flatFiller.Batch.CompTime - batchGap/2 ) * 10;\n        flatFiller.Gate[i].EncodEnd = flatFiller.Gate[i].EncodStart + (flatFiller.Batch.Time * 10);\n    }\n    else{\n        flatFiller.Gate[i].EncodStart = 0;\n        flatFiller.Gate[i].EncodEnd = 0;\n    }\n}\nfor(let i=0; i<water; i++){\n    flatFiller.Water[i].EncodStart = (water[i].TTS - flatFiller.Batch.CompTime) * 10;\n    flatFiller.Water[i].EncodEnd = flatFiller.Water[i].EncodStart + (flatFiller.Batch.Time) * 10;\n   \n}\n\n\nglobal.set(`System.FlatFiller[${line}]`, flatFiller);\n//msg.payload = msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "9356fb8b87aea599",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 40,
        "wires": []
    },
    {
        "id": "45286e10746909c6",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 860,
        "wires": []
    },
    {
        "id": "f6b746d82606201e",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 920,
        "wires": []
    },
    {
        "id": "a8a90d68240373d0",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5bf76ac239f9ece9",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c7d7a6a05f2699e5",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "recipe",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2834e7624be60017",
        "type": "debug",
        "z": "d0dd21499ec263d9",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "recipe",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 820,
        "wires": []
    },
    {
        "id": "49759ecff5f46ca8",
        "type": "link out",
        "z": "d0dd21499ec263d9",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "9034299f62464cb0"
        ],
        "x": 425,
        "y": 820,
        "wires": []
    },
    {
        "id": "6ba5a3a4.a97e0c",
        "type": "function",
        "z": "b14319c3.981d58",
        "name": "",
        "func": "let tab = msg.name;\nif(tab != \"Faults\")\n return;\n \nmsg.payload=global.get(\"System.Fault.Faults\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "7f460616.f28ee8",
                "c1e54a4a.0e8dc8"
            ]
        ]
    },
    {
        "id": "1fdb75f6.df430a",
        "type": "inject",
        "z": "b14319c3.981d58",
        "name": "",
        "props": [
            {
                "p": "name",
                "v": "Faults",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "6ba5a3a4.a97e0c"
            ]
        ]
    },
    {
        "id": "7f460616.f28ee8",
        "type": "ui_table",
        "z": "b14319c3.981d58",
        "group": "e35b9b72.0c52b8",
        "name": "Faults",
        "order": 1,
        "width": 30,
        "height": 10,
        "columns": [
            {
                "field": "DateTime",
                "title": "Time",
                "width": "20 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Type",
                "title": "Type",
                "width": "10 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Code",
                "title": "Code",
                "width": "10 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Message",
                "title": "Description",
                "width": "50 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Ack",
                "title": "Ack",
                "width": "10 px",
                "align": "left",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 690,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1a89caf5.0e88b5",
        "type": "ui_ui_control",
        "z": "b14319c3.981d58",
        "name": "",
        "events": "all",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "6ba5a3a4.a97e0c",
                "7125d46b.90c20c",
                "8032e63e.9931c8",
                "7639cea2.af922"
            ]
        ]
    },
    {
        "id": "375f64a5.e9d5dc",
        "type": "ui_button",
        "z": "b14319c3.981d58",
        "name": "",
        "group": "57e82c3.85fd1d4",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Ack Fault",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3c486a24.015cb6",
        "type": "ui_button",
        "z": "b14319c3.981d58",
        "name": "",
        "group": "57e82c3.85fd1d4",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Ack All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "604d4ed7.543e5",
        "type": "ui_button",
        "z": "b14319c3.981d58",
        "name": "",
        "group": "57e82c3.85fd1d4",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Clear All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 340,
        "y": 240,
        "wires": [
            [
                "3a2fe116.a41eae"
            ]
        ]
    },
    {
        "id": "85404fb3.054a6",
        "type": "ui_button",
        "z": "b14319c3.981d58",
        "name": "",
        "group": "57e82c3.85fd1d4",
        "order": 8,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "Clear Fault",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c1e54a4a.0e8dc8",
        "type": "debug",
        "z": "b14319c3.981d58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 100,
        "wires": []
    },
    {
        "id": "7125d46b.90c20c",
        "type": "debug",
        "z": "b14319c3.981d58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "name",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 60,
        "wires": []
    },
    {
        "id": "3a2fe116.a41eae",
        "type": "function",
        "z": "b14319c3.981d58",
        "name": "Clear Fault",
        "func": "\nglobal.set(\"System.Fault.Faults\",[]);\nglobal.set(\"System.Fault.Stop\",false);\nglobal.set(\"System.Fault.StopCode\",0);\n global.set(\"System.Mode.Fault\", false); \nglobal.set(\"System.Mode.Status\", 1);\n\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 240,
        "wires": [
            [
                "7f460616.f28ee8",
                "7639cea2.af922"
            ]
        ]
    },
    {
        "id": "8032e63e.9931c8",
        "type": "function",
        "z": "b14319c3.981d58",
        "name": "Show fault",
        "func": "tab = msg.name;\n\nif (tab == \"Faults\"){\n    msg.payload = true;\n}\nelse{\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 340,
        "wires": [
            [
                "f700c790.585be8"
            ]
        ]
    },
    {
        "id": "f700c790.585be8",
        "type": "change",
        "z": "b14319c3.981d58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 340,
        "wires": [
            [
                "7f460616.f28ee8"
            ]
        ]
    },
    {
        "id": "2b69fc82.644de4",
        "type": "ui_text",
        "z": "b14319c3.981d58",
        "group": "57e82c3.85fd1d4",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "System Status:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 580,
        "y": 380,
        "wires": []
    },
    {
        "id": "7639cea2.af922",
        "type": "function",
        "z": "b14319c3.981d58",
        "name": "Fault message",
        "func": "let fault =global.get(\"System.Mode.Fault\");\n\nif(fault){\n    msg.payload =\"<font color=RED >In Fault\";\n}\nelse{\n    msg.payload =\"<font color= white >No Fault\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "2b69fc82.644de4"
            ]
        ]
    },
    {
        "id": "53b46330.da5ccc",
        "type": "ui_ui_control",
        "z": "772cdac6.5f6944",
        "name": "",
        "events": "all",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "7b6c41d3.5fe64",
                "402de1b5.e6a51",
                "9b70d4d3.f2b638"
            ]
        ]
    },
    {
        "id": "2fc9622b.a9259e",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "402de1b5.e6a51"
            ]
        ]
    },
    {
        "id": "b577a792.5fb9c8",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 200,
        "wires": []
    },
    {
        "id": "402de1b5.e6a51",
        "type": "function",
        "z": "772cdac6.5f6944",
        "name": "",
        "func": "if (msg.name != \"Inputs Outputs\"){\n    return;\n}\nvar totalInputs = global.get(\"System.Elements.Inputs\");\n\nvar Chemicals = global.get(\"System.Elements.Chemicals\");\nvar FlatFillers = global.get(\"System.Elements.FlatFillers\");\nlet input=[];\nlet element=[];\nvar error = false;\nmsg.elem = false;\nfor(let i=0; i<totalInputs ;  i++){\n    if(global.get(`System.EStop.Input`) === i && global.get(`System.EStop.Enabled`)){\n        element.push(\"E_Stop\");\n    }\n    for (let j=0; j<Chemicals; j++){\n       \n        if(global.get(`System.Chemical[${j}].Enabled`))\n        {\n             \n            if(global.get(`System.Chemical[${j}].Sensor.Input`) == i && global.get(`System.Chemical[${j}].Sensor.Enabled`))\n            {\n              \n                element.push(`Chemical ${j}`);\n                \n            }\n        }\n       \n    }\n    for (let j=0; j<FlatFillers; j++){\n        if(global.get(`System.FlatFiller[${j}].Enabled`))\n        {\n            msg.elem = global.get(`System.FlatFiller[${j}].Sensor.Input`);\n            if(global.get(`System.FlatFiller[${j}].Sensor.Input`) === i && global.get(`System.FlatFiller[${j}].Sensor.Enabled`))\n            {\n                element.push(`FlatFiller ${j}`)\n            }\n        }\n       \n    }\n    switch (element.length){\n        case 0: \n            element.push(\"Not Assigned\") ;\n            break;\n        case 1:\n            break;\n        default:\n           error = true;\n           break\n    }\n    \n    input[i]={ID:i, elements:element, active:`<button>  ___ </button>`};\n    element =[];\n}\n\nflow.set(\"input\",input)\nmsg.payload = input;\nmsg.error =error;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "b577a792.5fb9c8",
                "6ff97e8.445758",
                "5ad2582e.acb5d8",
                "7f942759.9701c8"
            ]
        ]
    },
    {
        "id": "6ff97e8.445758",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 240,
        "wires": []
    },
    {
        "id": "fb8aab7a.b671d8",
        "type": "trigger",
        "z": "772cdac6.5f6944",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 920,
        "y": 160,
        "wires": [
            [
                "c5083910.62e628"
            ]
        ]
    },
    {
        "id": "efb10425.98db68",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 160,
        "wires": []
    },
    {
        "id": "f42d23c0.38e05",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 160,
        "wires": [
            [
                "fb8aab7a.b671d8"
            ]
        ]
    },
    {
        "id": "b936cb45.9c8bd8",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 730,
        "y": 220,
        "wires": [
            [
                "fb8aab7a.b671d8",
                "402de1b5.e6a51"
            ]
        ]
    },
    {
        "id": "c5083910.62e628",
        "type": "function",
        "z": "772cdac6.5f6944",
        "name": "",
        "func": "var totalInputs = global.get(\"System.Elements.Inputs\");\nvar input = flow.get(\"input\");\nvar SysInput = global.get(\"System.Elements.Input\");\n\nfor(let i=0; i<totalInputs ;  i++){\n   \n    if(SysInput[i]){\n        input[i].active=`<button style=\"background-color:lime\">  ON </button>`\n    }\n    else\n    {\n        input[i].active=`<button style=\"background-color:red\">  OFF </button>`\n    }\n    \n}\n\nflow.set(\"input\",input)\nmsg.payload = input;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "efb10425.98db68",
                "5ad2582e.acb5d8"
            ]
        ]
    },
    {
        "id": "88d983ea.45c5a",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 100,
        "wires": [
            [
                "c5083910.62e628"
            ]
        ]
    },
    {
        "id": "5ad2582e.acb5d8",
        "type": "ui_table",
        "z": "772cdac6.5f6944",
        "group": "f0ffd542.709278",
        "name": "Inputs",
        "order": 1,
        "width": 14,
        "height": 11,
        "columns": [
            {
                "field": "ID",
                "title": "Input",
                "width": "15 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "elements",
                "title": "Assigned to",
                "width": "65 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "active",
                "title": "Active",
                "width": "20 px",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 470,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "69e3c778.670778",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "9b70d4d3.f2b638"
            ]
        ]
    },
    {
        "id": "9b547951.30aa98",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "9b70d4d3.f2b638",
        "type": "function",
        "z": "772cdac6.5f6944",
        "name": "",
        "func": "if (msg.name != \"Inputs Outputs\"){\n    return;\n}\n\nvar totalOutputs = global.get(\"System.Elements.Outputs\");\nvar Hoppers = global.get(\"System.Elements.Hoppers\");\nvar Conveyors = global.get(\"System.Elements.Conveyors\");\nvar Gates = global.get(\"System.Elements.Gates\");\nvar FlatFillers = global.get(\"System.Elements.FlatFillers\");\nvar Waters = global.get(\"System.Elements.Waters\");\nlet output=[];\nlet element=[];\nvar error = false;\n\nfor(let i=0; i<totalOutputs ;  i++)\n{\n    if(global.get(`System.Alarm.Output`) === i && global.get(`System.Alarm.Enabled`))\n    {\n        element.push(\"Alarm\");\n    }\n    for (let j=0; j<Hoppers; j++)\n    {\n        if(global.get(`System.Hopper[${j}].Enabled`))\n        {\n            if(global.get(`System.Hopper[${j}].Mixer.Output`) == i && global.get(`System.Hopper[${j}].Mixer.Enabled`) )\n            {\n                element.push(`Hopper ${j}`);\n            }\n        }\n    }\n    for (let j=0; j<Conveyors; j++)\n    {\n        if(global.get(`System.Conveyor[${j}].Enabled`))\n        {\n            if(!global.get(`System.Conveyor[${j}].HasDrive`) && global.get(`System.Conveyor[${j}].Output`)== i)\n            {\n                element.push(`Conveyor ${j}`)\n            }\n            if(global.get(`System.Conveyor[${j}].Mixer.Enabled`) && global.get(`System.Conveyor[${j}].Mixer.Output`)== i)\n            {\n                element.push(`Conveyor ${j} Mixer`);\n            }\n        }\n       \n    }\n    for (let j=0; j<Gates; j++)\n    {\n        if(global.get(`System.Gate[${j}].Enabled`))\n        {\n            if(global.get(`System.Gate[${j}].OutputClose`) == i  )\n            {\n                element.push(`Gate ${j} OutputClose`);\n            }\n            if(global.get(`System.Gate[${j}].OutputOpen`) == i && global.get(`System.Gate[${j}].Bistable`))\n            {\n                 element.push(`Gate ${j} OutputOpen`);\n            }\n        }\n       \n    }\n    for (let j=0; j<Waters; j++)\n    {\n       if(global.get(`System.Water[${j}].Output`) === i && global.get(`System.Water[${j}].Enabled`))\n       {\n           element.push(`Water ${j}`)\n       }\n    }\n    switch (element.length)\n    {\n        case 0: \n            element.push(\"Not Assigned\") ;\n            break;\n        case 1:\n            break;\n        default:\n           error = true;\n           break\n    }\n    \n    output[i]={ID:i, elements:element, Test:`<button >  Test Oputput </button>`};\n    element =[];\n}\n\nflow.set(\"output\",output)\nmsg.payload = output;\nmsg.error =error;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 600,
        "wires": [
            [
                "9b547951.30aa98",
                "6e1f76dd.099758",
                "ca2f967e.b66e18"
            ]
        ]
    },
    {
        "id": "6e1f76dd.099758",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 640,
        "wires": []
    },
    {
        "id": "ca2f967e.b66e18",
        "type": "ui_table",
        "z": "772cdac6.5f6944",
        "group": "da84d080.14208",
        "name": "Outputs",
        "order": 1,
        "width": 14,
        "height": 11,
        "columns": [
            {
                "field": "ID",
                "title": "Output",
                "width": "18 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "elements",
                "title": "Assigned to",
                "width": "50 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Test",
                "title": "Test",
                "width": "22 px",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 540,
        "y": 520,
        "wires": [
            [
                "4c7826df.280a68",
                "582e37f8.e4dca8"
            ]
        ]
    },
    {
        "id": "582e37f8.e4dca8",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "test",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 560,
        "wires": []
    },
    {
        "id": "7b6c41d3.5fe64",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "group",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 80,
        "wires": []
    },
    {
        "id": "4c7826df.280a68",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 520,
        "wires": []
    },
    {
        "id": "a5373524.a15c28",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 740,
        "wires": [
            [
                "a21f21c5.7ea1e"
            ]
        ]
    },
    {
        "id": "e5b8541a.08ae78",
        "type": "inject",
        "z": "772cdac6.5f6944",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 800,
        "wires": [
            [
                "41f9a80d.7c02a8"
            ]
        ]
    },
    {
        "id": "a21f21c5.7ea1e",
        "type": "change",
        "z": "772cdac6.5f6944",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Input[2]",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "41f9a80d.7c02a8",
        "type": "change",
        "z": "772cdac6.5f6944",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Elements.Input[2]",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "34fcec4e.6fb234",
        "type": "ui_text",
        "z": "772cdac6.5f6944",
        "group": "f0ffd542.709278",
        "order": 2,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Fault:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 130,
        "y": 300,
        "wires": []
    },
    {
        "id": "911aa24c.c615d",
        "type": "ui_button",
        "z": "772cdac6.5f6944",
        "name": "",
        "group": "f0ffd542.709278",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e0329a.237c6",
        "type": "ui_button",
        "z": "772cdac6.5f6944",
        "name": "",
        "group": "f0ffd542.709278",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4528587a.60c078",
        "type": "ui_text",
        "z": "772cdac6.5f6944",
        "group": "da84d080.14208",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fault:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 260,
        "y": 880,
        "wires": []
    },
    {
        "id": "7f942759.9701c8",
        "type": "debug",
        "z": "772cdac6.5f6944",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "elem",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "165a8baa.283914",
        "type": "function",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "name": "Hopper Table",
        "func": "let tab = msg.name;\nif(tab != \"Calibration\")\n return;\n \nmsg.payload=global.get(\"System.Hopper\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"ActiveElement\",\"Hopper[0]\");\nflow.set(\"Type\",\"Hopper\");",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 60,
        "wires": [
            [
                "f0ad4618.350e28"
            ]
        ]
    },
    {
        "id": "f0ad4618.350e28",
        "type": "ui_table",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "group": "f069bd2b.0faf4",
        "name": "Hoppers",
        "order": 1,
        "width": 4,
        "height": 4,
        "columns": [
            {
                "field": "Name",
                "title": "Hopper",
                "width": "100 px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "9229ce73.e9fcc"
            ]
        ]
    },
    {
        "id": "16547fe2.312da",
        "type": "ui_ui_control",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "name": "",
        "events": "all",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "165a8baa.283914",
                "5e339c7.2f03464"
            ]
        ]
    },
    {
        "id": "5e339c7.2f03464",
        "type": "function",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "name": "Chemical Table",
        "func": "let tab = msg.name;\nif(tab != \"Calibration\")\n return;\n \nmsg.payload=global.get(\"System.Chemical\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "ec6fa5ff.c56458",
                "eadb92d9.e6e96"
            ]
        ]
    },
    {
        "id": "ec6fa5ff.c56458",
        "type": "ui_table",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "group": "f069bd2b.0faf4",
        "name": "Chemicals",
        "order": 3,
        "width": 4,
        "height": 4,
        "columns": [
            {
                "field": "Name",
                "title": "Chemical",
                "width": "100%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 590,
        "y": 100,
        "wires": [
            [
                "61dc1957.7995b8"
            ]
        ]
    },
    {
        "id": "15c3f74a.9be859",
        "type": "ui_table",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "group": "be2ad30f.7237d",
        "name": "Hoppers",
        "order": 1,
        "width": 24,
        "height": 1,
        "columns": [
            {
                "field": "Name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "MaxSpeed",
                "title": "Max Speed",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "FC",
                "title": "Max Flow",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Unit",
                "title": "Unit",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1040,
        "y": 60,
        "wires": []
    },
    {
        "id": "9229ce73.e9fcc",
        "type": "function",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "name": "Select Hopper",
        "func": "var output =[];\nlet id = msg.row;\nflow.set(\"ActiveElement\",`Hopper[${id}]`)\nflow.set(\"Type\",\"Hopper\");\noutput.push(msg.payload);\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 60,
        "wires": [
            [
                "15c3f74a.9be859"
            ]
        ]
    },
    {
        "id": "c981fc9d.0d8ae",
        "type": "ui_numeric",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "",
        "label": "Calibration time",
        "tooltip": "",
        "group": "be2ad30f.7237d",
        "order": 3,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "10",
        "max": "60",
        "step": "10",
        "x": 940,
        "y": 200,
        "wires": [
            [
                "69230173.a994"
            ]
        ]
    },
    {
        "id": "b1aa37d4.52a778",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Manual push",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "d2a59bbe.fbbde8"
            ]
        ]
    },
    {
        "id": "c0b10371.7537",
        "type": "ui_numeric",
        "z": "20d1a20.528db5e",
        "name": "",
        "label": "Result (yd3 or lbs)",
        "tooltip": "",
        "group": "be2ad30f.7237d",
        "order": 12,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0.5",
        "max": "20",
        "step": "0.1",
        "x": 170,
        "y": 840,
        "wires": [
            [
                "7a595665.e62938"
            ]
        ]
    },
    {
        "id": "37e0b68e.bf946a",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "e656d201.871e"
            ]
        ]
    },
    {
        "id": "c25e406a.5cbe2",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 21,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Conveyor 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Conveyor[0]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 500,
        "wires": [
            [
                "b963ee62.0bacb"
            ]
        ]
    },
    {
        "id": "a36b32ae.08121",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 23,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Conveyor 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Conveyor[1]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 540,
        "wires": [
            [
                "b963ee62.0bacb"
            ]
        ]
    },
    {
        "id": "83d2c9c6.4b4498",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 25,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Conveyor 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Conveyor[2]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 580,
        "wires": [
            [
                "b963ee62.0bacb"
            ]
        ]
    },
    {
        "id": "30b4c220.e99d9e",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 28,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Gate 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Gate[0]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 620,
        "wires": [
            [
                "15d6f3f1.ab8b7c"
            ]
        ]
    },
    {
        "id": "a41bbe2f.57bd2",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 30,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Gate 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Gate[1]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "15d6f3f1.ab8b7c"
            ]
        ]
    },
    {
        "id": "e1dfd8ea.fffd58",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 32,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Gate 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Gate[2]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 700,
        "wires": [
            [
                "15d6f3f1.ab8b7c"
            ]
        ]
    },
    {
        "id": "7ae9ba7e.e11304",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 34,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Gate 4",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Gate[3]",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 740,
        "wires": [
            [
                "15d6f3f1.ab8b7c"
            ]
        ]
    },
    {
        "id": "ebe44ce1.b8e39",
        "type": "ui_text",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "group": "be2ad30f.7237d",
        "order": 36,
        "width": 0,
        "height": 0,
        "name": "Mode",
        "label": "Manual Mode:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "337d129d.388b3e",
        "type": "ui_template",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "group": "be2ad30f.7237d",
        "name": "Manual",
        "order": 19,
        "width": 4,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'/uimedia/Buttons/yellow_down.png'})\">\n<img width=\"80\" height=\"80\" src=  {{msg.payload}}  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "b54e210a.1d462"
            ]
        ]
    },
    {
        "id": "b54e210a.1d462",
        "type": "change",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "337d129d.388b3e",
                "40ac8e3f.3177a",
                "eadb92d9.e6e96"
            ]
        ]
    },
    {
        "id": "eadb92d9.e6e96",
        "type": "function",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "Manual Mode",
        "func": "manual = global.get(\"System.Mode.Manual\");\nif(manual){\n    msg.payload = \"Activated\";\n    msg.enabled = true;\n}\nelse{\n    msg.payload = \"Off\"\n    msg.enabled = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "ebe44ce1.b8e39",
                "dd54f8bc.dd3cb8"
            ]
        ]
    },
    {
        "id": "40ac8e3f.3177a",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "Calibration manual out",
        "links": [
            "4b56d888.611a48"
        ],
        "x": 535,
        "y": 240,
        "wires": []
    },
    {
        "id": "19445b67.4ce0f5",
        "type": "link in",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "Calibration Manual In",
        "links": [
            "278bd8fd.9eb6c8"
        ],
        "x": 115,
        "y": 200,
        "wires": [
            [
                "337d129d.388b3e",
                "a4822934.f6e958"
            ]
        ]
    },
    {
        "id": "a4822934.f6e958",
        "type": "rbe",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "eadb92d9.e6e96"
            ]
        ]
    },
    {
        "id": "dd54f8bc.dd3cb8",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "Calibration Enabled",
        "links": [
            "54d5da5a.b19834"
        ],
        "x": 755,
        "y": 240,
        "wires": []
    },
    {
        "id": "54d5da5a.b19834",
        "type": "link in",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "links": [
            "dd54f8bc.dd3cb8"
        ],
        "x": 115,
        "y": 460,
        "wires": [
            [
                "b1aa37d4.52a778",
                "37e0b68e.bf946a",
                "c25e406a.5cbe2",
                "a36b32ae.08121",
                "83d2c9c6.4b4498",
                "30b4c220.e99d9e",
                "a41bbe2f.57bd2",
                "e1dfd8ea.fffd58",
                "7ae9ba7e.e11304",
                "89fd7fac.bb658"
            ]
        ]
    },
    {
        "id": "b963ee62.0bacb",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "Hopper[0] Click Out",
        "links": [
            "cee4ac80.86c26"
        ],
        "x": 455,
        "y": 540,
        "wires": []
    },
    {
        "id": "15d6f3f1.ab8b7c",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "Gate[0] Click Out",
        "links": [
            "5d1af776.723ea8"
        ],
        "x": 455,
        "y": 680,
        "wires": []
    },
    {
        "id": "18145f6a.2a14e1",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "Hopper[0] Click Out",
        "links": [
            "cee4ac80.86c26"
        ],
        "x": 575,
        "y": 460,
        "wires": []
    },
    {
        "id": "d2a59bbe.fbbde8",
        "type": "change",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ActiveElement",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 460,
        "wires": [
            [
                "18145f6a.2a14e1"
            ]
        ]
    },
    {
        "id": "61dc1957.7995b8",
        "type": "function",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "name": "Select Chemical",
        "func": "var output =[];\nlet id = msg.row;\nflow.set(\"ActiveElement\",`Chemical[${id}]`);\nflow.set(\"Type\",\"Chemical\");\noutput.push(msg.payload);\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "15c3f74a.9be859"
            ]
        ]
    },
    {
        "id": "873c0269.04764",
        "type": "trigger",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "op1": "ActiveElement",
        "op2": "ActiveElement",
        "op1type": "flow",
        "op2type": "flow",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 360,
        "wires": [
            [
                "36fce0af.f503b"
            ]
        ]
    },
    {
        "id": "e656d201.871e",
        "type": "change",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "CalibTime",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "873c0269.04764"
            ]
        ]
    },
    {
        "id": "36fce0af.f503b",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "Hopper[0] Click Out",
        "links": [
            "cee4ac80.86c26"
        ],
        "x": 755,
        "y": 360,
        "wires": []
    },
    {
        "id": "69230173.a994",
        "type": "function",
        "z": "20d1a20.528db5e",
        "g": "226c9aea.5d44f6",
        "name": "CalibTime",
        "func": "flow.set(\"CalibTime\",msg.payload*1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "89fd7fac.bb658",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 400,
        "wires": [
            [
                "16ff2fed.2b43c"
            ]
        ]
    },
    {
        "id": "16ff2fed.2b43c",
        "type": "change",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "873c0269.04764",
                "68a05bef.dbe7f4"
            ]
        ]
    },
    {
        "id": "68a05bef.dbe7f4",
        "type": "change",
        "z": "20d1a20.528db5e",
        "g": "73c5b370.8c956c",
        "name": "ActElement",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ActiveElement",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 400,
        "wires": [
            [
                "36fce0af.f503b"
            ]
        ]
    },
    {
        "id": "204968bd.0bfda8",
        "type": "ui_text",
        "z": "20d1a20.528db5e",
        "group": "be2ad30f.7237d",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "New Max Flow",
        "label": "New Max Flow:",
        "format": "<font size = 4 color=\"lime\">{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 840,
        "wires": []
    },
    {
        "id": "7a595665.e62938",
        "type": "function",
        "z": "20d1a20.528db5e",
        "name": "New Max Flow",
        "func": "let time = flow.get(\"CalibTime\")/1000;\nlet type = flow.get(\"Type\");\nlet result = msg.payload;\n\nlet MaxFlow = result * 60 /time;\n\nif(type === \"Hopper\"){\n    let prodCapac = global.get(\"System.General.ProdCapacity\");\n    MaxFlow = MaxFlow/prodCapac * 100;\n    flow.set(\"NewValue\",parseInt(MaxFlow));\n    msg.payload = MaxFlow.toFixed(0) +\" %\";\n}\nelse{\n    flow.set(\"NewValue\",parseFloat(MaxFlow.toFixed(1)));\n    msg.payload = MaxFlow.toFixed(1) +\" lbs\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 840,
        "wires": [
            [
                "204968bd.0bfda8"
            ]
        ]
    },
    {
        "id": "41da2838.529dc8",
        "type": "ui_button",
        "z": "20d1a20.528db5e",
        "name": "",
        "group": "be2ad30f.7237d",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Calibrate ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 900,
        "wires": [
            [
                "467f7cfc.b1bf74"
            ]
        ]
    },
    {
        "id": "467f7cfc.b1bf74",
        "type": "function",
        "z": "20d1a20.528db5e",
        "name": "Set New Value",
        "func": "let element = flow.get(\"ActiveElement\");\nlet newValue = flow.get(\"NewValue\");\nglobal.set(`System.${element}.FC`,newValue);\n\nvar output =[];\nlet sysElement = global.get(`System.${element}`);\n\noutput.push(sysElement);\nmsg.payload = output;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 900,
        "wires": [
            [
                "e4f29fc6.ca9ef"
            ]
        ]
    },
    {
        "id": "e4f29fc6.ca9ef",
        "type": "link out",
        "z": "20d1a20.528db5e",
        "name": "New Value Out",
        "links": [
            "f16566a7.e04458"
        ],
        "x": 515,
        "y": 900,
        "wires": []
    },
    {
        "id": "f16566a7.e04458",
        "type": "link in",
        "z": "20d1a20.528db5e",
        "g": "e9a961e5.4915a",
        "name": "New Value In",
        "links": [
            "e4f29fc6.ca9ef"
        ],
        "x": 915,
        "y": 100,
        "wires": [
            [
                "15c3f74a.9be859"
            ]
        ]
    },
    {
        "id": "55b74c50840697be",
        "type": "ui_table",
        "z": "fa6624f0a3e80cb9",
        "group": "a7d0a896.984158",
        "name": "Details",
        "order": 19,
        "width": 25,
        "height": 1,
        "columns": [
            {
                "field": "Hopper.0",
                "title": "Soil 1 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.1",
                "title": "Soil 2 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.2",
                "title": "Soil 3 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.3",
                "title": "Soil 4 (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Hopper.4",
                "title": "Soil 5  (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "e08e379a6a992c6b",
        "type": "function",
        "z": "fa6624f0a3e80cb9",
        "name": "Show Line info",
        "func": "let line = msg.payload;\nflow.set(\"Line\", line);\nlet Load = global.get(`System.FlatFiller[${line}].Recipe.Load`);\nvar recipeOut =[];\nif(!Load){\n    msg.payload = recipeOut;\n    msg.enabled = false;\n    return msg;\n}\n\nlet batchSize =  global.get(`System.FlatFiller[${line}].Batch.Size`);\nlet recId = global.get(`System.FlatFiller[${line}].Recipe.No`)-1;\nlet recipe = global.get(`Recipe[${recId}]`);\nlet enabled = !global.get(`System.FlatFiller[${line}].Active`);\n\n\nrecipeOut.push(recipe);\n\nmsg.payload = recipeOut;\nmsg.data = {Line: line+1, RecipeNo: recId+1, Mix:recipe.Name, Batch:batchSize, Enabled:enabled};\nmsg.enabled = true; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 200,
        "wires": [
            [
                "55b74c50840697be",
                "89ada975280e797e",
                "7eed0e68db98bfdf",
                "759cab7f9906fc0d",
                "8b0db5d2757cbc72",
                "d07d71857be9024c",
                "e6986c2c0d90fab6",
                "037c127c6f6ac347"
            ]
        ]
    },
    {
        "id": "89ada975280e797e",
        "type": "ui_table",
        "z": "fa6624f0a3e80cb9",
        "group": "a7d0a896.984158",
        "name": "Details",
        "order": 23,
        "width": 25,
        "height": 1,
        "columns": [
            {
                "field": "Chemical.0",
                "title": "Chem 1 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.1",
                "title": "Chem 2 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.2",
                "title": "Chem 3 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.3",
                "title": "Chem 4 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Chemical.4",
                "title": "Chem 5 (lbs)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 910,
        "y": 240,
        "wires": []
    },
    {
        "id": "759cab7f9906fc0d",
        "type": "ui_text",
        "z": "fa6624f0a3e80cb9",
        "group": "a7d0a896.984158",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Recipe No:",
        "format": "{{msg.data.RecipeNo}}",
        "layout": "row-spread",
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "7eed0e68db98bfdf",
        "type": "ui_text",
        "z": "fa6624f0a3e80cb9",
        "group": "a7d0a896.984158",
        "order": 14,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Mix:",
        "format": "{{msg.data.Mix}}",
        "layout": "row-spread",
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "045380139d9d8174",
        "type": "ui_button",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "group": "a7d0a896.984158",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Line 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{Color1}}",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "e08e379a6a992c6b"
            ]
        ]
    },
    {
        "id": "8b0db5d2757cbc72",
        "type": "ui_text",
        "z": "fa6624f0a3e80cb9",
        "group": "a7d0a896.984158",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Line:",
        "format": "{{msg.data.Line}}",
        "layout": "row-spread",
        "x": 910,
        "y": 80,
        "wires": []
    },
    {
        "id": "d0b0a19014653261",
        "type": "ui_button",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "group": "a7d0a896.984158",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Line 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{Color2}}",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "e08e379a6a992c6b"
            ]
        ]
    },
    {
        "id": "a5dc32abd08a7336",
        "type": "ui_button",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "group": "a7d0a896.984158",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Line 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{Color3}}",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "e08e379a6a992c6b"
            ]
        ]
    },
    {
        "id": "f016bbdcb8fbfcd1",
        "type": "ui_button",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "group": "a7d0a896.984158",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Line 4",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{Color4}}",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 280,
        "wires": [
            [
                "e08e379a6a992c6b"
            ]
        ]
    },
    {
        "id": "e6986c2c0d90fab6",
        "type": "ui_button",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "group": "a7d0a896.984158",
        "order": 21,
        "width": 3,
        "height": 2,
        "passthru": false,
        "label": "Call",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 910,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8b601d68b019edf7",
        "type": "ui_numeric",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "label": "Batch size",
        "tooltip": "",
        "group": "a7d0a896.984158",
        "order": 16,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": "0.1",
        "max": "5",
        "step": "0.1",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "40d37724e90cfcb8"
            ]
        ]
    },
    {
        "id": "e839c4392448404c",
        "type": "function",
        "z": "fa6624f0a3e80cb9",
        "name": "Load Line",
        "func": "let tab = msg.name;\nif(tab != \"Lines\")\n return;\n\nmsg.payload=flow.get(\"Line\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"Line\",0);",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            [
                "e08e379a6a992c6b",
                "c35671aa41655a9f"
            ]
        ]
    },
    {
        "id": "a7982a7f2de48dc8",
        "type": "ui_ui_control",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "events": "all",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "e839c4392448404c"
            ]
        ]
    },
    {
        "id": "21a2c16a2f751cf2",
        "type": "function",
        "z": "fa6624f0a3e80cb9",
        "name": "Color Line",
        "func": "let Line = flow.get(\"Line\");\nmsg.Color1=\"rgb(9, 116, 121)\";\nmsg.Color2=\"rgb(9, 116, 121)\";\nmsg.Color3=\"rgb(9, 116, 121)\";\nmsg.Color4 =\"rgb(9, 116, 121)\"\nswitch (Line){\n    case 0: msg.Color1=\"red\";\n    break;\n    case 1: msg.Color2=\"red\";\n    break;\n    case 2: msg.Color3=\"red\";\n    break;\n    case 3: msg.Color4=\"red\";\n    break;\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 200,
        "wires": [
            [
                "045380139d9d8174",
                "d0b0a19014653261",
                "a5dc32abd08a7336",
                "f016bbdcb8fbfcd1"
            ]
        ]
    },
    {
        "id": "e5211860a343ed34",
        "type": "link out",
        "z": "fa6624f0a3e80cb9",
        "name": "Show Line Out",
        "links": [
            "e1f3c6079d24b10d"
        ],
        "x": 1055,
        "y": 200,
        "wires": []
    },
    {
        "id": "e1f3c6079d24b10d",
        "type": "link in",
        "z": "fa6624f0a3e80cb9",
        "name": "Show Line In",
        "links": [
            "e5211860a343ed34",
            "c35671aa41655a9f"
        ],
        "x": 115,
        "y": 200,
        "wires": [
            [
                "21a2c16a2f751cf2"
            ]
        ]
    },
    {
        "id": "c35671aa41655a9f",
        "type": "link out",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "links": [
            "e1f3c6079d24b10d"
        ],
        "x": 615,
        "y": 120,
        "wires": []
    },
    {
        "id": "40d37724e90cfcb8",
        "type": "function",
        "z": "fa6624f0a3e80cb9",
        "name": "Batch Size",
        "func": "let line = flow.get(\"Line\");\nglobal.set(`System.FlatFiller[${line}].Batch.Size`, msg.payload);\nmsg.topic = \"Line \"+ (line+1);\n\nlet recId = global.get(`System.FlatFiller[${line}].Recipe.No`) - 1;\nlet recipe = global.get(`Recipe[${recId}]`);\nmsg.recipe = recipe\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "68fb9b082aa1bc78"
            ]
        ]
    },
    {
        "id": "d07d71857be9024c",
        "type": "change",
        "z": "fa6624f0a3e80cb9",
        "name": "Batch",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "data.Batch",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "data.Enabled",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 320,
        "wires": [
            [
                "3d250ba47e3e8397"
            ]
        ]
    },
    {
        "id": "037c127c6f6ac347",
        "type": "change",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 200,
        "wires": [
            [
                "e5211860a343ed34"
            ]
        ]
    },
    {
        "id": "3d250ba47e3e8397",
        "type": "link out",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "links": [
            "dc737617567fa36c"
        ],
        "x": 1015,
        "y": 320,
        "wires": []
    },
    {
        "id": "dc737617567fa36c",
        "type": "link in",
        "z": "fa6624f0a3e80cb9",
        "name": "",
        "links": [
            "3d250ba47e3e8397"
        ],
        "x": 75,
        "y": 440,
        "wires": [
            [
                "8b601d68b019edf7"
            ]
        ]
    },
    {
        "id": "68fb9b082aa1bc78",
        "type": "link out",
        "z": "fa6624f0a3e80cb9",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "9034299f62464cb0"
        ],
        "x": 605,
        "y": 440,
        "wires": []
    },
    {
        "id": "dddcad4d.6059e",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Hoppers Output",
        "func": "\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n \n\nfor (let i= 0; i < hoppers; i ++){\n    \n    let enabled =  global.get(`System.Hopper[${i}].Enabled`);\n    //let active =  global.get(`System.Hopper[${i}].Active`);\n    let active = false;\n    let speed =0;\n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Hopper[i].Active){\n            active = true;\n            speed = flatFiller[j].Hopper[i].Speed;\n        }\n    }\n    let driveID =  i; //global.get(`System.Hopper[${i}].DriveID`);\n    //let speed =  global.get(`System.Hopper[${i}].Speed`);\n    let maxSpeed =  global.get(`System.Hopper[${i}].MaxSpeed`);\n    let manual =  global.get(`System.Hopper[${i}].Manual`);\n    let mixer = global.get(`System.Hopper[${i}].Mixer.Enabled`);\n    let output =  global.get(`System.Hopper[${i}].Mixer.Output`);\n    let error =  global.get(`System.Hopper[${i}].Error`);\n    let pause = global.get(\"System.Mode.Pause\");\n    \n    if(enabled){\n        if(error){\n            global.set(`System.Hopper[${i}].Status`,3);\n            global.set(`System.Drive[${driveID}].Active`,false);\n            if(mixer){\n                global.set(`System.Output[${output}]`,false);\n            }\n        }\n        else{\n            if(active && !pause){\n                global.set(`System.Hopper[${i}].Status`,1);\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                global.set(`System.Drive[${driveID}].Active`,true);\n                if(mixer){\n                    global.set(`System.Output[${output}]`,true);\n                }\n            }\n            else{\n                if(manual){\n                   global.set(`System.Hopper[${i}].Status`,1);\n                   global.set(`System.Drive[${driveID}].Speed`,maxSpeed);\n                   global.set(`System.Drive[${driveID}].Active`,true);\n                    if(mixer){\n                        global.set(`System.Output[${output}]`,true);\n                    }   \n                }\n                else{\n                    /*is off*/\n                    global.set(`System.Hopper[${i}].Status`,2);\n                    global.set(`System.Drive[${driveID}].Speed`,0);\n                    global.set(`System.Drive[${driveID}].Active`,false);\n                    if(mixer){\n                        global.set(`System.Output[${output}]`,false);\n                    }\n                   \n                }\n                \n            }\n            \n            \n        }\n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Hopper[${i}].Status`,0);\n        global.set(`System.Drive[${driveID}].Speed`,0);\n        global.set(`System.Drive[${driveID}].Active`,false);\n        if(mixer){\n            global.set(`System.Output[${output}]`,false);\n        }\n    }\n    \n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "570d0c89.12fcc4",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Chemicals IO",
        "func": "\nlet Chemicals = global.get(\"System.Elements.Chemicals\");\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\nfor (let i= 0; i < Chemicals; i ++){\n    let enabled =  global.get(`System.Chemical[${i}].Enabled`);\n    //let active =  global.get(`System.Chemical[${i}].Active`);\n    let driveID =  i + hoppers;//global.get(`System.Chemical[${i}].DriveID`);\n   // let speed =  global.get(`System.Chemical[${i}].Speed`);\n    let maxSpeed =  global.get(`System.Chemical[${i}].MaxSpeed`);\n    let manual =  global.get(`System.Chemical[${i}].Manual`);\n    \n    let sensorEn = global.get(`System.Chemical[${i}].Sensor.Enabled`);\n    let input = global.get(`System.Chemical[${i}].Sensor.Input`);\n    \n    let active = false;\n    let speed =0;\n    let pause = global.get(\"System.Mode.Pause\");\n    let sensorAct = global.get(`System.Input[${input}]`);\n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Chemical[i].Active){\n            active = true;\n            speed = flatFiller[j].Chemical[i].Speed\n        }\n    }\n    if(sensorEn && sensorAct){\n         global.set(`System.Chemical[${i}].Error`,true);\n    }\n    else{\n        global.set(`System.Chemical[${i}].Error`,false);\n    }\n    \n    let error =  global.get(`System.Chemical[${i}].Error`);\n    \n    if(enabled){\n        if(error){\n            global.set(`System.Chemical[${i}].Status`,3);\n            global.set(`System.Drive[${driveID}].Active`,false);\n            global.set(`System.Drive[${driveID}].Speed`,0);\n            \n            \n        }\n        else{\n            if(active && !pause){\n                global.set(`System.Chemical[${i}].Status`,1);\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                global.set(`System.Drive[${driveID}].Active`,true);\n            }\n            else{\n                if(manual){\n                    global.set(`System.Chemical[${i}].Status`,1);\n                    global.set(`System.Drive[${driveID}].Speed`,maxSpeed);\n                    global.set(`System.Drive[${driveID}].Active`,true);\n                }\n                else{\n                    /*is off*/\n                    global.set(`System.Chemical[${i}].Status`,2);\n                    global.set(`System.Drive[${driveID}].Speed`,0);\n                    global.set(`System.Drive[${driveID}].Active`,false);\n                }\n            }\n        }\n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Chemical[${i}].Status`,0);\n        global.set(`System.Drive[${driveID}].Speed`,0);\n        global.set(`System.Drive[${driveID}].Active`,false);\n        \n    }\n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c0d93494.50c718",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Conveyor output",
        "func": "\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\nfor (let i= 0; i < conveyors; i ++){\n    let enabled =  global.get(`System.Conveyor[${i}].Enabled`);\n    //let active =  global.get(`System.Conveyor[${i}].Active`);\n    let hasDrive =  global.get(`System.Conveyor[${i}].HasDrive`);\n    let driveID =  global.get(`System.Conveyor[${i}].DriveID`);\n    let speed =  global.get(`System.Conveyor[${i}].DriveFrec`);\n    let manual =  global.get(`System.Conveyor[${i}].Manual`);\n    let output =  global.get(`System.Conveyor[${i}].Output`);\n    let mixEnabled = global.get(`System.Conveyor[${i}].Mixer.Enabled`);\n    let mixOutput = global.get(`System.Conveyor[${i}].Mixer.Output`);\n    let active = false;\n    let pause = global.get(\"System.Mode.Pause\");\n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Conveyor[i].Active){\n            active = true;\n        }\n    }\n    \n    if(enabled){\n        if((active && !pause) || manual){\n            global.set(`System.Conveyor[${i}].Status`,1);\n            if(hasDrive){\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                global.set(`System.Drive[${driveID}].Active`,true);\n            }\n            else{\n                 global.set(`System.Output[${output}]`,true);\n            }\n            if(mixEnabled){\n                global.set(`System.Output[${mixOutput}]`, true);\n            }\n            \n        }\n        else{\n            /*is off*/\n            global.set(`System.Conveyor[${i}].Status`,2)\n            if(hasDrive){\n                global.set(`System.Drive[${driveID}].Speed`,0);\n                global.set(`System.Drive[${driveID}].Active`,false);\n            }\n            else{\n                 global.set(`System.Output[${output}]`,false);\n            }\n            if (mixEnabled) {\n                global.set(`System.Output[${mixOutput}]`, false);\n            }\n        }\n            \n        \n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Conveyor[${i}].Status`,0);\n        if(hasDrive){\n                global.set(`System.Drive[${driveID}].Speed`,0);\n                global.set(`System.Drive[${driveID}].Active`,false);\n            }\n        else{\n                 global.set(`System.Output[${output}]`,false);\n        }\n        if (mixEnabled) {\n            global.set(`System.Output[${mixOutput}]`, false);\n        }\n        \n    }\n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "922cb00c.5f5ae",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Gates Output",
        "func": "\nlet gates = global.get(\"System.Elements.Gates\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\n\n\nfor (let i= 0; i < gates; i ++){\n    let enabled =  global.get(`System.Gate[${i}].Enabled`);\n    \n    let bistable =  global.get(`System.Gate[${i}].Bistable`);\n    let pulseDuration =  global.get(`System.Gate[${i}].PulseDuration`);\n    let outputClose =  global.get(`System.Gate[${i}].OutputClose`);\n    let outputOpen =  global.get(`System.Gate[${i}].OutputOpen`);\n    let status =  global.get(`System.Gate[${i}].Status`);\n    let pulse = flow.get(`pulse[${i}]`);\n    \n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Gate[i].Active){\n            if(flatFiller[j].Gate[i].Enabled == 1){\n                global.set(`System.Gate[${i}].Closed`, true);\n                global.set(`System.Gate[${i}].Status`,1);\n            }\n            else{\n                global.set(`System.Gate[${i}].Closed`, false);\n                global.set(`System.Gate[${i}].Status`,2);\n            }\n            \n        }\n    }\n    \n    let closed =  global.get(`System.Gate[${i}].Closed`);\n    \n    if(enabled){\n        \n        if(closed){\n            \n            if(status != 1 ){\n                global.set(`System.Gate[${i}].Status`,1);\n                global.set(`System.Output[${outputClose}]`,true);\n                \n            }\n        }\n        else{\n            if(status != 2 ){\n                global.set(`System.Gate[${i}].Status`,2);\n                global.set(`System.Output[${outputClose}]`,false);\n                \n            }\n        }\n    }\n    else{\n        /*Disabled*/\n        global.set(`System.Gate[${i}].Status`,0);\n        global.set(`System.Output[${outputClose}]`,false);\n       \n    }\n    \n    \n    \n}\nreturn msg;\n   \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "19214b57.ca9fa5",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Check target",
        "func": "\nlet closed = global.get(\"System.Gate\").map(function (el) { return el.Closed; });\n\nif(closed[0]){\n    global.set(\"System.Target[0].Status\",1);\n    global.set(\"System.Target[1].Status\",0);\n    global.set(\"System.Target[2].Status\",0);\n    global.set(\"System.Target[3].Status\",0);\n}\nelse{\n    if(closed[1]){\n        global.set(\"System.Target[0].Status\",0);\n        global.set(\"System.Target[1].Status\",1);\n        global.set(\"System.Target[2].Status\",0);\n        global.set(\"System.Target[3].Status\",0);\n    }\n    else{\n        if(closed[2]){\n            global.set(\"System.Target[0].Status\",0);\n            global.set(\"System.Target[1].Status\",0);\n            global.set(\"System.Target[2].Status\",1);\n            global.set(\"System.Target[3].Status\",0);\n        }\n        else{\n            if(closed[3]){\n                global.set(\"System.Target[0].Status\",0);\n                global.set(\"System.Target[1].Status\",0);\n                global.set(\"System.Target[2].Status\",0);\n                global.set(\"System.Target[3].Status\",1);\n            }\n            else{\n                global.set(\"System.Target[0].Status\",0);\n                global.set(\"System.Target[1].Status\",0);\n                global.set(\"System.Target[2].Status\",0);\n                global.set(\"System.Target[3].Status\",0);\n            }\n        }\n    }\n}\n\n\n msg.payload = closed  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f6c8c962.1f6c18",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Check for active",
        "func": "if(global.get(\"System.Mode.Pause\")){\n    msg.payload1 = 1;\n    msg.reset = true;\n    return msg\n}\n \nlet active;\ntry{\n  active = global.get(\"System.FlatFiller\").map(function (el) { return el.Active; });\n}\ncatch(error){\n    return;\n}\n\nmsg.payload1 = 2;\n\nactive.forEach((el) =>   {\n   if(el){\n       msg.payload1 =1;\n       global.set(\"System.Batch.Active\",true);\n    }\n   \n})\n if(msg.payload1 === 2){\n     msg.reset =true; \n     global.set(\"System.Batch.RTEncoder\",0);\n     global.set(\"System.Batch.NextID\",0);\n     global.set(\"System.Batch.NextEncoder\",0);\n     global.set(\"System.Batch.Active\",false);\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d9b09935.b76cb8",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Batch Elements",
        "func": "let Auto = global.get(\"System.Mode.Auto\");\nif(!Auto){\n    return;\n}\nlet batchID =20;\nlet minID =10;\ntry{\n  batchID = global.get(\"System.FlatFiller\").map(function (el) { return el.Batch.ID; });\n  minID = Math.min(...batchID);\n}\ncatch(error){\n   \n}\n\n\nlet FlatFillers = global.get(\"System.Elements.FlatFillers\");\nlet Hoppers = global.get(\"System.Elements.Hoppers\");\nlet Chemicals = global.get(\"System.Elements.Chemicals\");\nlet Conveyors = global.get(\"System.Elements.Conveyors\");\nlet Waters = global.get(\"System.Elements.Waters\");\nlet Gates = global.get(\"System.Elements.Gates\");\n\nlet FlatFiller = global.get(\"System.FlatFiller\");\n\nfor(let i=0; i < FlatFillers; i++){\n    /*Check if flat filler is active*/\n    if(FlatFiller[i].Active){\n        /*Activate all elements*/\n       \n        /*Hoppers*/\n        for(let j=0; j < Hoppers; j++){ \n               //msg.payload = FlatFiller[0].Batch.Encoder.Value\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Hopper[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Hopper[j].EncodEnd) {\n                    FlatFiller[i].Hopper[j].Active = true;\n                    msg.payload = 48\n            }\n            else{\n                FlatFiller[i].Hopper[j].Active = false;\n            }\n        }\n        \n        /*Chemicals*/\n        for(let j=0; j < Chemicals; j++){\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Chemical[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Chemical[j].EncodEnd) {\n                   \n                   if(global.get(`System.Chemical[${j}].Error`)==true){\n                       /*Pause*/\n                       \n                       global.set(\"System.Mode.Test\",true);\n            \n                   }\n                   else{\n                       FlatFiller[i].Chemical[j].Active = true;\n                   }\n                   \n                  \n            }\n            else{\n                FlatFiller[i].Chemical[j].Active = false;\n            }\n        }\n        \n        /*Conveyors*/\n        msg.payload = Conveyors\n        for(let j=0; j < Conveyors; j++){\n            \n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Conveyor[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Conveyor[j].EncodEnd) {\n                  FlatFiller[i].Conveyor[j].Active = true;\n            }\n            else{\n                FlatFiller[i].Conveyor[j].Active = false;\n            }\n        }\n        \n         /*Waters*/\n        for(let j=0; j < Waters; j++){\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Water[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Water[j].EncodEnd) {\n                  FlatFiller[i].Water[j].Active = true;\n            }\n            else{\n                FlatFiller[i].Water[j].Active = false;\n            }\n        }\n        \n        /*Gates*/\n        for(let j=0; j < Gates; j++){\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Gate[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Gate[j].EncodEnd) {\n                  FlatFiller[i].Gate[j].Active = true;\n            }\n            else{\n                FlatFiller[i].Gate[j].Active = false;\n            }\n        }\n        \n    }\n    else{\n        /*Hoppers*/\n        for(let j=0; j < Hoppers; j++){\n            FlatFiller[i].Hopper[j].Active = false;\n        }\n        \n        /*Chemicals*/\n        for(let j=0; j < Chemicals; j++){\n            FlatFiller[i].Chemical[j].Active = false;\n        }\n        \n        /*Conveyors*/\n        for(let j=0; j < Conveyors; j++){\n            FlatFiller[i].Conveyor[j].Active = false;\n        }\n        \n        /*Waters*/\n        for(let j=0; j < Waters; j++){\n            FlatFiller[i].Water[j].Active = false;\n        }\n        \n        /*Gates*/\n        for(let j=0; j < Gates; j++){\n            FlatFiller[i].Gate[j].Active = false;\n        }\n    }\n}\n\nglobal.set(\"System.FlatFiller\",FlatFiller);\nmsg.payload = minID;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "85a5f756.35bb18",
        "type": "inject",
        "z": "40327a72.0b3544",
        "name": "500 ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "d9b09935.b76cb8",
                "637e127f.73264c",
                "f6c8c962.1f6c18",
                "19214b57.ca9fa5",
                "922cb00c.5f5ae",
                "c0d93494.50c718",
                "570d0c89.12fcc4",
                "dddcad4d.6059e",
                "9d2200ce.bf954",
                "c42c444.98eabb8"
            ]
        ]
    },
    {
        "id": "637e127f.73264c",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Batch control",
        "func": "let Batch = global.get(\"System.Batch\");\nlet FlatFillers = global.get(\"System.Elements.FlatFillers\");\nlet FlatFiller = global.get(\"System.FlatFiller\");\n\n\n  \nfor(let i=0; i < FlatFillers; i++){\n    /*Check to activate flat filler*/\n    \n    if(FlatFiller[i].Call && !FlatFiller[i].Active){\n         FlatFiller[i].Call = false;\n         FlatFiller[i].Active = true;\n         FlatFiller[i].ID = Batch.NextID;\n         Batch.NextID ++;\n         FlatFiller[i].Batch.Encoder.Start = Batch.NextEncoder;\n         FlatFiller[i].Batch.Encoder.End = Batch.NextEncoder + FlatFiller[i].Batch.TotalTime * 10 + FlatFiller[i].Batch.Time *10;\n         Batch.NextEncoder += (FlatFiller[i].Batch.Time + Batch.Gap) *10;\n    }\n    else{\n        /*Check to deactivate batch*/\n        if(FlatFiller[i].Active){\n            FlatFiller[i].Batch.Encoder.Value = Batch.RTEncoder - FlatFiller[i].Batch.Encoder.Start;\n            if(FlatFiller[i].Batch.Encoder.Value < 0){\n                FlatFiller[i].Batch.Encoder.Value = 0;\n            }\n            if(Batch.RTEncoder >= FlatFiller[i].Batch.Encoder.End){\n                FlatFiller[i].Active = false;\n                FlatFiller[i].Batch.Encoder.Value =0;\n            }\n            \n            \n        }\n    }\n}\n//msg.payload = FlatFiller[0].Batch.Encoder.Value\n\nglobal.set(\"System.FlatFiller\", FlatFiller);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "92651f91.bfeb",
        "type": "inject",
        "z": "40327a72.0b3544",
        "name": "250 ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "fd3e3c90.d23a8"
            ]
        ]
    },
    {
        "id": "fd3e3c90.d23a8",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Global Encoder",
        "func": "let active = global.get(\"System.Batch.Active\");\n\nif(global.get(\"System.Mode.Pause\") || !active){\n    flow.set(\"lasttime\",msg.payload);\n    return;\n}\n\nlet RTEncoder = global.get(\"System.Batch.RTEncoder\");\nlet lasttime = flow.get(\"lasttime\");\nflow.set(\"lasttime\",msg.payload);\n\nlet ms = msg.payload - lasttime;\n\nms = parseInt(ms/100);\n\nRTEncoder =RTEncoder + ms;\n\nglobal.set(\"System.Batch.RTEncoder\",RTEncoder);\n\n\nmsg.payload = RTEncoder;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 680,
        "wires": [
            [
                "6ed66211.525d6c"
            ]
        ]
    },
    {
        "id": "bd10e3a4.dadd8",
        "type": "inject",
        "z": "40327a72.0b3544",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "dba62b37.360248"
            ]
        ]
    },
    {
        "id": "dba62b37.360248",
        "type": "change",
        "z": "40327a72.0b3544",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lasttime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6ed66211.525d6c",
        "type": "debug",
        "z": "40327a72.0b3544",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 680,
        "wires": []
    },
    {
        "id": "9d2200ce.bf954",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Flat Fillers Input",
        "func": "\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\nlet Auto = global.get(\"System.Mode.Auto\");\n\nlet Load = false;\nlet sensorAct = false;\n\n\nfor (let i= 0; i < flatFillers; i ++){\n   \n    Load = global.get(`System.FlatFiller[${i}].Recipe.Load`);\n    sensorAct = global.get(`System.Input[${flatFiller[i].Sensor.Input}]`);\n    \n    if(flatFiller[i].Enabled && flatFiller[i].Sensor.Enabled && !flatFiller[i].Active && sensorAct && Auto && Load){\n        global.set(`System.FlatFiller[${i}].Call`,true);\n    }\n    \n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "5ab75e14.67646"
            ]
        ]
    },
    {
        "id": "5ab75e14.67646",
        "type": "debug",
        "z": "40327a72.0b3544",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 420,
        "wires": []
    },
    {
        "id": "447ea64c.1c89b8",
        "type": "trigger",
        "z": "40327a72.0b3544",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 460,
        "y": 800,
        "wires": [
            [
                "354de270.39f4fe"
            ]
        ]
    },
    {
        "id": "354de270.39f4fe",
        "type": "change",
        "z": "40327a72.0b3544",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.Active",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 800,
        "wires": [
            [
                "b19fc981.a7ca98"
            ]
        ]
    },
    {
        "id": "b19fc981.a7ca98",
        "type": "switch",
        "z": "40327a72.0b3544",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 800,
        "wires": [
            [
                "861aae06.0b74a"
            ]
        ]
    },
    {
        "id": "861aae06.0b74a",
        "type": "change",
        "z": "40327a72.0b3544",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Mode.Pause",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "System.Mode.Manual",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "System.Mode.Auto",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "558c82c4.be70bc",
        "type": "link in",
        "z": "40327a72.0b3544",
        "name": "Alarm on Init In",
        "links": [
            "34aee857.fc2b88",
            "daf9c0.5822064"
        ],
        "x": 115,
        "y": 800,
        "wires": [
            [
                "8f9cf7aa.1e49e8"
            ]
        ]
    },
    {
        "id": "ec6abbb.9316948",
        "type": "comment",
        "z": "40327a72.0b3544",
        "name": "Alarm on Init or after Pause",
        "info": "",
        "x": 340,
        "y": 740,
        "wires": []
    },
    {
        "id": "8f9cf7aa.1e49e8",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Set Delay",
        "func": "msg.delay = global.get(\"System.Alarm.Time\")*1000;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 800,
        "wires": [
            [
                "447ea64c.1c89b8"
            ]
        ]
    },
    {
        "id": "4ec7b845.ff3a88",
        "type": "file",
        "z": "40327a72.0b3544",
        "name": "log",
        "filename": ".node-red/projects/Smart_Mix/Config/log1.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1270,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5d8587e2.1e9e48",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "log",
        "func": "\nmsg.payload = msg.topic+\",\"+ msg.payload + \",\"+ global.get(\"System.Batch.RTEncoder\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "4ec7b845.ff3a88"
            ]
        ]
    },
    {
        "id": "67ecd6e0.c3a3d8",
        "type": "link in",
        "z": "40327a72.0b3544",
        "name": "",
        "links": [
            "3ef4599d.e508e6",
            "c3e9901c.de37a",
            "c9bc6a75.65a378",
            "a86154d0.b06568",
            "ae5cf8af.de4988",
            "273cc5e9.f9da4a",
            "e3fc78c5.68cc38"
        ],
        "x": 115,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c42c444.98eabb8",
        "type": "function",
        "z": "40327a72.0b3544",
        "name": "Check for errors",
        "func": "/*E_Stop*/\nlet eStopEn = global.get(\"System.EStop.Enabled\");\nlet eStopIn = global.get(\"System.EStop.Input\");\nlet eStopActive = global.get(`System.Input[${eStopIn}]`);\nlet active = global.get(\"System.Batch.Active\");\nlet faults = global.get(\"System.Fault.Faults\");\nlet code = global.get(\"System.Fault.Code\");\n\nif(eStopEn && eStopActive && code !=2){\n    /*eStop pressed*/\n     let fault = {DateTime:new Date() , Type:\"Emergency Stop\", Code:2, Message:\"eStop Pressed\", Ack:false};\n     fault.Type = \"Emergency Stop\";\n     fault.Code = 0;\n     fault.Message = \"Emergency Stop Pressed\";\n     faults.push(fault);\n     msg.fault =1;\n    \n    if(active){\n        global.set(\"System.Mode.Pause\",true);\n        global.set(\"System.Mode.Auto\",false);\n        \n    }\n    global.set(\"System.Mode.Fault\",true);\n    global.set(\"System.Fault.Code\",2);\n    global.set(\"System.Fault.Faults\",faults);\n    \n    \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "58427d2d.fcd224",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Max Capacity (%)",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 6,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "37b4e20c.6ccd2e"
            ]
        ]
    },
    {
        "id": "3ae700f.9bd69",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 100,
        "wires": [
            [
                "3a49b86e.1d2228"
            ]
        ]
    },
    {
        "id": "fe4b534b.509be",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Max Speed (Hz)",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 8,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 420,
        "y": 220,
        "wires": [
            [
                "403f8554.04661c"
            ]
        ]
    },
    {
        "id": "9c26e4c3.eb4ba8",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "6741cb69.b888d4"
            ]
        ]
    },
    {
        "id": "2832b695.962d5a",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "72c91b42.7bd514"
            ]
        ]
    },
    {
        "id": "b39e020f.6076b",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 16,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "550437b4.00c838"
            ]
        ]
    },
    {
        "id": "721db3a.1322d4c",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Max Capacity (%)",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 6,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "c9433e01.cbaad"
            ]
        ]
    },
    {
        "id": "b3d8ca0f.1ab9f8",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 380,
        "y": 400,
        "wires": [
            [
                "d56e91d3.57b55"
            ]
        ]
    },
    {
        "id": "c84de0f9.a1095",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Max Speed (Hz)",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 8,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 400,
        "y": 520,
        "wires": [
            [
                "d6a1b9ba.fc5fb8"
            ]
        ]
    },
    {
        "id": "6868ca28.935184",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 380,
        "y": 460,
        "wires": [
            [
                "dea6ad04.9a64f"
            ]
        ]
    },
    {
        "id": "f4e3e0a9.98511",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 970,
        "y": 520,
        "wires": [
            [
                "6ccaa196.8d4d1"
            ]
        ]
    },
    {
        "id": "9952220c.193bd",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 16,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 400,
        "y": 580,
        "wires": [
            [
                "709640f1.b20ab"
            ]
        ]
    },
    {
        "id": "b01abbbb.a68508",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Max Capacity (%)",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 6,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 1010,
        "y": 700,
        "wires": [
            [
                "b7ac218a.cbff1"
            ]
        ]
    },
    {
        "id": "976f5d7c.b8312",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 700,
        "wires": [
            [
                "e1b27ac4.d79f68"
            ]
        ]
    },
    {
        "id": "8a33975b.029068",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Max Speed (Hz)",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 8,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 420,
        "y": 820,
        "wires": [
            [
                "4f34cb8d.8392b4"
            ]
        ]
    },
    {
        "id": "5b77ee8c.fadc5",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 400,
        "y": 760,
        "wires": [
            [
                "ccda587c.76bfb8"
            ]
        ]
    },
    {
        "id": "db1a7c14.e1c06",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 990,
        "y": 820,
        "wires": [
            [
                "3492cb60.73eca4"
            ]
        ]
    },
    {
        "id": "bd8b7c7c.0fd24",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 16,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 420,
        "y": 880,
        "wires": [
            [
                "bdcf2797.770658"
            ]
        ]
    },
    {
        "id": "feee9d31.006dd",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Max Capacity (%)",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 6,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "d7af4d4b.1023"
            ]
        ]
    },
    {
        "id": "53d8a222.26ed1c",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "8d22c50c.1aaad8"
            ]
        ]
    },
    {
        "id": "e75ed694.ea1f38",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Max Speed (Hz)",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 8,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "be5d678f.f36d48"
            ]
        ]
    },
    {
        "id": "a1d11a2b.0c98a8",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 420,
        "y": 1100,
        "wires": [
            [
                "b6ac4003.fa4f4"
            ]
        ]
    },
    {
        "id": "c4e5f305.0f53b",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1010,
        "y": 1160,
        "wires": [
            [
                "70acbfcb.3abd5"
            ]
        ]
    },
    {
        "id": "2a45ec9f.b82844",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 16,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 440,
        "y": 1220,
        "wires": [
            [
                "92901de.5a626e"
            ]
        ]
    },
    {
        "id": "b21c4eb9.c630a",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Max Capacity (%)",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 6,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 1030,
        "y": 1340,
        "wires": [
            [
                "fc2ec61d.ce8a28"
            ]
        ]
    },
    {
        "id": "2c6cff69.3db59",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "d5ef9869.43df88"
            ]
        ]
    },
    {
        "id": "cc3ceea4.cbe39",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Max Speed (Hz)",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 8,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 440,
        "y": 1460,
        "wires": [
            [
                "64826896.6b2b88"
            ]
        ]
    },
    {
        "id": "9cf248f9.a76008",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 10,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "0",
        "max": "255",
        "step": 1,
        "x": 420,
        "y": 1400,
        "wires": [
            [
                "85e167fd.35e688"
            ]
        ]
    },
    {
        "id": "d1473903.4226f8",
        "type": "ui_switch",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Mixer",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1010,
        "y": 1460,
        "wires": [
            [
                "315b780d.d60158"
            ]
        ]
    },
    {
        "id": "da636b2f.d21508",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 16,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "0.5",
        "x": 440,
        "y": 1520,
        "wires": [
            [
                "1f3ed156.afb4bf"
            ]
        ]
    },
    {
        "id": "fb009e6d.da1b5",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 14,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1030,
        "y": 160,
        "wires": [
            [
                "b03f5740.bf0308"
            ]
        ]
    },
    {
        "id": "115afd4b.a96953",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 14,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 990,
        "y": 460,
        "wires": [
            [
                "335409c.584c0f6"
            ]
        ]
    },
    {
        "id": "152ba5ff.ce3c3a",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 14,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1010,
        "y": 760,
        "wires": [
            [
                "4c90b03f.9b6c4"
            ]
        ]
    },
    {
        "id": "c6355d84.c1d8b",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 14,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1010,
        "y": 1100,
        "wires": [
            [
                "83f02752.04b7e8"
            ]
        ]
    },
    {
        "id": "2297fa3.6db3406",
        "type": "ui_numeric",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "label": "Mix Output",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 14,
        "width": 8,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": "1",
        "x": 1010,
        "y": 1400,
        "wires": [
            [
                "5fbe6c69.868174"
            ]
        ]
    },
    {
        "id": "16283072.9eafc",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 100,
        "wires": [
            [
                "3ae700f.9bd69"
            ]
        ]
    },
    {
        "id": "3a49b86e.1d2228",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 100,
        "wires": [
            [
                "3fe25cd350043d94"
            ]
        ]
    },
    {
        "id": "e987ff8b.e33b5",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 160,
        "wires": [
            [
                "9c26e4c3.eb4ba8"
            ]
        ]
    },
    {
        "id": "6741cb69.b888d4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "3fe25cd350043d94"
            ]
        ]
    },
    {
        "id": "8edc6800.a55ac8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 220,
        "wires": [
            [
                "fe4b534b.509be"
            ]
        ]
    },
    {
        "id": "403f8554.04661c",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "72593f7a.03115",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 100,
        "wires": [
            [
                "58427d2d.fcd224"
            ]
        ]
    },
    {
        "id": "37b4e20c.6ccd2e",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "bb1a75fe.33fa68",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "b39e020f.6076b"
            ]
        ]
    },
    {
        "id": "550437b4.00c838",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "873a0ad2.c144f8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 220,
        "wires": [
            [
                "2832b695.962d5a"
            ]
        ]
    },
    {
        "id": "72c91b42.7bd514",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "62c1e52f.025acc",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 160,
        "wires": [
            [
                "fb009e6d.da1b5"
            ]
        ]
    },
    {
        "id": "b03f5740.bf0308",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d162f483.fc11d8",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e",
            "97a24162bb3dac14"
        ],
        "x": 115,
        "y": 100,
        "wires": [
            [
                "16283072.9eafc",
                "e987ff8b.e33b5",
                "8edc6800.a55ac8",
                "bb1a75fe.33fa68"
            ]
        ]
    },
    {
        "id": "c27c9c67.88071",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 695,
        "y": 180,
        "wires": [
            [
                "72593f7a.03115",
                "62c1e52f.025acc",
                "873a0ad2.c144f8",
                "fd8fe2d9.072a1"
            ]
        ]
    },
    {
        "id": "c73c5fa8.7d418",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 400,
        "wires": [
            [
                "b3d8ca0f.1ab9f8"
            ]
        ]
    },
    {
        "id": "1157a229.1d6f3e",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "6868ca28.935184"
            ]
        ]
    },
    {
        "id": "5063d30c.c0279c",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 520,
        "wires": [
            [
                "c84de0f9.a1095"
            ]
        ]
    },
    {
        "id": "808a6783.fbe1e8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 580,
        "wires": [
            [
                "9952220c.193bd"
            ]
        ]
    },
    {
        "id": "7b471557.e24bfc",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 520,
        "wires": [
            [
                "f4e3e0a9.98511"
            ]
        ]
    },
    {
        "id": "89f4977d.c97288",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e",
            "97a24162bb3dac14"
        ],
        "x": 115,
        "y": 400,
        "wires": [
            [
                "c73c5fa8.7d418",
                "1157a229.1d6f3e",
                "5063d30c.c0279c",
                "808a6783.fbe1e8"
            ]
        ]
    },
    {
        "id": "d56e91d3.57b55",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "cac48189c9f8cb2b"
            ]
        ]
    },
    {
        "id": "dea6ad04.9a64f",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 460,
        "wires": [
            [
                "cac48189c9f8cb2b"
            ]
        ]
    },
    {
        "id": "d6a1b9ba.fc5fb8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "709640f1.b20ab",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "6ccaa196.8d4d1",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4e52b4a4.ce652c",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 460,
        "wires": [
            [
                "115afd4b.a96953"
            ]
        ]
    },
    {
        "id": "87db994a.ff5ea8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 400,
        "wires": [
            [
                "721db3a.1322d4c"
            ]
        ]
    },
    {
        "id": "c9433e01.cbaad",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "335409c.584c0f6",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e0bb6c55.ba347",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 655,
        "y": 480,
        "wires": [
            [
                "87db994a.ff5ea8",
                "4e52b4a4.ce652c",
                "7b471557.e24bfc",
                "3ece216b.15480e"
            ]
        ]
    },
    {
        "id": "2b740b92.c93934",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e",
            "97a24162bb3dac14"
        ],
        "x": 115,
        "y": 700,
        "wires": [
            [
                "ea53a843.4f0128",
                "eac29457.dfebb8",
                "e120a1d.f85ae6",
                "d981047a.ca4fa8"
            ]
        ]
    },
    {
        "id": "ea53a843.4f0128",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 700,
        "wires": [
            [
                "976f5d7c.b8312"
            ]
        ]
    },
    {
        "id": "eac29457.dfebb8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 760,
        "wires": [
            [
                "5b77ee8c.fadc5"
            ]
        ]
    },
    {
        "id": "e120a1d.f85ae6",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 820,
        "wires": [
            [
                "8a33975b.029068"
            ]
        ]
    },
    {
        "id": "d981047a.ca4fa8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 880,
        "wires": [
            [
                "bd8b7c7c.0fd24"
            ]
        ]
    },
    {
        "id": "42c7bd2b.66e9a4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 820,
        "wires": [
            [
                "db1a7c14.e1c06"
            ]
        ]
    },
    {
        "id": "3492cb60.73eca4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "bdcf2797.770658",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "4f34cb8d.8392b4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ccda587c.76bfb8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 760,
        "wires": [
            [
                "5c95b001da62f9ec"
            ]
        ]
    },
    {
        "id": "e1b27ac4.d79f68",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 700,
        "wires": [
            [
                "5c95b001da62f9ec"
            ]
        ]
    },
    {
        "id": "f60693b6.e7487",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 675,
        "y": 780,
        "wires": [
            [
                "6d9e1af4.e852a4",
                "3e7d7d4c.8cf632",
                "42c7bd2b.66e9a4",
                "542467d4.0e63c8"
            ]
        ]
    },
    {
        "id": "6d9e1af4.e852a4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 700,
        "wires": [
            [
                "b01abbbb.a68508"
            ]
        ]
    },
    {
        "id": "3e7d7d4c.8cf632",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 760,
        "wires": [
            [
                "152ba5ff.ce3c3a"
            ]
        ]
    },
    {
        "id": "4c90b03f.9b6c4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b7ac218a.cbff1",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "eddbc22d.e0809",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 135,
        "y": 1040,
        "wires": [
            [
                "8eca4a6.2de75b8",
                "9a9b40ff.be0e9",
                "abb12a73.e15d38",
                "2cd4868.cba757a"
            ]
        ]
    },
    {
        "id": "8eca4a6.2de75b8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1040,
        "wires": [
            [
                "53d8a222.26ed1c"
            ]
        ]
    },
    {
        "id": "9a9b40ff.be0e9",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1100,
        "wires": [
            [
                "a1d11a2b.0c98a8"
            ]
        ]
    },
    {
        "id": "abb12a73.e15d38",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1160,
        "wires": [
            [
                "e75ed694.ea1f38"
            ]
        ]
    },
    {
        "id": "2cd4868.cba757a",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1220,
        "wires": [
            [
                "2a45ec9f.b82844"
            ]
        ]
    },
    {
        "id": "9734087c.f94998",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1160,
        "wires": [
            [
                "c4e5f305.0f53b"
            ]
        ]
    },
    {
        "id": "70acbfcb.3abd5",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "92901de.5a626e",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "be5d678f.f36d48",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "b6ac4003.fa4f4",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1100,
        "wires": [
            [
                "3b97a8c8181c6e4b"
            ]
        ]
    },
    {
        "id": "8d22c50c.1aaad8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1040,
        "wires": [
            [
                "3b97a8c8181c6e4b"
            ]
        ]
    },
    {
        "id": "1478a060.d7f8c",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 705,
        "y": 1120,
        "wires": [
            [
                "da18dc86.abd21",
                "f12cba7e.a81688",
                "9734087c.f94998",
                "b7c171eb.c29ed"
            ]
        ]
    },
    {
        "id": "da18dc86.abd21",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 1040,
        "wires": [
            [
                "feee9d31.006dd"
            ]
        ]
    },
    {
        "id": "f12cba7e.a81688",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1100,
        "wires": [
            [
                "c6355d84.c1d8b"
            ]
        ]
    },
    {
        "id": "83f02752.04b7e8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d7af4d4b.1023",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "36a914c6.b6006c",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 705,
        "y": 1400,
        "wires": [
            [
                "c6b8c92d.a58448",
                "ad758f7c.9839b",
                "84828a72.493cd8",
                "49788524.406c3c"
            ]
        ]
    },
    {
        "id": "ecfdf61c.0ac038",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1340,
        "wires": [
            [
                "2c6cff69.3db59"
            ]
        ]
    },
    {
        "id": "5f6e890b.149ef8",
        "type": "link in",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "links": [
            "20bb51e5.6a5a5e"
        ],
        "x": 135,
        "y": 1340,
        "wires": [
            [
                "ecfdf61c.0ac038",
                "5215ddc3.bbe034",
                "f3e4c05.7afe74",
                "b35a47dd.3096c8"
            ]
        ]
    },
    {
        "id": "5215ddc3.bbe034",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1400,
        "wires": [
            [
                "9cf248f9.a76008"
            ]
        ]
    },
    {
        "id": "f3e4c05.7afe74",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1460,
        "wires": [
            [
                "cc3ceea4.cbe39"
            ]
        ]
    },
    {
        "id": "b35a47dd.3096c8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1520,
        "wires": [
            [
                "da636b2f.d21508"
            ]
        ]
    },
    {
        "id": "84828a72.493cd8",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].Mixer.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1460,
        "wires": [
            [
                "d1473903.4226f8"
            ]
        ]
    },
    {
        "id": "315b780d.d60158",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Mixer",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].Mixer.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "1f3ed156.afb4bf",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "64826896.6b2b88",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "85e167fd.35e688",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1400,
        "wires": [
            [
                "7b791e120ee7e63e"
            ]
        ]
    },
    {
        "id": "d5ef9869.43df88",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1340,
        "wires": [
            [
                "7b791e120ee7e63e"
            ]
        ]
    },
    {
        "id": "c6b8c92d.a58448",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1340,
        "wires": [
            [
                "b21c4eb9.c630a"
            ]
        ]
    },
    {
        "id": "ad758f7c.9839b",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].Mixer.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1400,
        "wires": [
            [
                "2297fa3.6db3406"
            ]
        ]
    },
    {
        "id": "5fbe6c69.868174",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Mixer Output",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].Mixer.Output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "fc2ec61d.ce8a28",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "fd8fe2d9.072a1",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[0].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "65e7eae7.b2b7b4"
            ]
        ]
    },
    {
        "id": "65e7eae7.b2b7b4",
        "type": "ui_text_input",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "c223051d.3db338",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 990,
        "y": 280,
        "wires": [
            [
                "12dce203.54929e"
            ]
        ]
    },
    {
        "id": "c0aaaeb1.c52a9",
        "type": "ui_text",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "group": "dd4e0296.f45f7",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "Hopper1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1260,
        "y": 280,
        "wires": []
    },
    {
        "id": "923ed66f.554278",
        "type": "ui_text",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "group": "dd4e0296.f45f7",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Hopper 2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1240,
        "y": 580,
        "wires": []
    },
    {
        "id": "d2330d01.7c865",
        "type": "ui_text",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "group": "dd4e0296.f45f7",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Hopper 3",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1260,
        "y": 880,
        "wires": []
    },
    {
        "id": "8ad7d196.297dc",
        "type": "ui_text",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "group": "dd4e0296.f45f7",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "Hopper 4",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1260,
        "y": 1220,
        "wires": []
    },
    {
        "id": "99388d84.1fc1f",
        "type": "ui_text",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "group": "dd4e0296.f45f7",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "Hopper 4",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1280,
        "y": 1520,
        "wires": []
    },
    {
        "id": "12dce203.54929e",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[0].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "c0aaaeb1.c52a9"
            ]
        ]
    },
    {
        "id": "3ece216b.15480e",
        "type": "change",
        "z": "60229619.6bc748",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[1].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 580,
        "wires": [
            [
                "3cd93622.5aed5a"
            ]
        ]
    },
    {
        "id": "3cd93622.5aed5a",
        "type": "ui_text_input",
        "z": "60229619.6bc748",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "1efd71ae.8a2d9e",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 580,
        "wires": [
            [
                "814c4b07.356e48"
            ]
        ]
    },
    {
        "id": "814c4b07.356e48",
        "type": "change",
        "z": "60229619.6bc748",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[1].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "923ed66f.554278"
            ]
        ]
    },
    {
        "id": "542467d4.0e63c8",
        "type": "change",
        "z": "60229619.6bc748",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[2].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 900,
        "wires": [
            [
                "a647cee6.b8c95"
            ]
        ]
    },
    {
        "id": "a647cee6.b8c95",
        "type": "ui_text_input",
        "z": "60229619.6bc748",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "32de7540.2779ba",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 970,
        "y": 900,
        "wires": [
            [
                "e43bae2c.ccc05"
            ]
        ]
    },
    {
        "id": "e43bae2c.ccc05",
        "type": "change",
        "z": "60229619.6bc748",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[2].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 900,
        "wires": [
            [
                "d2330d01.7c865"
            ]
        ]
    },
    {
        "id": "b7c171eb.c29ed",
        "type": "change",
        "z": "60229619.6bc748",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[3].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1220,
        "wires": [
            [
                "bd7353dd.55d84"
            ]
        ]
    },
    {
        "id": "bd7353dd.55d84",
        "type": "ui_text_input",
        "z": "60229619.6bc748",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "bd9c650.e9cfb98",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 970,
        "y": 1220,
        "wires": [
            [
                "65cf48df.950fe8"
            ]
        ]
    },
    {
        "id": "65cf48df.950fe8",
        "type": "change",
        "z": "60229619.6bc748",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[3].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1220,
        "wires": [
            [
                "8ad7d196.297dc"
            ]
        ]
    },
    {
        "id": "49788524.406c3c",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Hopper[4].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1520,
        "wires": [
            [
                "c00d7bd9.b53358"
            ]
        ]
    },
    {
        "id": "c00d7bd9.b53358",
        "type": "ui_text_input",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "fa855387.0b739",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 990,
        "y": 1520,
        "wires": [
            [
                "de51b0a.135dd5"
            ]
        ]
    },
    {
        "id": "de51b0a.135dd5",
        "type": "change",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Hopper[4].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1520,
        "wires": [
            [
                "99388d84.1fc1f"
            ]
        ]
    },
    {
        "id": "cac48189c9f8cb2b",
        "type": "link out",
        "z": "60229619.6bc748",
        "g": "812721b0.1056f",
        "name": "",
        "mode": "link",
        "links": [
            "ec886afc880dcd7d",
            "bc2f78cc654dd257"
        ],
        "x": 645,
        "y": 400,
        "wires": []
    },
    {
        "id": "3fe25cd350043d94",
        "type": "link out",
        "z": "60229619.6bc748",
        "g": "bf168605.003008",
        "name": "",
        "mode": "link",
        "links": [
            "ec886afc880dcd7d",
            "bc2f78cc654dd257"
        ],
        "x": 665,
        "y": 100,
        "wires": []
    },
    {
        "id": "5c95b001da62f9ec",
        "type": "link out",
        "z": "60229619.6bc748",
        "g": "3b4f240b.c1ea0c",
        "name": "",
        "mode": "link",
        "links": [
            "ec886afc880dcd7d",
            "bc2f78cc654dd257"
        ],
        "x": 655,
        "y": 700,
        "wires": []
    },
    {
        "id": "3b97a8c8181c6e4b",
        "type": "link out",
        "z": "60229619.6bc748",
        "g": "8df4b86f.abcd28",
        "name": "",
        "mode": "link",
        "links": [
            "ec886afc880dcd7d",
            "bc2f78cc654dd257"
        ],
        "x": 685,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7b791e120ee7e63e",
        "type": "link out",
        "z": "60229619.6bc748",
        "g": "e2586aa9.e502f8",
        "name": "",
        "mode": "link",
        "links": [
            "ec886afc880dcd7d",
            "bc2f78cc654dd257"
        ],
        "x": 705,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8c2d49681740a0af",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 260,
        "wires": [
            [
                "c768cf680622534a"
            ]
        ]
    },
    {
        "id": "c768cf680622534a",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "d228108bb0c7e1df"
            ]
        ]
    },
    {
        "id": "d228108bb0c7e1df",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 260,
        "wires": [
            [
                "b8af89610f2708e4"
            ]
        ]
    },
    {
        "id": "0c2d6426d5f1303b",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 600,
        "wires": [
            [
                "b69bb34e1ab91519"
            ]
        ]
    },
    {
        "id": "66671d107a6e6367",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 600,
        "wires": [
            [
                "fb18bf9c07285aa3"
            ]
        ]
    },
    {
        "id": "cba10cfaca3c60bc",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 940,
        "wires": [
            [
                "811d92cf4949eaaa"
            ]
        ]
    },
    {
        "id": "65c0f69ea0bb460b",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 940,
        "wires": [
            [
                "14bdd9e8fa19e7c8"
            ]
        ]
    },
    {
        "id": "6970ec65b4d75dab",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1300,
        "wires": [
            [
                "acb4f28501147131"
            ]
        ]
    },
    {
        "id": "274c1220c53ebc43",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1300,
        "wires": [
            [
                "ebf326b5d359decf"
            ]
        ]
    },
    {
        "id": "cf46609ab152cc44",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].Name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1660,
        "wires": [
            [
                "b2db8a9e0bc40605"
            ]
        ]
    },
    {
        "id": "a8ce558ab17f8d78",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Name",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].Name",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1660,
        "wires": [
            [
                "4903ca206916fc0f"
            ]
        ]
    },
    {
        "id": "13f4461b2073737b",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 135,
        "y": 1120,
        "wires": [
            [
                "768fc2001f7f9ffd",
                "7cc3ec8c3ea13101",
                "eecea953ed0ff4a2",
                "6a2dfd95e0baa3fc",
                "5f4ece7dd261c917"
            ]
        ]
    },
    {
        "id": "768fc2001f7f9ffd",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "3f9898cbf31cbf0c"
            ]
        ]
    },
    {
        "id": "7cc3ec8c3ea13101",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1180,
        "wires": [
            [
                "394c75b81f9bb117"
            ]
        ]
    },
    {
        "id": "eecea953ed0ff4a2",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1240,
        "wires": [
            [
                "5003df1fa47c08ce"
            ]
        ]
    },
    {
        "id": "6a2dfd95e0baa3fc",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1300,
        "wires": [
            [
                "6e30d4c5e677cbca"
            ]
        ]
    },
    {
        "id": "ffe61b29f122089c",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "e3cef8ac6fa3b559",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "6e1483320562f5b2",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1180,
        "wires": [
            [
                "bc65445d988b2375"
            ]
        ]
    },
    {
        "id": "b431b2cccc81e59e",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1120,
        "wires": [
            [
                "bc65445d988b2375"
            ]
        ]
    },
    {
        "id": "287cd6f46889edac",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 705,
        "y": 1200,
        "wires": [
            [
                "a9bf2b0ea87e90a2",
                "a9e02e4da5624df0",
                "b0204b6212097f0d",
                "6970ec65b4d75dab"
            ]
        ]
    },
    {
        "id": "a9bf2b0ea87e90a2",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1120,
        "wires": [
            [
                "c408c3d9c618c13b"
            ]
        ]
    },
    {
        "id": "a9e02e4da5624df0",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1180,
        "wires": [
            [
                "92b51102e4810053"
            ]
        ]
    },
    {
        "id": "b0204b6212097f0d",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1240,
        "wires": [
            [
                "c88de8898c9e6f55"
            ]
        ]
    },
    {
        "id": "1bae3bf51995b0f4",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "8e5ca7898694f712",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "e9c83daf18449e7c",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "ebf326b5d359decf",
        "type": "ui_text",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "group": "dd4e0296.f45f7",
        "order": 9,
        "width": 3,
        "height": 1,
        "name": "Ch 4",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1290,
        "y": 1300,
        "wires": []
    },
    {
        "id": "8eef0f5c629d146f",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 80,
        "wires": [
            [
                "99b29fe266e28aec"
            ]
        ]
    },
    {
        "id": "4fdaadfab8872936",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "57d291d489c5faa0"
            ]
        ]
    },
    {
        "id": "da5d8c96d2468f9b",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 135,
        "y": 80,
        "wires": [
            [
                "19bc5ab82f83a5ba",
                "2ee31d6bfa2168ee",
                "39884fbc8594c1bf",
                "f388b74df3979968",
                "7195cf3a8313471f"
            ]
        ]
    },
    {
        "id": "19bc5ab82f83a5ba",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "8eef0f5c629d146f"
            ]
        ]
    },
    {
        "id": "2ee31d6bfa2168ee",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "489bfc79cff53430"
            ]
        ]
    },
    {
        "id": "39884fbc8594c1bf",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 200,
        "wires": [
            [
                "3d31526c3fa6c299"
            ]
        ]
    },
    {
        "id": "f388b74df3979968",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "9144e8ddeac69911"
            ]
        ]
    },
    {
        "id": "99b29fe266e28aec",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 80,
        "wires": [
            [
                "b5407181a3554174"
            ]
        ]
    },
    {
        "id": "9a8b268885479dad",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "b5407181a3554174"
            ]
        ]
    },
    {
        "id": "084ed886360077ba",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "75c9e6bb6b59a15d",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "70dd3af57966569c",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 735,
        "y": 160,
        "wires": [
            [
                "8f02f63a21a3e52d",
                "5a3d8152daec7922",
                "d0f1d34449ad21fb",
                "8c2d49681740a0af"
            ]
        ]
    },
    {
        "id": "8f02f63a21a3e52d",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "4fdaadfab8872936"
            ]
        ]
    },
    {
        "id": "5a3d8152daec7922",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 140,
        "wires": [
            [
                "f65810028e9ec21d"
            ]
        ]
    },
    {
        "id": "d0f1d34449ad21fb",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "b876a556b406f7f5"
            ]
        ]
    },
    {
        "id": "1bba7f803823dce0",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "00b784d0df9d8b45",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "57d291d489c5faa0",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b8af89610f2708e4",
        "type": "ui_text",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "group": "dd4e0296.f45f7",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "Ch 1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1290,
        "y": 260,
        "wires": []
    },
    {
        "id": "7f4aba0dd6d8ac0b",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 135,
        "y": 420,
        "wires": [
            [
                "93eb9b9e899eade9",
                "2dead90ef477b71a",
                "d0af2c5502e3427a",
                "37af381d5f6c7c9c",
                "34e992cfd731be9a"
            ]
        ]
    },
    {
        "id": "93eb9b9e899eade9",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 420,
        "wires": [
            [
                "c09af52345dbf362"
            ]
        ]
    },
    {
        "id": "2dead90ef477b71a",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 480,
        "wires": [
            [
                "9ef0bcf8b3a81477"
            ]
        ]
    },
    {
        "id": "d0af2c5502e3427a",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "88e898d3e7ba79fc"
            ]
        ]
    },
    {
        "id": "37af381d5f6c7c9c",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 600,
        "wires": [
            [
                "b6733442e7a72f3b"
            ]
        ]
    },
    {
        "id": "fba3d4d8dafe12ed",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "1abe440f0becb3fd",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "6c6222f1da20c92c",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "2f95881f867cc163"
            ]
        ]
    },
    {
        "id": "dd688ce60c27d09c",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 420,
        "wires": [
            [
                "2f95881f867cc163"
            ]
        ]
    },
    {
        "id": "d1fa2153ccf6a379",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 735,
        "y": 500,
        "wires": [
            [
                "65eebecb5256b248",
                "8b7c6455549624fe",
                "e3791699f374de33",
                "0c2d6426d5f1303b"
            ]
        ]
    },
    {
        "id": "65eebecb5256b248",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 420,
        "wires": [
            [
                "63718016af245c17"
            ]
        ]
    },
    {
        "id": "8b7c6455549624fe",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 480,
        "wires": [
            [
                "689ac633aad7fab6"
            ]
        ]
    },
    {
        "id": "e3791699f374de33",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 540,
        "wires": [
            [
                "a1d1f08c290913b0"
            ]
        ]
    },
    {
        "id": "2f814b75c007f129",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b0234a16d404558c",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f1ba6a57c00b2133",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "fb18bf9c07285aa3",
        "type": "ui_text",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "group": "dd4e0296.f45f7",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "Ch 2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1290,
        "y": 600,
        "wires": []
    },
    {
        "id": "06094b035d1f5fc8",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 135,
        "y": 1480,
        "wires": [
            [
                "4aecee364a04208b",
                "8631014f2c035bde",
                "b9801d57c7f1f066",
                "26023209d7878894"
            ]
        ]
    },
    {
        "id": "4aecee364a04208b",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1480,
        "wires": [
            [
                "e3cf9513ca3bf42c"
            ]
        ]
    },
    {
        "id": "8631014f2c035bde",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1540,
        "wires": [
            [
                "2609a73913bb53ba"
            ]
        ]
    },
    {
        "id": "b9801d57c7f1f066",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1600,
        "wires": [
            [
                "8366f83274c8f958"
            ]
        ]
    },
    {
        "id": "26023209d7878894",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1660,
        "wires": [
            [
                "4042b8d36ddd3e38"
            ]
        ]
    },
    {
        "id": "4f46b1e1a5fcdfd8",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1480,
        "wires": [
            [
                "9899383120754135"
            ]
        ]
    },
    {
        "id": "9453b7c9461407a2",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1540,
        "wires": [
            [
                "9899383120754135"
            ]
        ]
    },
    {
        "id": "4627344a99f1ec26",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "5b1c2a566cd556d9",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "9a3e0e4fc7a08478",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 695,
        "y": 1560,
        "wires": [
            [
                "5f8c74c0b1ef0d2a",
                "5eefab025d3f8f1e",
                "e9957651684daaaa",
                "cf46609ab152cc44"
            ]
        ]
    },
    {
        "id": "5f8c74c0b1ef0d2a",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1480,
        "wires": [
            [
                "9adfd8cabceace4e"
            ]
        ]
    },
    {
        "id": "5eefab025d3f8f1e",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1540,
        "wires": [
            [
                "adab2066882cfdec"
            ]
        ]
    },
    {
        "id": "e9957651684daaaa",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1600,
        "wires": [
            [
                "8db530aa9f507c51"
            ]
        ]
    },
    {
        "id": "8bc4949e250a3dea",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "e7dc416df773b287",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "70b7f94f1b394225",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "4903ca206916fc0f",
        "type": "ui_text",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "group": "dd4e0296.f45f7",
        "order": 10,
        "width": 3,
        "height": 1,
        "name": "Ch 5",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1250,
        "y": 1660,
        "wires": []
    },
    {
        "id": "f4d08523b57c888d",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 135,
        "y": 760,
        "wires": [
            [
                "e1bcf5cc2aa3f459",
                "754ee403306d5120",
                "69b159f2d9dadd78",
                "e4e62d120c808c4a",
                "a98c31a0c7ae75bc"
            ]
        ]
    },
    {
        "id": "e1bcf5cc2aa3f459",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 760,
        "wires": [
            [
                "427c493444b71ab8"
            ]
        ]
    },
    {
        "id": "754ee403306d5120",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].DriveID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 820,
        "wires": [
            [
                "a7f98a076077c17f"
            ]
        ]
    },
    {
        "id": "69b159f2d9dadd78",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].MaxSpeed",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 880,
        "wires": [
            [
                "f0e334fb7274603f"
            ]
        ]
    },
    {
        "id": "e4e62d120c808c4a",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].TTS",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 940,
        "wires": [
            [
                "a7b47f09e5c872bc"
            ]
        ]
    },
    {
        "id": "7b7fc53286a6687e",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Enabled",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 760,
        "wires": [
            [
                "509ad3b0dec90c34"
            ]
        ]
    },
    {
        "id": "23644a3b82ce825e",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Drive ID",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].DriveID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 820,
        "wires": [
            [
                "509ad3b0dec90c34"
            ]
        ]
    },
    {
        "id": "aa494b5fe22f2a5e",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Max Speed",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].MaxSpeed",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "ecc956d9b9eac330",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Time to Start",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].TTS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "61656781d05bb7d3",
        "type": "link in",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "links": [
            "8657b4aaa7670dce"
        ],
        "x": 745,
        "y": 860,
        "wires": [
            [
                "f7309850d80653f1",
                "9cd962b7c46df5a2",
                "f2821c41c2435aa7",
                "cba10cfaca3c60bc"
            ]
        ]
    },
    {
        "id": "f7309850d80653f1",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].Sensor.Enabled",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 760,
        "wires": [
            [
                "0f02bb76fd2143af"
            ]
        ]
    },
    {
        "id": "9cd962b7c46df5a2",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].FC",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 820,
        "wires": [
            [
                "a8e90d51a4cfbb7a"
            ]
        ]
    },
    {
        "id": "f2821c41c2435aa7",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].Sensor.Input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 880,
        "wires": [
            [
                "4f76a9eb67413d94"
            ]
        ]
    },
    {
        "id": "5fdbf66d59404582",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Sensor Input",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].Sensor.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "a8ebd824552fbbc7",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Max Capacity",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].FC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "8d9f113d8c76f042",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Sensor",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].Sensor.Enabled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "14bdd9e8fa19e7c8",
        "type": "ui_text",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "group": "dd4e0296.f45f7",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "Ch 3",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1290,
        "y": 940,
        "wires": []
    },
    {
        "id": "b5407181a3554174",
        "type": "link out",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "mode": "link",
        "links": [
            "3a1f41139af2e3a2"
        ],
        "x": 725,
        "y": 80,
        "wires": []
    },
    {
        "id": "2f95881f867cc163",
        "type": "link out",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "mode": "link",
        "links": [
            "3a1f41139af2e3a2"
        ],
        "x": 725,
        "y": 420,
        "wires": []
    },
    {
        "id": "509ad3b0dec90c34",
        "type": "link out",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "mode": "link",
        "links": [
            "3a1f41139af2e3a2"
        ],
        "x": 725,
        "y": 780,
        "wires": []
    },
    {
        "id": "bc65445d988b2375",
        "type": "link out",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "mode": "link",
        "links": [
            "3a1f41139af2e3a2"
        ],
        "x": 705,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9899383120754135",
        "type": "link out",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "mode": "link",
        "links": [
            "3a1f41139af2e3a2"
        ],
        "x": 675,
        "y": 1480,
        "wires": []
    },
    {
        "id": "bb3ae6a9cc29588a",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Manual Set Point (lbs)",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 480,
        "y": 320,
        "wires": [
            [
                "af2ae8d83f431ef9"
            ]
        ]
    },
    {
        "id": "7195cf3a8313471f",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[0].ManualSP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "bb3ae6a9cc29588a"
            ]
        ]
    },
    {
        "id": "af2ae8d83f431ef9",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[0].ManualSP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f65810028e9ec21d",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Max Cap (lbs)",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1060,
        "y": 140,
        "wires": [
            [
                "00b784d0df9d8b45"
            ]
        ]
    },
    {
        "id": "3d31526c3fa6c299",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Max Fre (Hz)",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "084ed886360077ba"
            ]
        ]
    },
    {
        "id": "9144e8ddeac69911",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "75c9e6bb6b59a15d"
            ]
        ]
    },
    {
        "id": "489bfc79cff53430",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "9a8b268885479dad"
            ]
        ]
    },
    {
        "id": "b876a556b406f7f5",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "70e8487e7c6323dc",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "3a93b998.6415d6",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "1bba7f803823dce0"
            ]
        ]
    },
    {
        "id": "c09af52345dbf362",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "dd688ce60c27d09c"
            ]
        ]
    },
    {
        "id": "9ef0bcf8b3a81477",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 480,
        "wires": [
            [
                "6c6222f1da20c92c"
            ]
        ]
    },
    {
        "id": "88e898d3e7ba79fc",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Max Fre (Hz)",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "1abe440f0becb3fd"
            ]
        ]
    },
    {
        "id": "b6733442e7a72f3b",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 16,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 600,
        "wires": [
            [
                "fba3d4d8dafe12ed"
            ]
        ]
    },
    {
        "id": "63718016af245c17",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "2f814b75c007f129"
            ]
        ]
    },
    {
        "id": "689ac633aad7fab6",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Max Cap (lbs)",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "b0234a16d404558c"
            ]
        ]
    },
    {
        "id": "a1d1f08c290913b0",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 540,
        "wires": [
            [
                "f1ba6a57c00b2133"
            ]
        ]
    },
    {
        "id": "b69bb34e1ab91519",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "66671d107a6e6367"
            ]
        ]
    },
    {
        "id": "34e992cfd731be9a",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[1].ManualSP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 660,
        "wires": [
            [
                "6d3c5e7237d89093"
            ]
        ]
    },
    {
        "id": "6d3c5e7237d89093",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "",
        "label": "Manual Set Point (lbs)",
        "tooltip": "",
        "group": "a01dd0c0.7697d",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 660,
        "wires": [
            [
                "aac83ee6ee7a23d4"
            ]
        ]
    },
    {
        "id": "aac83ee6ee7a23d4",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "04c01ffdfeba6735",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[1].ManualSP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "427c493444b71ab8",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 760,
        "wires": [
            [
                "7b7fc53286a6687e"
            ]
        ]
    },
    {
        "id": "a7f98a076077c17f",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 820,
        "wires": [
            [
                "23644a3b82ce825e"
            ]
        ]
    },
    {
        "id": "f0e334fb7274603f",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Max Fre (Hz)",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 880,
        "wires": [
            [
                "aa494b5fe22f2a5e"
            ]
        ]
    },
    {
        "id": "a7b47f09e5c872bc",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 16,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 940,
        "wires": [
            [
                "ecc956d9b9eac330"
            ]
        ]
    },
    {
        "id": "0f02bb76fd2143af",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "8d9f113d8c76f042"
            ]
        ]
    },
    {
        "id": "a8e90d51a4cfbb7a",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Max Cap (lbs)",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "a8ebd824552fbbc7"
            ]
        ]
    },
    {
        "id": "4f76a9eb67413d94",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1030,
        "y": 880,
        "wires": [
            [
                "5fdbf66d59404582"
            ]
        ]
    },
    {
        "id": "811d92cf4949eaaa",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 940,
        "wires": [
            [
                "65c0f69ea0bb460b"
            ]
        ]
    },
    {
        "id": "a98c31a0c7ae75bc",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[2].ManualSP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1000,
        "wires": [
            [
                "280b96de29fb6ad4"
            ]
        ]
    },
    {
        "id": "280b96de29fb6ad4",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "",
        "label": "Manual Set Point (lbs)",
        "tooltip": "",
        "group": "9405de1d.83ee6",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 1000,
        "wires": [
            [
                "d751d88ead449788"
            ]
        ]
    },
    {
        "id": "d751d88ead449788",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "ab861f9a30ba4872",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[2].ManualSP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "3f9898cbf31cbf0c",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "b431b2cccc81e59e"
            ]
        ]
    },
    {
        "id": "394c75b81f9bb117",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 1180,
        "wires": [
            [
                "6e1483320562f5b2"
            ]
        ]
    },
    {
        "id": "5003df1fa47c08ce",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Max Fre (Hz)",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 1240,
        "wires": [
            [
                "e3cef8ac6fa3b559"
            ]
        ]
    },
    {
        "id": "6e30d4c5e677cbca",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 1300,
        "wires": [
            [
                "ffe61b29f122089c"
            ]
        ]
    },
    {
        "id": "c408c3d9c618c13b",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "e9c83daf18449e7c"
            ]
        ]
    },
    {
        "id": "92b51102e4810053",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Max Cap (lbs)",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1040,
        "y": 1180,
        "wires": [
            [
                "8e5ca7898694f712"
            ]
        ]
    },
    {
        "id": "c88de8898c9e6f55",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 1240,
        "wires": [
            [
                "1bae3bf51995b0f4"
            ]
        ]
    },
    {
        "id": "acb4f28501147131",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 1300,
        "wires": [
            [
                "274c1220c53ebc43"
            ]
        ]
    },
    {
        "id": "5f4ece7dd261c917",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[3].ManualSP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1360,
        "wires": [
            [
                "428ee0f659dffceb"
            ]
        ]
    },
    {
        "id": "428ee0f659dffceb",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "",
        "label": "Manual Set Point (lbs)",
        "tooltip": "",
        "group": "56f6b2c6.8655ac",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "0dffdff64c0679c4"
            ]
        ]
    },
    {
        "id": "0dffdff64c0679c4",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "d087d05fc3028b04",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[3].ManualSP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "e3cf9513ca3bf42c",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Enabled",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 400,
        "y": 1480,
        "wires": [
            [
                "4f46b1e1a5fcdfd8"
            ]
        ]
    },
    {
        "id": "2609a73913bb53ba",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Drive ID",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 1540,
        "wires": [
            [
                "9453b7c9461407a2"
            ]
        ]
    },
    {
        "id": "8366f83274c8f958",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Max Fre (Hz)",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 1600,
        "wires": [
            [
                "4627344a99f1ec26"
            ]
        ]
    },
    {
        "id": "4042b8d36ddd3e38",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Time to Start (s)",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 1660,
        "wires": [
            [
                "5b1c2a566cd556d9"
            ]
        ]
    },
    {
        "id": "9adfd8cabceace4e",
        "type": "ui_switch",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Sensor",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1000,
        "y": 1480,
        "wires": [
            [
                "8bc4949e250a3dea"
            ]
        ]
    },
    {
        "id": "adab2066882cfdec",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Max Cap (lbs)",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1020,
        "y": 1540,
        "wires": [
            [
                "e7dc416df773b287"
            ]
        ]
    },
    {
        "id": "8db530aa9f507c51",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Sensor Input",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 1600,
        "wires": [
            [
                "70b7f94f1b394225"
            ]
        ]
    },
    {
        "id": "b2db8a9e0bc40605",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "Name",
        "label": "",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 1660,
        "wires": [
            [
                "a8ce558ab17f8d78"
            ]
        ]
    },
    {
        "id": "fa2fa8327bd2e0ba",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Chemical[4].ManualSP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1720,
        "wires": [
            [
                "bb080658bd79b104"
            ]
        ]
    },
    {
        "id": "bb080658bd79b104",
        "type": "ui_text_input",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "",
        "label": "Manual Set Point (lbs)",
        "tooltip": "",
        "group": "a0c12ac4.c38db8",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 1720,
        "wires": [
            [
                "df5e6adcd427d833"
            ]
        ]
    },
    {
        "id": "df5e6adcd427d833",
        "type": "change",
        "z": "aa8dab55544f6dda",
        "g": "e6f6f439ef6ccfe8",
        "name": "ManualSP",
        "rules": [
            {
                "t": "set",
                "p": "System.Chemical[4].ManualSP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "d60ba3df6c47502c",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "Auto Btn",
        "func": "\nlet pressed = 0;\nif( msg.payload){\n    msg.payload =  \"/uimedia/Buttons/green_down.png\"\n    pressed = 1;\n    \n}\nelse{\n    msg.payload =  \"/uimedia/Buttons/green_up.png\"\n}\nmsg.topic=`Auto,${pressed}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "146c57a7a0ae3533",
                "3fb74372a6aff61e"
            ]
        ]
    },
    {
        "id": "fedfaaad4ccb590f",
        "type": "inject",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "6e7852248aab1f77",
                "75049e0cce192c3c",
                "ab5133841ac04efa",
                "37756af76c266c3b",
                "c74edaa99033f504",
                "e48f13384b12c5cc",
                "8a17cadc3e356b4d",
                "c843a958665a36a5",
                "0c4bee24a92a2d7b",
                "22ee0b6ba108e8d0",
                "c3810eac5aa7a9ea",
                "38b753684bf84dda",
                "e0a3fe749d0b3388",
                "958cac64401ce289"
            ]
        ]
    },
    {
        "id": "146c57a7a0ae3533",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "name": "Auto",
        "order": 1,
        "width": 4,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'/uimedia/Buttons/green_down.png'})\">\n<img width=\"80\" height=\"80\" src=  {{msg.payload}}   />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 810,
        "y": 160,
        "wires": [
            [
                "2cb0e53f14fdcff3"
            ]
        ]
    },
    {
        "id": "6e7852248aab1f77",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "Auto",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Mode.Auto",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "d60ba3df6c47502c"
            ]
        ]
    },
    {
        "id": "fb53aa577b8b10bc",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "Status",
        "label": "<font size = 5>System: ",
        "format": "<font size = 5 color={{msg.color}}>{{msg.payload}}",
        "layout": "col-center",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "47ea64e5b3c6408a",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "Stop Btn",
        "func": "\n\nlet pressed = 0;\nif( msg.payload){\n    msg.payload =  \"/uimedia/Buttons/red_down.png\"\n    pressed = 1;\n    \n}\nelse{\n    msg.payload =  \"/uimedia/Buttons/red_up.png\"\n}\nmsg.topic=`Stop,${pressed}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 220,
        "wires": [
            [
                "64bbb0ca308cfeb6",
                "3fb74372a6aff61e"
            ]
        ]
    },
    {
        "id": "64bbb0ca308cfeb6",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "name": "Stop",
        "order": 5,
        "width": 4,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'/uimedia/Buttons/red_down.png'})\">\n<img width=\"80\" height=\"80\" src=  {{msg.payload}}  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 810,
        "y": 220,
        "wires": [
            [
                "2af86b9a62d8b645"
            ]
        ]
    },
    {
        "id": "75049e0cce192c3c",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "Stop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Mode.Stop",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "47ea64e5b3c6408a"
            ]
        ]
    },
    {
        "id": "c8a0903b5049e5c2",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "order": 4,
        "width": 2,
        "height": 2,
        "name": "Stop",
        "label": "<font size = 5>Stop",
        "format": "",
        "layout": "row-center",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "f23f90672a7f059c",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "Pause Btn",
        "func": "\n\nlet pressed = 0;\nif( msg.payload){\n    msg.payload =  \"/uimedia/Buttons/yellow_down.png\"\n    pressed = 1;\n    \n}\nelse{\n    msg.payload =  \"/uimedia/Buttons/yellow_up.png\"\n}\nmsg.topic=`Pause,${pressed}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 280,
        "wires": [
            [
                "4b5f4ae65902125e",
                "3fb74372a6aff61e"
            ]
        ]
    },
    {
        "id": "4b5f4ae65902125e",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "name": "Pause",
        "order": 7,
        "width": 4,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'/uimedia/Buttons/yellow_down.png'})\">\n<img width=\"80\" height=\"80\" src=  {{msg.payload}}  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 280,
        "wires": [
            [
                "a77d45a1724c7173"
            ]
        ]
    },
    {
        "id": "ab5133841ac04efa",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "Pause",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Mode.Pause",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 280,
        "wires": [
            [
                "f23f90672a7f059c"
            ]
        ]
    },
    {
        "id": "370656d092e85907",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "Pause",
        "label": "<font size = 5>Pause",
        "format": "",
        "layout": "row-right",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "7c55a2ced6fea4b1",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "Manual Btn",
        "func": "\n\n\nlet pressed = 0;\nif( msg.payload){\n    msg.payload =  \"/uimedia/Buttons/yellow_down.png\"\n    pressed = 1;\n    \n}\nelse{\n    msg.payload = \"/uimedia/Buttons/yellow_up.png\"\n}\nmsg.topic=`Manual,${pressed}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 340,
        "wires": [
            [
                "296acf1d1b3f2faa",
                "607e90ab42fd8886",
                "3fb74372a6aff61e"
            ]
        ]
    },
    {
        "id": "296acf1d1b3f2faa",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "name": "Manual",
        "order": 9,
        "width": 4,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'/uimedia/Buttons/yellow_down.png'})\">\n<img width=\"80\" height=\"80\" src=  {{msg.payload}}  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 820,
        "y": 340,
        "wires": [
            [
                "496e8e59540a72cb"
            ]
        ]
    },
    {
        "id": "37756af76c266c3b",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "Manual",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Mode.Manual",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 340,
        "wires": [
            [
                "7c55a2ced6fea4b1"
            ]
        ]
    },
    {
        "id": "a233406064f9ef36",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "bc6209d1.39d1b8",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "Manual",
        "label": "<font size = 5>Manual",
        "format": "",
        "layout": "row-center",
        "x": 380,
        "y": 40,
        "wires": []
    },
    {
        "id": "0dd26b83212bda40",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Hopper 1",
        "order": 11,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n  <button  ng-click=\"send({payload:'Hopper[0]'})\">    \n  <img width=\"68\" height=\"73\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}%</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n/* Container holding the image and the text */\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n   font-weight: bold;\n}\n\n/* Bottom left text */\n.bottom-left {\n  position: absolute;\n  top: 10px;\n  left: 25px;\n  color:red;\n  font-weight: bold;\n}\n\n/* Top left text */\n.top-left {\n  position: absolute;\n  top: 28px;\n  left: 25px;\n  color:blue;\n  font-weight: bold;\n}\n\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 500,
        "wires": [
            [
                "d3385e749064042b",
                "01283a52f501db99"
            ]
        ]
    },
    {
        "id": "8c5b98301b6caa12",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Hopper 2",
        "order": 12,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Hopper[1]'})\">\n  <img width=\"68\" height=\"73\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}%</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 540,
        "wires": [
            [
                "d3385e749064042b",
                "01283a52f501db99"
            ]
        ]
    },
    {
        "id": "cd2c79565cb18d14",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Hopper 3",
        "order": 13,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Hopper[2]'})\">\n  <img width=\"68\" height=\"73\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}%</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 580,
        "wires": [
            [
                "d3385e749064042b"
            ]
        ]
    },
    {
        "id": "5466a7da7aada837",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Hopper 4",
        "order": 14,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Hopper[3]'})\">\n  <img width=\"68\" height=\"73\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}%</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 620,
        "wires": [
            [
                "d3385e749064042b"
            ]
        ]
    },
    {
        "id": "334d8dd52df7a6a8",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Hopper 5",
        "order": 15,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Hopper[4]'})\">\n  <img width=\"68\" height=\"73\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}%</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 660,
        "wires": [
            [
                "d3385e749064042b"
            ]
        ]
    },
    {
        "id": "ff9f31a46c17b030",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "CH1",
        "order": 16,
        "width": 3,
        "height": 2,
        "format": "\n<div class=\"container\">\n  <button  ng-click=\"send({payload:'Chemical[0]'})\">\n  <img width=\"50\" height=\"75\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}lb</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 720,
        "wires": [
            [
                "b84de453d5c0e994"
            ]
        ]
    },
    {
        "id": "0a9e3c54676bfe9e",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "CH2",
        "order": 17,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Chemical[1]'})\">\n  <img width=\"50\" height=\"75\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}lb</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "b84de453d5c0e994"
            ]
        ]
    },
    {
        "id": "66a68db8fe31c2d3",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "CH3",
        "order": 18,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Chemical[2]'})\">\n  <img width=\"50\" height=\"75\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}lb</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 800,
        "wires": [
            [
                "b84de453d5c0e994"
            ]
        ]
    },
    {
        "id": "44d4d89d4a92aadd",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "CH4",
        "order": 19,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Chemical[3]'})\">\n  <img width=\"50\" height=\"75\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}lb</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 840,
        "wires": [
            [
                "b84de453d5c0e994"
            ]
        ]
    },
    {
        "id": "bdc92bdda471784f",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "CH5",
        "order": 20,
        "width": 3,
        "height": 2,
        "format": "<div class=\"container\">\n    <button  ng-click=\"send({payload:'Chemical[4]'})\">\n  <img width=\"50\" height=\"75\" src=  {{msg.payload}} object-fit= \"fill\"  />\n  <div class=\"bottom-left\">{{msg.qty}}lb</div>\n  <div class=\"top-left\">{{msg.fre}}Hz</div>\n  </button>\n</div>\n\n<style>\n    /* Container holding the image and the text */\n    .container {\n        position: relative;\n        text-align: center;\n        color: white;\n        font-weight: bold;\n    }\n\n    /* Bottom left text */\n    .bottom-left {\n        position: absolute;\n        top: 10px;\n        left: 25px;\n        color: red;\n        font-weight: bold;\n    }\n\n    /* Top left text */\n    .top-left {\n        position: absolute;\n        top: 28px;\n        left: 25px;\n        color: blue;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 880,
        "wires": [
            [
                "b84de453d5c0e994"
            ]
        ]
    },
    {
        "id": "dbc0e24092a4a211",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Mix Conveyor",
        "order": 21,
        "width": 30,
        "height": 1,
        "format": "<div class=\"container\">\n<button  ng-click=\"send({payload:'Conveyor[0]' , src:'/uimedia/Conveyors/belt_large_white.png'})\">\n<img width=\"950\" height=\"35\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"center\">Mix Conveyor</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 680,
        "y": 940,
        "wires": [
            [
                "1ba8d391b1eabe6b",
                "4c4af5b25a045c1b"
            ]
        ]
    },
    {
        "id": "48497bf87e892d97",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Incline Conveyor",
        "order": 22,
        "width": 4,
        "height": 5,
        "format": "\n<div class=\"container\">\n<button  ng-click=\"send({payload:'Conveyor[1]',src:'/uimedia/Conveyors/conveyor_incline_white.png'})\">\n<img width=\"100\" height=\"180\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"top\">Incline Conveyor</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.top {\n  position: absolute;\n  bottom: 8px;\n  right: 6px;\n   color: white;\n   }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 690,
        "y": 980,
        "wires": [
            [
                "1ba8d391b1eabe6b",
                "21a0e4ed8231bb10"
            ]
        ]
    },
    {
        "id": "0249cace9bf164ea",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Out Conveyor",
        "order": 32,
        "width": 25,
        "height": 1,
        "format": "\n<div class=\"container\">\n<button  ng-click=\"send({payload:'Conveyor[2]', src:'/uimedia/Conveyors/belt_large_white.png'})\">\n<img width=\"700\" height=\"35\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"center\">Out Conveyor</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "1ba8d391b1eabe6b",
                "0e6809d512f38b2c"
            ]
        ]
    },
    {
        "id": "91f83dd2ede1f4f3",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Gate1",
        "order": 24,
        "width": 3,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"75\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "9738f581a39d0b20",
                "5d823451a04e8408"
            ]
        ]
    },
    {
        "id": "c9377a577361eb04",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Gate2",
        "order": 26,
        "width": 3,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[1]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"75\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 650,
        "y": 1100,
        "wires": [
            [
                "9738f581a39d0b20",
                "86017bbd146d2ece"
            ]
        ]
    },
    {
        "id": "e45a8d67a80d657f",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Target1",
        "order": 35,
        "width": 3,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'Target[0]', src:'/uimedia/Gates/arrow_green.png'})\">\n<img width=\"75\" height=\"75\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1240,
        "wires": [
            [
                "89e50187d83a1103",
                "4648f1c6e4546805"
            ]
        ]
    },
    {
        "id": "e9fa4b17667943c1",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Target2",
        "order": 37,
        "width": 3,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'Target[1]', src:'/uimedia/Gates/arrow_green.png'})\">\n<img width=\"75\" height=\"75\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1280,
        "wires": [
            [
                "89e50187d83a1103",
                "41a9a9eea9b0025f"
            ]
        ]
    },
    {
        "id": "64d61bda57abf1f0",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Target3",
        "order": 39,
        "width": 3,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'Target[2]', src:'/uimedia/Gates/arrow_green.png'})\">\n<img width=\"75\" height=\"75\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1320,
        "wires": [
            [
                "89e50187d83a1103",
                "d9ba306bbf7c35b6"
            ]
        ]
    },
    {
        "id": "90c1d3eed86ca8fe",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "FlatFiller1",
        "order": 49,
        "width": 5,
        "height": 3,
        "format": "<div class=\"container\">\n<button  ng-click=\"send({payload:0, src:'/uimedia/FlatFillers/hopper_red.png'})\">\n<img width=\"130\" height=\"120\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"ff_name\">Line 1</div>\n<div class=\"ff_mix\">{{msg.mix}}</div>\n<div class=\"ff_yd\">{{msg.yd}} yd3</div>\n<div class=\"ff_value\">{{msg.value}}</div>\n<div class=\"ff_press\">Press to call</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  overflow: hidden;\n}\n.ff_name {\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_mix {\n  position: absolute;\n  color:blue;\n  top: 28%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_yd {\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_value {\n  position: absolute;\n  top: 70%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_press {\n  position: relative;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color:white;\n  font-weight: bold;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1420,
        "wires": [
            [
                "f1df5cc6fd521a58",
                "458b4c980bd23434"
            ]
        ]
    },
    {
        "id": "b20324c6bb932be6",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Gate3",
        "order": 28,
        "width": 3,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[2]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"75\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 650,
        "y": 1140,
        "wires": [
            [
                "9738f581a39d0b20",
                "5214a608abf31703"
            ]
        ]
    },
    {
        "id": "940401155d037737",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Target4",
        "order": 41,
        "width": 3,
        "height": 2,
        "format": "<button  ng-click=\"send({payload:'Target[3]', src:'/uimedia/Gates/arrow_green.png'})\">\n<img width=\"75\" height=\"75\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1360,
        "wires": [
            [
                "89e50187d83a1103",
                "23053be8176b2f73"
            ]
        ]
    },
    {
        "id": "e2c82b8401d4fdbf",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "9ae2ed33.959bb",
        "order": 1,
        "width": 13,
        "height": 1,
        "name": "Failure",
        "label": "Fault:",
        "format": "<font  color={{msg.color}}>{{msg.payload}}",
        "layout": "row-left",
        "x": 490,
        "y": 1580,
        "wires": []
    },
    {
        "id": "58a3330d12e3198d",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "9ae2ed33.959bb",
        "order": 2,
        "width": 9,
        "height": 1,
        "name": "Prod",
        "label": "Prod Capacity",
        "format": "2 yd3/min",
        "layout": "row-center",
        "x": 710,
        "y": 2260,
        "wires": []
    },
    {
        "id": "1f2f1451149f4923",
        "type": "ui_text",
        "z": "8696637e2f6b1b8d",
        "group": "9ae2ed33.959bb",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "Time",
        "label": "",
        "format": "{{msg.payload}} ",
        "layout": "row-center",
        "x": 550,
        "y": 2260,
        "wires": []
    },
    {
        "id": "d6dff2cdb01fb8d0",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "FlatFiller2",
        "order": 50,
        "width": 5,
        "height": 3,
        "format": "<div class=\"container\">\n<button  ng-click=\"send({payload:1, src:'/uimedia/FlatFillers/hopper_red.png'})\">\n<img width=\"130\" height=\"120\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"ff_name\">Line 2</div>\n<div class=\"ff_mix\">{{msg.mix}}</div>\n<div class=\"ff_yd\">{{msg.yd}} yd3</div>\n<div class=\"ff_value\">{{msg.value}}</div>\n<div class=\"ff_press\">Press to call</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  overflow: hidden;\n}\n.ff_name {\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_mix {\n  position: absolute;\n  top: 28%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_yd {\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_value {\n  position: absolute;\n  top: 70%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_press {\n  position: relative;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color:white;\n  font-weight: bold;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1460,
        "wires": [
            [
                "f1df5cc6fd521a58",
                "3db2b80cb2b69430"
            ]
        ]
    },
    {
        "id": "d55874e87e871bfc",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "FlatFiller3",
        "order": 51,
        "width": 5,
        "height": 3,
        "format": "<div class=\"container\">\n<button  ng-click=\"send({payload:2, src:'/uimedia/FlatFillers/hopper_red.png'})\">\n<img width=\"130\" height=\"120\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"ff_name\">Out Line</div>\n<div class=\"ff_mix\">{{msg.mix}}</div>\n<div class=\"ff_yd\">{{msg.yd}} yd3</div>\n<div class=\"ff_value\">{{msg.value}}</div>\n<div class=\"ff_press\">Press to call</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  overflow: hidden;\n}\n.ff_name {\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_mix {\n  position: absolute;\n  top: 28%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_yd {\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_value {\n  position: absolute;\n  top: 70%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_press {\n  position: relative;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color:white;\n  font-weight: bold;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1500,
        "wires": [
            [
                "f1df5cc6fd521a58",
                "1dad39a7522cdc11"
            ]
        ]
    },
    {
        "id": "8a17cadc3e356b4d",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "HopperStatus",
        "func": "/*\nstatus\n0 -  Disabled\n1 -  On\n2 -  OFF\n3 -  Error\n*/\nlet status;\n\n///////////////////////////////////////////////////\nlet speed = global.get(\"System.Drive\").map(function (el) { return el.Speed; });\nlet sp = global.get(\"System.Drive\").map(function (el) { return el.SP; });\n////////////////////////////////////////////\n\ntry{\n  status = global.get(\"System.Hopper\").map(function (el) { return el.Status; });\n \n}\ncatch(error){\n    return;\n}\n\nconst hopperImg =[\n    \"/uimedia/Bins/bin_gray.png\",\n    \"/uimedia/Bins/bin_green.png\",\n    \"/uimedia/Bins/bin_blue.png\",\n    \"/uimedia/Bins/bin_red.png\"\n    ];\n\nvar output = [];\n\n////////////////////////////////////\nstatus.forEach((el,index) => output[index]=\n    {\n        payload:hopperImg[el],\n        topic:`Hopper[${index}],\n        ${el}`,\n        qty: Math.round(sp[index]),\n        fre: Math.round(speed[index])\n    });\n///////////////////////////////////////////\n\n\nreturn [\n    output[0],output[1],output[2],output[3],output[4]\n];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 580,
        "wires": [
            [
                "0dd26b83212bda40",
                "ef2cde947508c05c"
            ],
            [
                "8c5b98301b6caa12",
                "ef2cde947508c05c"
            ],
            [
                "cd2c79565cb18d14",
                "ef2cde947508c05c"
            ],
            [
                "5466a7da7aada837",
                "ef2cde947508c05c"
            ],
            [
                "334d8dd52df7a6a8",
                "ef2cde947508c05c"
            ]
        ]
    },
    {
        "id": "0c4bee24a92a2d7b",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "ConveyorStatus",
        "func": "/*\nstatus\n0 - Disabled\n1 - On\n2 - OFF\n\n*/\nlet status;\n\ntry{\nstatus = global.get(\"System.Conveyor\").map(function (el) { return el.Status; });\n}\ncatch(error){\n    return;\n}\n\n\nconst conveyorImg =[\n    \"/uimedia/Conveyors/belt_large_red.png\",\n    \"/uimedia/Conveyors/belt_large_green.png\",\n    \"/uimedia/Conveyors/belt_large_white.png\"\n    ];\nconst conveyorInclineImg =[\n    \"/uimedia/Conveyors/belt_incline_red1.png\",\n    \"/uimedia/Conveyors/belt_incline_green1.png\",\n    \"/uimedia/Conveyors/conveyor_incline_white.png\"\n    ];\n\nvar output = [];\n//status.forEach((el,index) => output[index]={payload:conveyorImg[el]});\n\n//status.forEach((el,index) => output[index]={payload:hopperImg[el],topic:`Hopper[${index}],${el}`});\n\noutput[0]={src:conveyorImg[status[0]],topic:`Conveyor[0],${status[0]}`};\noutput[1]={src:conveyorInclineImg[status[1]],topic:`Conveyor[1],${status[1]}`};\noutput[2]={src:conveyorImg[status[2]],topic:`Conveyor[2],${status[2]}`};\n\nreturn [\n    output[0],output[1],output[2]\n];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 980,
        "wires": [
            [
                "dbc0e24092a4a211",
                "f37f20a339bdd361"
            ],
            [
                "48497bf87e892d97",
                "f37f20a339bdd361"
            ],
            [
                "0249cace9bf164ea",
                "f37f20a339bdd361"
            ]
        ]
    },
    {
        "id": "22ee0b6ba108e8d0",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "GateStatus",
        "func": "/*\nstatus\n0 - Disabled\n1 - Closed\n2 - Open\n*/\nlet status;\n\ntry{\n  status = global.get(\"System.Gate\").map(function (el) { return el.Status; });\n}\ncatch(error){\n    return;\n}\n\nconst gateImg =[\n    \"/uimedia/Gates/gate_disabled.png\",\n    \"/uimedia/Gates/gate_off.png\",\n    \"/uimedia/Gates/gate_on.png\"\n    ];\n\n\nvar output = [];\nstatus.forEach((el,index) => output[index]={src:gateImg[el],topic:`Gate[${index}],${el}`});\n\n\n\nreturn [\n    output[0],output[1],output[2],output[3]\n];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "91f83dd2ede1f4f3",
                "e507726b0621c74c"
            ],
            [
                "c9377a577361eb04",
                "e507726b0621c74c"
            ],
            [
                "b20324c6bb932be6",
                "e507726b0621c74c"
            ],
            [
                "5f6006aa5043b5cc",
                "e507726b0621c74c"
            ]
        ]
    },
    {
        "id": "c3810eac5aa7a9ea",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "TargetStatus",
        "func": "/*\nstatus\n0 - Not selected\n1 - Selected\n\n*/\nlet status;\n\ntry{\nstatus = global.get(\"System.Target\").map(function (el) { return el.Status; });\n}\ncatch(error){\n    return;\n}\n\n\nconst targetImg =[\n    \"/uimedia/Gates/arrow_red.png\",\n    \"/uimedia/Gates/arrow_green.png\",\n    ];\n\n\nvar output = [];\nstatus.forEach((el,index) => output[index]={src:targetImg[el],topic:`Target[${index}],${el}`});\n\n\n\nreturn [\n    output[0],output[1],output[2],output[3]\n];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1300,
        "wires": [
            [
                "e45a8d67a80d657f",
                "88b2664072dfbf85"
            ],
            [
                "e9fa4b17667943c1",
                "88b2664072dfbf85"
            ],
            [
                "64d61bda57abf1f0",
                "88b2664072dfbf85"
            ],
            [
                "940401155d037737",
                "88b2664072dfbf85"
            ]
        ]
    },
    {
        "id": "38b753684bf84dda",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "FlatFillerStatus",
        "func": "/*\nstatus\n0 - Not requesting\n1 - Batch on the way\n2 - Requesting no batch\n3 - Disabled\n*/\nlet status =[] ;\nlet mix;\nlet yd;\nlet flatFillers = global.get(\"System.Elements.FlatFillers\");\nlet active;\nlet sensor;\nlet enabled;\nlet value;\nlet load;\n\ntry{\n\nactive = global.get(\"System.FlatFiller\").map(function (el) { return el.Active; });\nsensor = global.get(\"System.FlatFiller\").map(function (el) { return el.Sensor.Active; });\nenabled = global.get(\"System.FlatFiller\").map(function (el) { return el.Enabled; });\nmix = global.get(\"System.FlatFiller\").map(function (el) { return el.Recipe.Name; });\nyd = global.get(\"System.FlatFiller\").map(function (el) { return el.Batch.Size; });\nvalue = global.get(\"System.FlatFiller\").map(function (el) { return el.Batch.Encoder.Value; });\nload = global.get(\"System.FlatFiller\").map(function (el) { return el.Recipe.Load; });\n\nfor (let i=0; i< flatFillers; i++){\n    \n    if(!enabled[i] || !load[i]){\n        status[i] = 3;\n        \n    }\n    else{\n        if(active[i]){\n            status[i] = 1;\n        \n        }  \n        else{\n            if(sensor[i]){\n                status[i] = 2;\n            }\n            else{\n                status[i] = 0;\n            }\n            \n        }         \n    }\n}\n\n\n\n}\ncatch(error ){\n    msg.payload = error.message;\n    return msg;\n}\n\nconst flatfillerImg =[\n    \"/uimedia/FlatFillers/hopper_blue.png\",\n    \"/uimedia/FlatFillers/hopper_green.png\",\n    \"/uimedia/FlatFillers/hopper_red.png\",\n    \"/uimedia/FlatFillers/hopper_grey.png\"\n    ];\n\n\nvar output = [];\nstatus.forEach((el,index) => output[index]={src:flatfillerImg[el], mix:mix[index], yd:yd[index],enabled:enabled[index] ,value:value[index],topic:`FlatFiller[${index}],${el}`});\n\n//status.forEach((el,index) => output[index]={payload:hopperImg[el],topic:`Hopper[${index}],${el}`});\n\nreturn [\n    output[0],output[1],output[2],output[3]\n];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1460,
        "wires": [
            [
                "90c1d3eed86ca8fe",
                "92c228ef5be8f185"
            ],
            [
                "d6dff2cdb01fb8d0",
                "92c228ef5be8f185"
            ],
            [
                "d55874e87e871bfc",
                "92c228ef5be8f185"
            ],
            [
                "1766adc341a7c932",
                "92c228ef5be8f185"
            ]
        ]
    },
    {
        "id": "1766adc341a7c932",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "FlatFiller4",
        "order": 52,
        "width": 5,
        "height": 3,
        "format": "<div class=\"container\">\n<button  ng-click=\"send({payload:3, src:'/uimedia/FlatFillers/hopper_red.png'})\">\n<img width=\"130\" height=\"120\" src=  {{msg.src}} object-fit= \"fill\"  />\n<div class=\"ff_name\">Line 3</div>\n<div class=\"ff_mix\">{{msg.mix}}</div>\n<div class=\"ff_yd\">{{msg.yd}} yd3</div>\n<div class=\"ff_value\">{{msg.value}}</div>\n<div class=\"ff_press\">Press to call</div>\n</button>\n</div>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n.container {\n  position: relative;\n  text-align: center;\n  color: white;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  overflow: hidden;\n}\n.ff_name {\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_mix {\n  position: absolute;\n  top: 28%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_yd {\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_value {\n  position: absolute;\n  top: 70%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: bold;\n}\n.ff_press {\n  position: relative;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color:white;\n  font-weight: bold;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 660,
        "y": 1540,
        "wires": [
            [
                "f1df5cc6fd521a58",
                "93483f769043d2d5"
            ]
        ]
    },
    {
        "id": "5f6006aa5043b5cc",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "dd4e0296.f45f7",
        "name": "Gate4",
        "order": 30,
        "width": 3,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[3]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"75\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 650,
        "y": 1180,
        "wires": [
            [
                "9738f581a39d0b20",
                "01cbfda4e7533314"
            ]
        ]
    },
    {
        "id": "fe4eeb14994aa952",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Btn Auto Out",
        "links": [
            "372e4513.0cabaa"
        ],
        "x": 1185,
        "y": 160,
        "wires": []
    },
    {
        "id": "a5b8e5d2375b206c",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Btn Pause Out",
        "links": [
            "89547142.02ff1"
        ],
        "x": 1175,
        "y": 280,
        "wires": []
    },
    {
        "id": "77a9b16561bedc12",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Btn Stop Out",
        "links": [
            "bcead1dd.d7314"
        ],
        "x": 1175,
        "y": 220,
        "wires": []
    },
    {
        "id": "f3dbd2f155badaf2",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Btn Manual Out",
        "links": [
            "4b56d888.611a48"
        ],
        "x": 1175,
        "y": 340,
        "wires": []
    },
    {
        "id": "5151e48c2fc1b4b1",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "System Status",
        "func": "let status = msg.payload;\n\nswitch(status){\n    case 0:\n        msg.payload = \"in Fault\";\n        msg.color = \"red\";\n        break;\n    case 1:\n        msg.payload = \"Ready\";\n        msg.color = \"white\";\n        break;\n    case 2:\n        msg.payload = \"Auto\";\n        msg.color = \"lime\";\n        break;\n    case 3:\n        msg.payload = \"Active\";\n        msg.color = \"lime\";\n        break;\n    case 4:\n        msg.payload = \"Pause\";\n        msg.color = \"yellow\";\n        break;\n    case 5:\n        msg.payload = \"Stopped\";\n        msg.color = \"red\";\n        break;\n    case 6:\n        msg.payload = \"Starting\";\n        msg.color = \"red\";\n        break;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "fb53aa577b8b10bc"
            ]
        ]
    },
    {
        "id": "2cb0e53f14fdcff3",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 160,
        "wires": [
            [
                "146c57a7a0ae3533",
                "fe4eeb14994aa952"
            ]
        ]
    },
    {
        "id": "c74edaa99033f504",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "Check Status",
        "func": "let auto = global.get(\"System.Mode.Auto\");\nlet pause = global.get(\"System.Mode.Pause\");\nlet stop = global.get(\"System.Mode.Stop\");\nlet fault = global.get(\"System.Mode.Fault\");\nlet active = global.get(\"System.Mode.Active\");\nlet starting = global.get(\"System.Mode.Starting\");\nlet status;\n\nif (fault){\n    status =0;\n    msg.payload = status;\nreturn msg;\n}\nif (auto){\n    status =2;\n    msg.payload = status;\nreturn msg;\n}\nif (active){\n    status =3;\n    msg.payload = status;\nreturn msg;\n}\nif (pause){\n    status =4;\n    msg.payload = status;\nreturn msg;\n}\nif (stop){\n    status =5;\n    msg.payload = status;\nreturn msg;\n}\nif (starting){\n    status =6;\n    msg.payload = status;\nreturn msg;\n}\nstatus = 1;\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 420,
        "wires": [
            [
                "5151e48c2fc1b4b1"
            ]
        ]
    },
    {
        "id": "9449cb925d2beb3b",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Fault.Faults[0].Message",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "208961ec3a75b89b",
        "type": "switch",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "property": "System.Fault.Faults[0].Message",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 2280,
        "wires": [
            [
                "9449cb925d2beb3b"
            ],
            [
                "fc5c8f6f3abd2f77"
            ]
        ]
    },
    {
        "id": "fc5c8f6f3abd2f77",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "None",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "white",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "2af86b9a62d8b645",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 220,
        "wires": [
            [
                "77a9b16561bedc12",
                "64bbb0ca308cfeb6"
            ]
        ]
    },
    {
        "id": "a77d45a1724c7173",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 280,
        "wires": [
            [
                "4b5f4ae65902125e",
                "a5b8e5d2375b206c"
            ]
        ]
    },
    {
        "id": "496e8e59540a72cb",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 340,
        "wires": [
            [
                "296acf1d1b3f2faa",
                "f3dbd2f155badaf2"
            ]
        ]
    },
    {
        "id": "e48f13384b12c5cc",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "Fault Status",
        "func": "let fault = global.get(\"System.Mode.Fault\");\nlet desc =\"None\";\nmsg.color = \"white\";\nif (fault){\n    msg.color = \"red\";\n    let code = global.get(\"System.Fault.Code\");\n    let stop = global.get(\"System.Fault.Stop\");\n    \n    if(stop){\n        desc = \"Stop: \";\n    }\n    else{\n        desc = \"Pause: \";\n    }\n    switch (code){\n        case 1: \n            desc +=\"Configuration error\";\n        break;\n        case 2:\n            desc +=\"E-Stop pressed\";\n        break;\n        case 3:\n            desc +=\"Chemical hopper low level\";\n        break;\n        case 4:\n            desc +=\"Recipe error\";\n        break;\n    }\n}\nmsg.payload = desc;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1580,
        "wires": [
            [
                "e2c82b8401d4fdbf"
            ]
        ]
    },
    {
        "id": "d3385e749064042b",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Hopper[0] Click Out",
        "links": [
            "cee4ac80.86c26"
        ],
        "x": 815,
        "y": 520,
        "wires": []
    },
    {
        "id": "f1df5cc6fd521a58",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "FlatFiller[0] Click Out",
        "links": [
            "9c4d691e.546538",
            "14b87a5a.cc8106"
        ],
        "x": 1035,
        "y": 1440,
        "wires": []
    },
    {
        "id": "c843a958665a36a5",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "ChemicalStatus",
        "func": "/*\nstatus\n0 -  Disabled\n1 -  On\n2 -  OFF\n3 -  Error\n*/\n let status;\n\n///////////////////////////////////////////////////\nlet speed = global.get(\"System.Drive\").map(function (el) { return el.Speed; });\nlet sp = global.get(\"System.Drive\").map(function (el) { return el.SP; });\nlet hoppers = global.get(\"System.Elements.Hoppers\");\n////////////////////////////////////////////\n\ntry{\n  status = global.get(\"System.Chemical\").map(function (el) { return el.Status; });\n}\ncatch(error){\n    return;\n}\n\nconst hopperImg =[\n    \"/uimedia/Bins/bin_gray.png\",\n    \"/uimedia/Bins/bin_green.png\",\n    \"/uimedia/Bins/bin_blue.png\",\n    \"/uimedia/Bins/bin_red.png\"\n    ];\n\nvar output = [];\nstatus.forEach((el,index) => output[index]=\n{\n    payload:hopperImg[el],\n    topic:`Chemical[${index}],\n    ${el}`,\n    qty: Math.round(sp[index + hoppers]),\n    fre: Math.round(speed[index + hoppers])\n    \n});\n\n\nreturn [\n    output[0],output[1],output[2],output[3],output[4]\n];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 760,
        "wires": [
            [
                "07528964687e75c3",
                "ff9f31a46c17b030"
            ],
            [
                "0a9e3c54676bfe9e",
                "07528964687e75c3"
            ],
            [
                "66a68db8fe31c2d3",
                "07528964687e75c3"
            ],
            [
                "44d4d89d4a92aadd",
                "07528964687e75c3"
            ],
            [
                "bdc92bdda471784f",
                "07528964687e75c3"
            ]
        ]
    },
    {
        "id": "9738f581a39d0b20",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Gate[0] Click Out",
        "links": [
            "5d1af776.723ea8"
        ],
        "x": 1035,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b84de453d5c0e994",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Hopper[0] Click Out",
        "links": [
            "cee4ac80.86c26"
        ],
        "x": 815,
        "y": 720,
        "wires": []
    },
    {
        "id": "1ba8d391b1eabe6b",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Hopper[0] Click Out",
        "links": [
            "cee4ac80.86c26"
        ],
        "x": 1035,
        "y": 940,
        "wires": []
    },
    {
        "id": "86017bbd146d2ece",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1100,
        "wires": [
            [
                "c9377a577361eb04"
            ]
        ]
    },
    {
        "id": "5214a608abf31703",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1140,
        "wires": [
            [
                "b20324c6bb932be6"
            ]
        ]
    },
    {
        "id": "5d823451a04e8408",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1060,
        "wires": [
            [
                "91f83dd2ede1f4f3"
            ]
        ]
    },
    {
        "id": "01cbfda4e7533314",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1180,
        "wires": [
            [
                "5f6006aa5043b5cc"
            ]
        ]
    },
    {
        "id": "4c4af5b25a045c1b",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 940,
        "wires": [
            [
                "dbc0e24092a4a211"
            ]
        ]
    },
    {
        "id": "21a0e4ed8231bb10",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 980,
        "wires": [
            [
                "48497bf87e892d97"
            ]
        ]
    },
    {
        "id": "0e6809d512f38b2c",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1020,
        "wires": [
            [
                "0249cace9bf164ea"
            ]
        ]
    },
    {
        "id": "89e50187d83a1103",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "Target Out",
        "links": [
            "e1b5a89a.add378"
        ],
        "x": 1035,
        "y": 1260,
        "wires": []
    },
    {
        "id": "4648f1c6e4546805",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1240,
        "wires": [
            [
                "e45a8d67a80d657f"
            ]
        ]
    },
    {
        "id": "41a9a9eea9b0025f",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "d9ba306bbf7c35b6",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1320,
        "wires": [
            [
                "64d61bda57abf1f0"
            ]
        ]
    },
    {
        "id": "23053be8176b2f73",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1360,
        "wires": [
            [
                "940401155d037737"
            ]
        ]
    },
    {
        "id": "458b4c980bd23434",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1420,
        "wires": [
            [
                "90c1d3eed86ca8fe"
            ]
        ]
    },
    {
        "id": "3db2b80cb2b69430",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1460,
        "wires": [
            [
                "d6dff2cdb01fb8d0"
            ]
        ]
    },
    {
        "id": "1dad39a7522cdc11",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1500,
        "wires": [
            [
                "d55874e87e871bfc"
            ]
        ]
    },
    {
        "id": "93483f769043d2d5",
        "type": "change",
        "z": "8696637e2f6b1b8d",
        "name": "loop",
        "rules": [
            {
                "t": "set",
                "p": "src",
                "pt": "msg",
                "to": "src",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1540,
        "wires": [
            [
                "1766adc341a7c932"
            ]
        ]
    },
    {
        "id": "607e90ab42fd8886",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "19445b67.4ce0f5"
        ],
        "x": 675,
        "y": 380,
        "wires": []
    },
    {
        "id": "07528964687e75c3",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 850,
        "y": 780,
        "wires": [
            [
                "1de6248825319174"
            ]
        ]
    },
    {
        "id": "ef2cde947508c05c",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 850,
        "y": 640,
        "wires": [
            [
                "d8938ad13d48e3c5"
            ]
        ]
    },
    {
        "id": "d8938ad13d48e3c5",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 955,
        "y": 640,
        "wires": []
    },
    {
        "id": "3fb74372a6aff61e",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 790,
        "y": 80,
        "wires": [
            [
                "6b93fedb0464ba3c"
            ]
        ]
    },
    {
        "id": "6b93fedb0464ba3c",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 955,
        "y": 80,
        "wires": []
    },
    {
        "id": "f37f20a339bdd361",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "topic",
        "x": 1050,
        "y": 1000,
        "wires": [
            [
                "826b05bd6bb97d0f"
            ]
        ]
    },
    {
        "id": "826b05bd6bb97d0f",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 1175,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e507726b0621c74c",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "topic",
        "x": 1050,
        "y": 1140,
        "wires": [
            [
                "449f1cd9f495a5bb"
            ]
        ]
    },
    {
        "id": "449f1cd9f495a5bb",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 1175,
        "y": 1140,
        "wires": []
    },
    {
        "id": "88b2664072dfbf85",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "topic",
        "x": 1050,
        "y": 1340,
        "wires": [
            [
                "68445733c8fc7a62"
            ]
        ]
    },
    {
        "id": "68445733c8fc7a62",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 1175,
        "y": 1340,
        "wires": []
    },
    {
        "id": "92c228ef5be8f185",
        "type": "rbe",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "topic",
        "x": 1050,
        "y": 1500,
        "wires": [
            [
                "87d716585ae2e177"
            ]
        ]
    },
    {
        "id": "87d716585ae2e177",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 1175,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e0a3fe749d0b3388",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "OutputStatus",
        "func": "/*\nstatus\n1 - On\n2 - OFF\n\n*/\nlet status =global.get(\"System.Output\")\n\n\nlet outputs = global.get(\"System.Elements.Outputs\")\n\nconst outImg =[\n    \"/uimedia/IO/off.png\",\n    \"/uimedia/IO/Oon.png\",\n    \n    ]\nvar output = [];\n//output[0]={src:outImg[1]};\nfor (let i=0; i< outputs; i++){\n    if(status[i]){\n        output[i]={src:outImg[1],topic:i};\n    }\n    else{\n        output[i]={src:outImg[0],topic:i};\n    }\n}\n    \nreturn [\n    output[0],\n    output[1],\n    output[2],\n    output[3],\n    output[4],\n    output[5],\n    output[6],\n    output[7],\n    output[8],\n    output[9],\n    output[10],\n    output[11],\n    output[12],\n    output[13],\n    output[14],\n    output[15]\n];",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1720,
        "wires": [
            [
                "7179b1a128c24527"
            ],
            [
                "85a008db23a087ea"
            ],
            [
                "da2b40128faf7278"
            ],
            [
                "d2d123eb8d1b1ea3"
            ],
            [
                "b2384b19b7bef859"
            ],
            [
                "a82a469d59b80fa4"
            ],
            [
                "2c9cf1aac8702a33"
            ],
            [
                "0a1d9a1c765ad791"
            ],
            [
                "8c7f121b578ae94f"
            ],
            [
                "e6d30394d5081ad6"
            ],
            [
                "ee108620e6ef44f0"
            ],
            [
                "bf424f7aaa9b0e40"
            ],
            [
                "7ded2fc445f25987"
            ],
            [
                "2990f6832ebbf462"
            ],
            [
                "26b325091efae1cc"
            ],
            []
        ]
    },
    {
        "id": "7179b1a128c24527",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output0",
        "order": 1,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "85a008db23a087ea",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output1",
        "order": 2,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "da2b40128faf7278",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output2",
        "order": 3,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "d2d123eb8d1b1ea3",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output3",
        "order": 4,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "b2384b19b7bef859",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output4",
        "order": 5,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 720,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "a82a469d59b80fa4",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output5",
        "order": 6,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 720,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "2c9cf1aac8702a33",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output6",
        "order": 7,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 720,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "0a1d9a1c765ad791",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output7",
        "order": 8,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 720,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "5cad96089275cca5",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input0",
        "order": 1,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "a150929a3b85af8c",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input1",
        "order": 2,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "0fd4a768beb94374",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input2",
        "order": 3,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "3a78b3147d72a82d",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input3",
        "order": 4,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "03047f68d4969b1f",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input4",
        "order": 5,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 730,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "4c9409691c12dae1",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input5",
        "order": 6,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 730,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "6c1abb8f026dcc38",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input6",
        "order": 7,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 730,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "9fa57917ed803841",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input7",
        "order": 8,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 730,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "958cac64401ce289",
        "type": "function",
        "z": "8696637e2f6b1b8d",
        "name": "InputStatus",
        "func": "/*\nstatus\n1 - On\n2 - OFF\n\n*/\nlet status =global.get(\"System.Input\")\n\n\nlet inputs = global.get(\"System.Elements.Inputs\")\n\nconst outImg =[\n    \"/uimedia/IO/off.png\",\n    \"/uimedia/IO/Ion.png\",\n    \n    ]\nvar output = [];\n//output[0]={src:outImg[1]};\nfor (let i=0; i< inputs; i++){\n    if(status[i]){\n        output[i]={src:outImg[1],topic:i};\n    }\n    else{\n        output[i]={src:outImg[0],topic:i};\n    }\n}\n    \nreturn [\n    output[0],\n    output[1],\n    output[2],\n    output[3],\n    output[4],\n    output[5],\n    output[6],\n    output[7],\n    output[8],\n    output[9],\n    output[10],\n    output[11],\n    output[12],\n    output[13],\n    output[14],\n    output[15]\n];",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1960,
        "wires": [
            [
                "5cad96089275cca5"
            ],
            [
                "a150929a3b85af8c"
            ],
            [
                "0fd4a768beb94374"
            ],
            [
                "3a78b3147d72a82d"
            ],
            [
                "03047f68d4969b1f"
            ],
            [
                "4c9409691c12dae1"
            ],
            [
                "6c1abb8f026dcc38"
            ],
            [
                "9fa57917ed803841"
            ],
            [
                "943b2deaa2fdca5e"
            ],
            [
                "c3cc6cedf6dcf3b5"
            ],
            [
                "b5072f16a501ebe5"
            ],
            [
                "0cbd3d57bdab3dfd"
            ],
            [
                "30c98fece715d46f"
            ],
            [
                "8fefd712110aa3b4"
            ],
            [
                "de21384b512b435c"
            ]
        ]
    },
    {
        "id": "8c7f121b578ae94f",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output8",
        "order": 9,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 900,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "e6d30394d5081ad6",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output9",
        "order": 10,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 900,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "1de6248825319174",
        "type": "link out",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "links": [
            "99d64b73.f01c58",
            "67ecd6e0.c3a3d8"
        ],
        "x": 955,
        "y": 780,
        "wires": []
    },
    {
        "id": "01283a52f501db99",
        "type": "debug",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 500,
        "wires": []
    },
    {
        "id": "9b24ea14f012ec3f",
        "type": "comment",
        "z": "8696637e2f6b1b8d",
        "name": "",
        "info": "Se agrego la visualizacion de sp y fre",
        "x": 420,
        "y": 500,
        "wires": []
    },
    {
        "id": "ee108620e6ef44f0",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output10",
        "order": 11,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "bf424f7aaa9b0e40",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output11",
        "order": 12,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "7ded2fc445f25987",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output12",
        "order": 13,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1080,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "2990f6832ebbf462",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output13",
        "order": 14,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1080,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "26b325091efae1cc",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "443ac799.d0cea8",
        "name": "Output14",
        "order": 15,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1080,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "943b2deaa2fdca5e",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input8",
        "order": 9,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "c3cc6cedf6dcf3b5",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input9",
        "order": 10,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "b5072f16a501ebe5",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input10",
        "order": 11,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "0cbd3d57bdab3dfd",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input11",
        "order": 12,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "30c98fece715d46f",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input12",
        "order": 13,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "8fefd712110aa3b4",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input13",
        "order": 14,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "de21384b512b435c",
        "type": "ui_template",
        "z": "8696637e2f6b1b8d",
        "group": "f06c7623.d9ebb8",
        "name": "Input14",
        "order": 15,
        "width": 2,
        "height": 1,
        "format": "<button  ng-click=\"send({payload:'Gate[0]', src:'/uimedia/Gates/gate_on.png'})\">\n<img width=\"40\" height=\"40\" src=  {{msg.src}} object-fit= \"fill\"  />\n</button>\n<style>\nbutton {\n\tborder: none;\n    background-color: transparent;\n    outline: none;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "96d66e84d30bbf74",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Hoppers Output",
        "func": "\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n \n\nfor (let i= 0; i < hoppers; i ++){\n    \n    let enabled =  global.get(`System.Hopper[${i}].Enabled`);\n    //let active =  global.get(`System.Hopper[${i}].Active`);\n    let active = false;\n    let speed =0;\n    ////////////////////////////////\n    let sp =0;\n    //////////////////////////////////\n\n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Hopper[i].Active){\n            active = true;\n            speed = flatFiller[j].Hopper[i].Speed;\n            //////////////////////////////////////\n            sp = flatFiller[j].Hopper[i].SP;\n            /////////////////////////////////////\n        }\n    }\n    let driveID =  i; //global.get(`System.Hopper[${i}].DriveID`);\n    //let speed =  global.get(`System.Hopper[${i}].Speed`);\n    let maxSpeed =  global.get(`System.Hopper[${i}].MaxSpeed`);\n    let manual =  global.get(`System.Hopper[${i}].Manual`);\n    let mixer = global.get(`System.Hopper[${i}].Mixer.Enabled`);\n    let output =  global.get(`System.Hopper[${i}].Mixer.Output`);\n    let error =  global.get(`System.Hopper[${i}].Error`);\n    let pause = global.get(\"System.Mode.Pause\");\n\n    //////////////////////////////////////////////////\n    global.set(`System.Drive[${driveID}].SP`, sp);\n    /////////////////////////////////////////////\n    \n    if(enabled){\n        if(error){\n            global.set(`System.Hopper[${i}].Status`,3);\n            global.set(`System.Drive[${driveID}].Active`,false);\n            if(mixer){\n                global.set(`System.Output[${output}]`,false);\n            }\n        }\n        else{\n            if(active && !pause){\n                global.set(`System.Hopper[${i}].Status`,1);\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                \n                global.set(`System.Drive[${driveID}].Active`,true);\n                if(mixer){\n                    global.set(`System.Output[${output}]`,true);\n                }\n            }\n            else{\n                if(manual){\n                   global.set(`System.Hopper[${i}].Status`,1);\n                   global.set(`System.Drive[${driveID}].Speed`,maxSpeed);\n                   global.set(`System.Drive[${driveID}].Active`,true);\n                    if(mixer){\n                        global.set(`System.Output[${output}]`,true);\n                    }   \n                }\n                else{\n                    /*is off*/\n                    global.set(`System.Hopper[${i}].Status`,2);\n                    global.set(`System.Drive[${driveID}].Speed`,0);\n                    global.set(`System.Drive[${driveID}].Active`,false);\n                    if(mixer){\n                        global.set(`System.Output[${output}]`,false);\n                    }\n                   \n                }\n                \n            }\n            \n            \n        }\n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Hopper[${i}].Status`,0);\n        global.set(`System.Drive[${driveID}].Speed`,0);\n        global.set(`System.Drive[${driveID}].Active`,false);\n        if(mixer){\n            global.set(`System.Output[${output}]`,false);\n        }\n    }\n    \n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "07920d26928a8586",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Chemicals IO",
        "func": "\nlet Chemicals = global.get(\"System.Elements.Chemicals\");\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\nfor (let i= 0; i < Chemicals; i ++){\n    let enabled =  global.get(`System.Chemical[${i}].Enabled`);\n    //let active =  global.get(`System.Chemical[${i}].Active`);\n    let driveID =  i + hoppers;//global.get(`System.Chemical[${i}].DriveID`);\n   // let speed =  global.get(`System.Chemical[${i}].Speed`);\n    let maxSpeed =  global.get(`System.Chemical[${i}].MaxSpeed`);\n    let manual =  global.get(`System.Chemical[${i}].Manual`);\n    \n    let sensorEn = global.get(`System.Chemical[${i}].Sensor.Enabled`);\n    let input = global.get(`System.Chemical[${i}].Sensor.Input`);\n    \n    let active = false;\n    let speed =0;\n    let pause = global.get(\"System.Mode.Pause\");\n    let sensorAct = global.get(`System.Input[${input}]`);\n\n    ////////////////////////////////\n    let sp = 0;\n    //////////////////////////////////\n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Chemical[i].Active){\n            active = true;\n            speed = flatFiller[j].Chemical[i].Speed\n            //////////////////////////////////////\n            sp = flatFiller[j].Chemical[i].SP;\n            /////////////////////////////////////\n        }\n    }\n    if(sensorEn && sensorAct){\n         global.set(`System.Chemical[${i}].Error`,true);\n    }\n    else{\n        global.set(`System.Chemical[${i}].Error`,false);\n    }\n    \n    let error =  global.get(`System.Chemical[${i}].Error`);\n    //////////////////////////////////////////////////\n    global.set(`System.Drive[${driveID}].SP`, sp);\n    /////////////////////////////////////////////\n    \n    if(enabled){\n        if(error){\n            global.set(`System.Chemical[${i}].Status`,3);\n            global.set(`System.Drive[${driveID}].Active`,false);\n            global.set(`System.Drive[${driveID}].Speed`,0);\n            \n            \n        }\n        else{\n            if(active && !pause){\n                global.set(`System.Chemical[${i}].Status`,1);\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                global.set(`System.Drive[${driveID}].Active`,true);\n            }\n            else{\n                if(manual){\n                    global.set(`System.Chemical[${i}].Status`,1);\n                    global.set(`System.Drive[${driveID}].Speed`,maxSpeed);\n                    global.set(`System.Drive[${driveID}].Active`,true);\n                }\n                else{\n                    /*is off*/\n                    global.set(`System.Chemical[${i}].Status`,2);\n                    global.set(`System.Drive[${driveID}].Speed`,0);\n                    global.set(`System.Drive[${driveID}].Active`,false);\n                }\n            }\n        }\n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Chemical[${i}].Status`,0);\n        global.set(`System.Drive[${driveID}].Speed`,0);\n        global.set(`System.Drive[${driveID}].Active`,false);\n        \n    }\n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "991eae17d84d85af",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Conveyor output",
        "func": "\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\nfor (let i= 0; i < conveyors; i ++){\n    let enabled =  global.get(`System.Conveyor[${i}].Enabled`);\n    //let active =  global.get(`System.Conveyor[${i}].Active`);\n    let hasDrive =  global.get(`System.Conveyor[${i}].HasDrive`);\n    let driveID =  global.get(`System.Conveyor[${i}].DriveID`);\n    let speed =  global.get(`System.Conveyor[${i}].DriveFrec`);\n    let manual =  global.get(`System.Conveyor[${i}].Manual`);\n    let output =  global.get(`System.Conveyor[${i}].Output`);\n    let mixEnabled = global.get(`System.Conveyor[${i}].Mixer.Enabled`);\n    let mixOutput = global.get(`System.Conveyor[${i}].Mixer.Output`);\n    let active = false;\n    let pause = global.get(\"System.Mode.Pause\");\n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Conveyor[i].Active){\n            active = true;\n        }\n    }\n    \n    if(enabled){\n        if((active && !pause) || manual){\n            global.set(`System.Conveyor[${i}].Status`,1);\n            if(hasDrive){\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                global.set(`System.Drive[${driveID}].Active`,true);\n            }\n            else{\n                 global.set(`System.Output[${output}]`,true);\n            }\n            if(mixEnabled){\n                global.set(`System.Output[${mixOutput}]`, true);\n            }\n            \n        }\n        else{\n            /*is off*/\n            global.set(`System.Conveyor[${i}].Status`,2)\n            if(hasDrive){\n                global.set(`System.Drive[${driveID}].Speed`,0);\n                global.set(`System.Drive[${driveID}].Active`,false);\n            }\n            else{\n                 global.set(`System.Output[${output}]`,false);\n            }\n            if (mixEnabled) {\n                global.set(`System.Output[${mixOutput}]`, false);\n            }\n        }\n            \n        \n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Conveyor[${i}].Status`,0);\n        if(hasDrive){\n                global.set(`System.Drive[${driveID}].Speed`,0);\n                global.set(`System.Drive[${driveID}].Active`,false);\n            }\n        else{\n                 global.set(`System.Output[${output}]`,false);\n        }\n        if (mixEnabled) {\n            global.set(`System.Output[${mixOutput}]`, false);\n        }\n        \n    }\n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "64ee683366d5c7cd",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Gates Output",
        "func": "\nlet gates = global.get(\"System.Elements.Gates\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\n\n\nfor (let i= 0; i < gates; i ++){\n    let enabled =  global.get(`System.Gate[${i}].Enabled`);\n    \n    let bistable =  global.get(`System.Gate[${i}].Bistable`);\n    let pulseDuration =  global.get(`System.Gate[${i}].PulseDuration`);\n    let outputClose =  global.get(`System.Gate[${i}].OutputClose`);\n    let outputOpen =  global.get(`System.Gate[${i}].OutputOpen`);\n    let status =  global.get(`System.Gate[${i}].Status`);\n    let pulse = flow.get(`pulse[${i}]`);\n    \n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Gate[i].Active){\n            if(flatFiller[j].Gate[i].Enabled == 1){\n                global.set(`System.Gate[${i}].Closed`, true);\n                global.set(`System.Gate[${i}].Status`,1);\n            }\n            else{\n                global.set(`System.Gate[${i}].Closed`, false);\n                global.set(`System.Gate[${i}].Status`,2);\n            }\n            \n        }\n    }\n    \n    let closed =  global.get(`System.Gate[${i}].Closed`);\n    \n    if(enabled){\n        \n        if(closed){\n            \n            if(status != 1 ){\n                global.set(`System.Gate[${i}].Status`,1);\n                global.set(`System.Output[${outputClose}]`,true);\n                \n            }\n        }\n        else{\n            if(status != 2 ){\n                global.set(`System.Gate[${i}].Status`,2);\n                global.set(`System.Output[${outputClose}]`,false);\n                \n            }\n        }\n    }\n    else{\n        /*Disabled*/\n        global.set(`System.Gate[${i}].Status`,0);\n        global.set(`System.Output[${outputClose}]`,false);\n       \n    }\n    \n    \n    \n}\nreturn msg;\n   \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1ceef712dab17cbc",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Check target",
        "func": "\nlet closed = global.get(\"System.Gate\").map(function (el) { return el.Closed; });\n\nif(closed[0]){\n    global.set(\"System.Target[0].Status\",1);\n    global.set(\"System.Target[1].Status\",0);\n    global.set(\"System.Target[2].Status\",0);\n    global.set(\"System.Target[3].Status\",0);\n}\nelse{\n    if(closed[1]){\n        global.set(\"System.Target[0].Status\",0);\n        global.set(\"System.Target[1].Status\",1);\n        global.set(\"System.Target[2].Status\",0);\n        global.set(\"System.Target[3].Status\",0);\n    }\n    else{\n        if(closed[2]){\n            global.set(\"System.Target[0].Status\",0);\n            global.set(\"System.Target[1].Status\",0);\n            global.set(\"System.Target[2].Status\",1);\n            global.set(\"System.Target[3].Status\",0);\n        }\n        else{\n            if(closed[3]){\n                global.set(\"System.Target[0].Status\",0);\n                global.set(\"System.Target[1].Status\",0);\n                global.set(\"System.Target[2].Status\",0);\n                global.set(\"System.Target[3].Status\",1);\n            }\n            else{\n                global.set(\"System.Target[0].Status\",0);\n                global.set(\"System.Target[1].Status\",0);\n                global.set(\"System.Target[2].Status\",0);\n                global.set(\"System.Target[3].Status\",0);\n            }\n        }\n    }\n}\n\n\n msg.payload = closed  \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6cbe82f9eee1f71d",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Check for active",
        "func": "if(global.get(\"System.Mode.Pause\")){\n    msg.payload1 = 1;\n    msg.reset = true;\n    return msg\n}\n \nlet active;\ntry{\n  active = global.get(\"System.FlatFiller\").map(function (el) { return el.Active; });\n}\ncatch(error){\n    return;\n}\n\nmsg.payload1 = 2;\nlet FlatFillers = global.get(\"System.Elements.FlatFillers\");\n\nactive.forEach((el) =>   {\n   if(el){\n       msg.payload1 =1;\n       global.set(\"System.Batch.Active\",true);\n    }\n   \n})\n if(msg.payload1 === 2){\n     msg.reset =true; \n     global.set(\"System.Batch.RTEncoder\",0);\n     global.set(\"System.Batch.NextID\",0);\n     global.set(\"System.Batch.NextEncoder\",0);\n     global.set(\"System.Batch.Active\",false);\n     global.set(\"System.Batch.CompTime\", 0);\n     for (let ff = 0; ff < FlatFillers; ff++) {\n         global.set(`System.Batch.NextEnc[${ff}]`, 0);\n         \n     }\n }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1cacb8a7e8e5c265",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Batch Elements",
        "func": "let Auto = global.get(\"System.Mode.Auto\");\nif(!Auto){\n    return;\n}\nlet batchID =20;\nlet minID =10;\ntry{\n  batchID = global.get(\"System.FlatFiller\").map(function (el) { return el.Batch.ID; });\n  minID = Math.min(...batchID);\n}\ncatch(error){\n   \n}\n\n\nlet FlatFillers = global.get(\"System.Elements.FlatFillers\");\nlet Hoppers = global.get(\"System.Elements.Hoppers\");\nlet Chemicals = global.get(\"System.Elements.Chemicals\");\nlet Conveyors = global.get(\"System.Elements.Conveyors\");\nlet Waters = global.get(\"System.Elements.Waters\");\nlet Gates = global.get(\"System.Elements.Gates\");\n\nlet FlatFiller = global.get(\"System.FlatFiller\");\n\nfor(let i=0; i < FlatFillers; i++){\n    /*Check if flat filler is active*/\n    if(FlatFiller[i].Active){\n        /*Activate all elements*/\n       \n        /*Hoppers*/\n        for(let j=0; j < Hoppers; j++){ \n               //msg.payload = FlatFiller[0].Batch.Encoder.Value\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Hopper[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Hopper[j].EncodEnd) {\n                    FlatFiller[i].Hopper[j].Active = true;\n                    msg.payload = 48\n            }\n            else{\n                FlatFiller[i].Hopper[j].Active = false;\n            }\n        }\n        \n        /*Chemicals*/\n        for(let j=0; j < Chemicals; j++){\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Chemical[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Chemical[j].EncodEnd) {\n                   \n                   if(global.get(`System.Chemical[${j}].Error`)==true){\n                       /*Pause*/\n                       \n                       global.set(\"System.Mode.Test\",true);\n            \n                   }\n                   else{\n                       FlatFiller[i].Chemical[j].Active = true;\n                   }\n                   \n                  \n            }\n            else{\n                FlatFiller[i].Chemical[j].Active = false;\n            }\n        }\n        \n        /*Conveyors*/\n        msg.payload = Conveyors\n        for(let j=0; j < Conveyors; j++){\n            \n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Conveyor[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Conveyor[j].EncodEnd) {\n                  FlatFiller[i].Conveyor[j].Active = true;\n            }\n            else{\n                FlatFiller[i].Conveyor[j].Active = false;\n            }\n        }\n        \n         /*Waters*/\n        for(let j=0; j < Waters; j++){\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Water[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Water[j].EncodEnd) {\n                  FlatFiller[i].Water[j].Active = true;\n            }\n            else{\n                FlatFiller[i].Water[j].Active = false;\n            }\n        }\n        \n        /*Gates*/\n        for(let j=0; j < Gates; j++){\n            if(FlatFiller[i].Batch.Encoder.Value > FlatFiller[i].Gate[j].EncodStart\n               && FlatFiller[i].Batch.Encoder.Value < FlatFiller[i].Gate[j].EncodEnd) {\n                  FlatFiller[i].Gate[j].Active = true;\n            }\n            else{\n                FlatFiller[i].Gate[j].Active = false;\n            }\n        }\n        \n    }\n    else{\n        /*Hoppers*/\n        for(let j=0; j < Hoppers; j++){\n            FlatFiller[i].Hopper[j].Active = false;\n        }\n        \n        /*Chemicals*/\n        for(let j=0; j < Chemicals; j++){\n            FlatFiller[i].Chemical[j].Active = false;\n        }\n        \n        /*Conveyors*/\n        for(let j=0; j < Conveyors; j++){\n            FlatFiller[i].Conveyor[j].Active = false;\n        }\n        \n        /*Waters*/\n        for(let j=0; j < Waters; j++){\n            FlatFiller[i].Water[j].Active = false;\n        }\n        \n        /*Gates*/\n        for(let j=0; j < Gates; j++){\n            FlatFiller[i].Gate[j].Active = false;\n        }\n    }\n}\n\nglobal.set(\"System.FlatFiller\",FlatFiller);\nmsg.payload = minID;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "01a9c3f13095dfd4",
        "type": "inject",
        "z": "bc5fdcaeb0f4b277",
        "name": "500 ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "1cacb8a7e8e5c265",
                "4f2181bbd6f37303",
                "6cbe82f9eee1f71d",
                "1ceef712dab17cbc",
                "64ee683366d5c7cd",
                "991eae17d84d85af",
                "96d66e84d30bbf74",
                "14d9d8a21321c32d",
                "4bda397126caaddc",
                "d75767a68350bd75"
            ]
        ]
    },
    {
        "id": "4f2181bbd6f37303",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Batch control",
        "func": "let Batch = global.get(\"System.Batch\");\nlet FlatFillers = global.get(\"System.Elements.FlatFillers\");\nlet FlatFiller = global.get(\"System.FlatFiller\");\n\n\n  \nfor(let i=0; i < FlatFillers; i++){\n    /*Check to activate flat filler*/\n    \n    if(FlatFiller[i].Call && !FlatFiller[i].Active){\n         FlatFiller[i].Call = false;\n         FlatFiller[i].Active = true;\n         FlatFiller[i].ID = Batch.NextID;\n         Batch.NextID ++;\n         //FlatFiller[i].Batch.Encoder.Start = Batch.NextEncoder;\n         FlatFiller[i].Batch.Encoder.Start = Batch.NextEnc[i];\n         FlatFiller[i].Batch.Encoder.End = Batch.NextEncoder + FlatFiller[i].Batch.TotalTime * 10 + FlatFiller[i].Batch.Time *10;\n         Batch.NextEncoder += (FlatFiller[i].Batch.Time + Batch.Gap) *10;\n         for(let ff = 0; ff < FlatFillers; ff++) {\n             Batch.NextEnc[ff] = FlatFiller[i].Batch.Encoder.Start + (FlatFiller[i].Batch.Time + Batch.Gap + FlatFiller[ff].Batch.CompTime - FlatFiller[i].Batch.CompTime) * 10;\n         }\n         \n    }\n    else{\n        /*Check to deactivate batch*/\n        if(FlatFiller[i].Active){\n            FlatFiller[i].Batch.Encoder.Value = Batch.RTEncoder - FlatFiller[i].Batch.Encoder.Start;\n            if(FlatFiller[i].Batch.Encoder.Value < 0){\n                FlatFiller[i].Batch.Encoder.Value = 0;\n            }\n            if(Batch.RTEncoder >= FlatFiller[i].Batch.Encoder.End){\n                FlatFiller[i].Active = false;\n                FlatFiller[i].Batch.Encoder.Value =0;\n            }\n            \n            \n        }\n    }\n}\n//msg.payload = FlatFiller[0].Batch.Encoder.Value\n\nglobal.set(\"System.FlatFiller\", FlatFiller);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "34ef44ca3a49a02a",
        "type": "inject",
        "z": "bc5fdcaeb0f4b277",
        "name": "250 ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "e39fa469ff37d625"
            ]
        ]
    },
    {
        "id": "e39fa469ff37d625",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Global Encoder",
        "func": "let active = global.get(\"System.Batch.Active\");\n\nif(global.get(\"System.Mode.Pause\") || !active){\n    flow.set(\"lasttime\",msg.payload);\n    return;\n}\n\nlet RTEncoder = global.get(\"System.Batch.RTEncoder\");\nlet lasttime = flow.get(\"lasttime\");\nflow.set(\"lasttime\",msg.payload);\n\nlet ms = msg.payload - lasttime;\n\nms = parseInt(ms/100);\n\nRTEncoder =RTEncoder + ms;\n\nglobal.set(\"System.Batch.RTEncoder\",RTEncoder);\n\n\nmsg.payload = RTEncoder;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 680,
        "wires": [
            [
                "29682a61ce904a28"
            ]
        ]
    },
    {
        "id": "87373a647b860212",
        "type": "inject",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "b0136d5ab10d1961"
            ]
        ]
    },
    {
        "id": "b0136d5ab10d1961",
        "type": "change",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lasttime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "29682a61ce904a28",
        "type": "debug",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 680,
        "wires": []
    },
    {
        "id": "14d9d8a21321c32d",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Flat Fillers Input",
        "func": "\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\nlet Auto = global.get(\"System.Mode.Auto\");\n\nlet Load = false;\nlet sensorAct = false;\n\n\nfor (let i= 0; i < flatFillers; i ++){\n   \n    Load = global.get(`System.FlatFiller[${i}].Recipe.Load`);\n    sensorAct = global.get(`System.Input[${flatFiller[i].Sensor.Input}]`);\n    \n    if(flatFiller[i].Enabled && flatFiller[i].Sensor.Enabled && !flatFiller[i].Active && sensorAct && Auto && Load){\n        global.set(`System.FlatFiller[${i}].Call`,true);\n    }\n    \n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "b58f6ddaedf6b301"
            ]
        ]
    },
    {
        "id": "b58f6ddaedf6b301",
        "type": "debug",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 420,
        "wires": []
    },
    {
        "id": "e651fbd7c28fdaa9",
        "type": "trigger",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 460,
        "y": 800,
        "wires": [
            [
                "ee98108ae9224ef4"
            ]
        ]
    },
    {
        "id": "ee98108ae9224ef4",
        "type": "change",
        "z": "bc5fdcaeb0f4b277",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "System.Alarm.Active",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 800,
        "wires": [
            [
                "8aefc34d12b296fa"
            ]
        ]
    },
    {
        "id": "8aefc34d12b296fa",
        "type": "switch",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 800,
        "wires": [
            [
                "d82ac79ee9fd42c1"
            ]
        ]
    },
    {
        "id": "d82ac79ee9fd42c1",
        "type": "change",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Mode.Pause",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "System.Mode.Manual",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "System.Mode.Auto",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "958e4041c028d88a",
        "type": "link in",
        "z": "bc5fdcaeb0f4b277",
        "name": "Alarm on Init In",
        "links": [
            "34aee857.fc2b88",
            "daf9c0.5822064"
        ],
        "x": 115,
        "y": 800,
        "wires": [
            [
                "188a52aa35636b5e"
            ]
        ]
    },
    {
        "id": "0d5041f697d754bc",
        "type": "comment",
        "z": "bc5fdcaeb0f4b277",
        "name": "Alarm on Init or after Pause",
        "info": "",
        "x": 340,
        "y": 740,
        "wires": []
    },
    {
        "id": "188a52aa35636b5e",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Set Delay",
        "func": "msg.delay = global.get(\"System.Alarm.Time\")*1000;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 800,
        "wires": [
            [
                "e651fbd7c28fdaa9"
            ]
        ]
    },
    {
        "id": "b84e195cbdb9283a",
        "type": "file",
        "z": "bc5fdcaeb0f4b277",
        "name": "log",
        "filename": ".node-red/projects/Smart_Mix/Config/log1.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1270,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c7d3054a1ecafb38",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "log",
        "func": "\nmsg.payload = msg.topic+\",\"+ msg.payload + \",\"+ global.get(\"System.Batch.RTEncoder\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "b84e195cbdb9283a"
            ]
        ]
    },
    {
        "id": "6869e2c759dfa940",
        "type": "link in",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "links": [
            "3ef4599d.e508e6",
            "c3e9901c.de37a",
            "c9bc6a75.65a378",
            "a86154d0.b06568",
            "ae5cf8af.de4988",
            "273cc5e9.f9da4a",
            "e3fc78c5.68cc38"
        ],
        "x": 115,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4bda397126caaddc",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Check for errors",
        "func": "/*E_Stop*/\nlet eStopEn = global.get(\"System.EStop.Enabled\");\nlet eStopIn = global.get(\"System.EStop.Input\");\nlet eStopActive = global.get(`System.Input[${eStopIn}]`);\nlet active = global.get(\"System.Batch.Active\");\nlet faults = global.get(\"System.Fault.Faults\");\nlet code = global.get(\"System.Fault.Code\");\n\nif(eStopEn && eStopActive && code !=2){\n    /*eStop pressed*/\n     let fault = {DateTime:new Date() , Type:\"Emergency Stop\", Code:2, Message:\"eStop Pressed\", Ack:false};\n     fault.Type = \"Emergency Stop\";\n     fault.Code = 0;\n     fault.Message = \"Emergency Stop Pressed\";\n     faults.push(fault);\n     msg.fault =1;\n    \n    if(active){\n        global.set(\"System.Mode.Pause\",true);\n        global.set(\"System.Mode.Auto\",false);\n        \n    }\n    global.set(\"System.Mode.Fault\",true);\n    global.set(\"System.Fault.Code\",2);\n    global.set(\"System.Fault.Faults\",faults);\n    \n    \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "555354a4acc4a3e1",
        "type": "comment",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "info": "Se agrego la variable sp a los drives para visualizarla",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "72c17a517fc2b8cc",
        "type": "comment",
        "z": "bc5fdcaeb0f4b277",
        "name": "",
        "info": "Se agrego la variable sp a los drives para visualizarla",
        "x": 580,
        "y": 140,
        "wires": []
    },
    {
        "id": "d75767a68350bd75",
        "type": "function",
        "z": "bc5fdcaeb0f4b277",
        "name": "Chemicals IO",
        "func": "\nlet Chemicals = global.get(\"System.Elements.Chemicals\");\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet flatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet flatFiller = global.get(\"System.FlatFiller\");\n\nfor (let i= 0; i < Chemicals; i ++){\n    let enabled =  global.get(`System.Chemical[${i}].Enabled`);\n    //let active =  global.get(`System.Chemical[${i}].Active`);\n    let driveID =  i + hoppers;//global.get(`System.Chemical[${i}].DriveID`);\n   // let speed =  global.get(`System.Chemical[${i}].Speed`);\n    let maxSpeed =  global.get(`System.Chemical[${i}].MaxSpeed`);\n    let manualSP = global.get(`System.Chemical[${i}].ManualSP`);\n    let manual =  global.get(`System.Chemical[${i}].Manual`);\n    let fc = global.get(`System.Chemical[${i}].FC`);\n    let sensorEn = global.get(`System.Chemical[${i}].Sensor.Enabled`);\n    let input = global.get(`System.Chemical[${i}].Sensor.Input`);\n    \n    let active = false;\n    let speed =0;\n    let pause = global.get(\"System.Mode.Pause\");\n    let sensorAct = global.get(`System.Input[${input}]`);\n\n    ////////////////////////////////\n    let sp = 0;\n    //////////////////////////////////\n    \n    for (let j=0;j<flatFillers;j++){\n        if(flatFiller[j].Active && flatFiller[j].Chemical[i].Active){\n            active = true;\n            speed = flatFiller[j].Chemical[i].Speed\n            //////////////////////////////////////\n            sp = flatFiller[j].Chemical[i].SP;\n            /////////////////////////////////////\n        }\n    }\n    if(sensorEn && sensorAct){\n         global.set(`System.Chemical[${i}].Error`,true);\n    }\n    else{\n        global.set(`System.Chemical[${i}].Error`,false);\n    }\n    \n    let error =  global.get(`System.Chemical[${i}].Error`);\n    //////////////////////////////////////////////////\n    global.set(`System.Drive[${driveID}].SP`, sp);\n    /////////////////////////////////////////////\n    \n    if(enabled){\n        if(error){\n            global.set(`System.Chemical[${i}].Status`,3);\n            global.set(`System.Drive[${driveID}].Active`,false);\n            global.set(`System.Drive[${driveID}].Speed`,0);\n            \n            \n        }\n        else{\n            if(active && !pause){\n                global.set(`System.Chemical[${i}].Status`,1);\n                global.set(`System.Drive[${driveID}].Speed`,speed);\n                global.set(`System.Drive[${driveID}].Active`,true);\n            }\n            else{\n                if(manual){\n                    let manualSpeed= manualSP/fc*maxSpeed;\n                    if (manualSpeed > maxSpeed){\n                        manualSpeed = maxSpeed;\n                    }\n                    global.set(`System.Chemical[${i}].Status`,1);\n                    global.set(`System.Drive[${driveID}].Speed`,manualSpeed);\n                    global.set(`System.Drive[${driveID}].Active`,true);\n                    global.set(`System.Drive[${driveID}].SP`, manualSP);\n                }\n                else{\n                    /*is off*/\n                    global.set(`System.Chemical[${i}].Status`,2);\n                    global.set(`System.Drive[${driveID}].Speed`,0);\n                    global.set(`System.Drive[${driveID}].Active`,false);\n                }\n            }\n        }\n    }\n    else{\n        /*Is diabled*/\n        global.set(`System.Chemical[${i}].Status`,0);\n        global.set(`System.Drive[${driveID}].Speed`,0);\n        global.set(`System.Drive[${driveID}].Active`,false);\n        \n    }\n    \n}\n   \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "dd8946c.324afb8",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Set Auto",
        "func": "let auto = global.get(\"System.Mode.Auto\");\nlet pause = global.get(\"System.Mode.Pause\");\nlet stop = global.get(\"System.Mode.Stop\");\nlet fault = global.get(\"System.Mode.Fault\");\nlet starting = global.get(\"System.Mode.Starting\");\nlet active = global.get(\"System.Batch.Active\");\n///////////////////////////////////////////////\nif (fault || stop || starting || (active && !pause)){\n    return;\n}\n/////////////////////////////////////////////////\n\nif(auto){\n    global.set(\"System.Mode.Auto\",false);\n    return;\n}\nelse{\n    /*Check for Alarm*/\n    if(!pause){\n        if(global.get(\"System.Alarm.Enabled\") && global.get(\"System.Alarm.OnInit\")){\n            msg.payload = true;\n            return msg;\n        }\n        else{\n            global.set(\"System.Mode.Manual\",false);\n            global.set(\"System.Mode.Auto\",true);\n            return  ;\n        }\n    }\n    else{\n        if(global.get(\"Sytem.Alarm.Enabled\") && global.get(\"System.Alarm.AfterPause\")){\n            msg.payload = true;\n            return msg;\n        }\n        else{\n            global.set(\"System.Mode.Manual\",false);\n            global.set(\"System.Mode.Pause\",false);\n            global.set(\"System.Mode.Auto\",true);\n            return ;\n        }\n        \n    }\n     \n}\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "34aee857.fc2b88"
            ]
        ]
    },
    {
        "id": "b886e5c7.e220c8",
        "type": "catch",
        "z": "87e454f5.ad3e68",
        "name": "",
        "scope": [
            "a4541335.c00d7"
        ],
        "uncaught": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "c94cbef8.5bdee"
            ]
        ]
    },
    {
        "id": "c94cbef8.5bdee",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Error",
        "func": "msg.topic = \"Error\";\nmsg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 80,
        "wires": [
            [
                "7743480d.9b1478"
            ]
        ]
    },
    {
        "id": "7743480d.9b1478",
        "type": "ui_toast",
        "z": "87e454f5.ad3e68",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Error",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "372e4513.0cabaa",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Auto Btn in",
        "links": [
            "8e812b9e.498c48"
        ],
        "x": 115,
        "y": 140,
        "wires": [
            [
                "58f2dc60.2899c4"
            ]
        ]
    },
    {
        "id": "58f2dc60.2899c4",
        "type": "link out",
        "z": "87e454f5.ad3e68",
        "name": "To Check Configuration",
        "links": [
            "65957795.68e1e8",
            "fe8c36c9.da9138"
        ],
        "x": 185,
        "y": 140,
        "wires": []
    },
    {
        "id": "256774f6.223d8c",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Check config In",
        "links": [
            "3a51fe0f.3244d2",
            "e20bbd3c.9cc17"
        ],
        "x": 275,
        "y": 140,
        "wires": [
            [
                "dd8946c.324afb8"
            ]
        ]
    },
    {
        "id": "34aee857.fc2b88",
        "type": "link out",
        "z": "87e454f5.ad3e68",
        "name": "to Alarm On Init",
        "links": [
            "25c953eb.4b7bfc",
            "558c82c4.be70bc"
        ],
        "x": 515,
        "y": 140,
        "wires": []
    },
    {
        "id": "89547142.02ff1",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Btn Puse In",
        "links": [
            "1d3ca41a.cd23fc",
            "84c41953f6041908",
            "45da86ad14f927b1"
        ],
        "x": 275,
        "y": 200,
        "wires": [
            [
                "217b9b6b.048ca4"
            ]
        ]
    },
    {
        "id": "217b9b6b.048ca4",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Set Pause",
        "func": "let auto = global.get(\"System.Mode.Auto\");\n\n\nif (!auto){\n    return;\n}\n\nglobal.set(\"System.Mode.Pause\",true);\nglobal.set(\"System.Mode.Auto\",false);\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bcead1dd.d7314",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Btn Stop In",
        "links": [
            "735b6db7.764b94"
        ],
        "x": 275,
        "y": 260,
        "wires": [
            [
                "4ef5bb03.39cb74"
            ]
        ]
    },
    {
        "id": "4ef5bb03.39cb74",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Set Stop",
        "func": "\nlet stop = global.get(\"System.Mode.Stop\");\nlet FlatFillers  = global.get(\"System.Elements.FlatFillers\");\nlet FlatFiller = global.get(\"System.FlatFiller\");\n\nlet hoppers = global.get(\"System.Elements.Hoppers\");\nlet chemicals = global.get(\"System.Elements.Chemicals\");\nlet conveyors = global.get(\"System.Elements.Conveyors\");\nlet waters = global.get(\"System.Elements.Waters\");\n\nif(!stop){\n    global.set(\"System.Mode.Stop\",true);\n    global.set(\"System.Mode.Auto\",false);\n    global.set(\"System.Mode.Pause\",false);\n    global.set(\"System.Mode.Manual\",false);\n    \n   \n    \n    for(let i=0; i < FlatFillers; i++){\n        FlatFiller[i].Active = false;\n        FlatFiller[i].Batch.Encoder.Value =0;\n    }\n    /*Check all elements to deactivate*/\n    /*hoppers*/\n    for (let i = 0; i < hoppers; i++) {\n        global.set(`System.Hopper[${i}].Manual`, false);\n    }\n    /*chemicals*/\n    for (let i = 0; i < chemicals; i++) {\n        global.set(`System.Chemical[${i}].Manual`, false);\n    }\n    /*waters*/\n    for (let i = 0; i < waters; i++) {\n        global.set(`System.Water[${i}].Manual`, false);\n    }\n    /*conveyors*/\n    for (let i = 0; i < conveyors; i++) {\n        global.set(`System.Conveyor[${i}].Manual`, false);\n    }\n\n}\nelse{\n    global.set(\"System.Mode.Stop\",false);\n}\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "87c95e8d.62b5b",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Set Manual",
        "func": "let auto = global.get(\"System.Mode.Auto\");\nlet pause = global.get(\"System.Mode.Pause\");\nlet stop = global.get(\"System.Mode.Stop\");\nlet fault = global.get(\"System.Mode.Falult\");\nlet manual = global.get(\"System.Mode.Manual\");\nlet starting = global.get(\"System.Mode.Starting\");\n\n\nif (fault || stop || auto || pause || starting){\n    return ;\n}\n\n\nif(!manual){\n    global.set(\"System.Mode.Manual\",true);\n   \n}\nelse{\n    let hoppers = global.get(\"System.Elements.Hoppers\");\n    let chemicals = global.get(\"System.Elements.Chemicals\");\n    let conveyors = global.get(\"System.Elements.Conveyors\");\n    let waters = global.get(\"System.Elements.Waters\");\n    \n    global.set(\"System.Mode.Manual\",false);\n    /*Check all elements to deactivate*/\n    /*hoppers*/\n    for (let i= 0; i < hoppers; i ++){\n        global.set(`System.Hopper[${i}].Manual`,false);\n    }\n    /*chemicals*/\n    for (let i= 0; i < chemicals; i ++){\n        global.set(`System.Chemical[${i}].Manual`,false);\n    }\n    /*waters*/\n    for (let i= 0; i < waters; i ++){\n        global.set(`System.Water[${i}].Manual`,false);\n    }\n    /*conveyors*/\n    for (let i= 0; i < conveyors; i ++){\n        global.set(`System.Conveyor[${i}].Manual`,false);\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4b56d888.611a48",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Btn Manual In",
        "links": [
            "8f49bafb.1e08b8",
            "40ac8e3f.3177a"
        ],
        "x": 275,
        "y": 320,
        "wires": [
            [
                "87c95e8d.62b5b"
            ]
        ]
    },
    {
        "id": "46b7b41.dbf584c",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Activate  Manual Elements",
        "func": "let manual = global.get(\"System.Mode.Manual\");\nlet element = msg.payload;\n\nif(manual){\n    let manualEl = global.get(`System.${element}.Manual`);\n    let enabled =  global.get(`System.${element}.Enabled`);\n    if(enabled){\n        if(manualEl){\n            global.set(`System.${element}.Manual`,false);\n        }\n        else{\n            global.set(`System.${element}.Manual`,true);\n        }\n    }\n    \n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "3b691f55.c1e91",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "E-Stop Presset In",
        "links": [],
        "x": 275,
        "y": 380,
        "wires": [
            [
                "b5a72715.9511e8"
            ]
        ]
    },
    {
        "id": "b5a72715.9511e8",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "E-Stop",
        "func": "let active = global.set(\"System.Mode.Active\");\n\nif(active){\n    global.set(\"System.Mode.Pause\",true);\n}\nelse{\n    global.set(\"System.Mode.Manual\",false);\n    global.set(\"System.Mode.Auto\",false);\n    \n}\nglobal.set(\"System.Mode.Fault\",true);\nglobal.set(\"System.Fault.Stop\",false);\nglobal.set(\"System.Fault.Code\",3);\n\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cee4ac80.86c26",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Click Element In",
        "links": [
            "64971726.5b0438",
            "182d8680.556b6a",
            "773a122b.b4dd2c",
            "971c53d5.ea7b9",
            "b963ee62.0bacb",
            "18145f6a.2a14e1",
            "36fce0af.f503b"
        ],
        "x": 275,
        "y": 460,
        "wires": [
            [
                "46b7b41.dbf584c"
            ]
        ]
    },
    {
        "id": "75d1984e.d29978",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Gate manual",
        "func": "let manual = global.get(\"System.Mode.Manual\");\nlet gate = msg.payload;\n\n\nif(manual){\n    let closed = global.get(`System.${gate}.Closed`);\n    if(closed){\n        global.set(`System.${gate}.Closed`,false);\n    }\n    else{\n        global.set(`System.${gate}.Closed`,true);\n    }\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "5d1af776.723ea8",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Click Gate In",
        "links": [
            "7a81aea5.1b2a2",
            "15d6f3f1.ab8b7c"
        ],
        "x": 275,
        "y": 520,
        "wires": [
            [
                "75d1984e.d29978"
            ]
        ]
    },
    {
        "id": "53e55aa2.dcd254",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "Target Manual",
        "func": "let manual = global.get(\"System.Mode.Manual\");\nlet target = msg.payload;\n\n\nif(manual){\n    if (target == \"Target[0]\"){\n        global.set(\"System.Gate[0].Closed\", true);\n    }\n    else{\n        if (target == \"Target[1]\"){\n            global.set(\"System.Gate[0].Closed\", false);\n            global.set(\"System.Gate[1].Closed\", true);\n        }\n        else{\n             if (target == \"Target[2]\"){\n                global.set(\"System.Gate[0].Closed\", false);\n                global.set(\"System.Gate[1].Closed\", false);\n                global.set(\"System.Gate[2].Closed\", true);\n            }\n            else{\n                global.set(\"System.Gate[0].Closed\", false);\n                global.set(\"System.Gate[1].Closed\", false);\n                global.set(\"System.Gate[2].Closed\", false);\n                global.set(\"System.Gate[3].Closed\", true);\n            }\n        }\n    }\n    \n}\n\nmsg.payload = target;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "e1b5a89a.add378",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Click Gate In",
        "links": [
            "4aa87402.6dc9fc"
        ],
        "x": 275,
        "y": 580,
        "wires": [
            [
                "53e55aa2.dcd254"
            ]
        ]
    },
    {
        "id": "f62cb548.1548b8",
        "type": "function",
        "z": "87e454f5.ad3e68",
        "name": "FlatFiller Call",
        "func": "\nlet ff = msg.payload;\n\n\nlet flatfiller = global.get(`System.FlatFiller[${ff}]`);\n\nlet Auto = global.get(\"System.Mode.Auto\");\n\n\nif(flatfiller.Enabled && !flatfiller.Active && Auto && flatfiller.Recipe.Load){\n        global.set(`System.FlatFiller[${ff}].Call`,true);\n        msg.payload = 5\n    }\n\n\n   \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "14b87a5a.cc8106",
        "type": "link in",
        "z": "87e454f5.ad3e68",
        "name": "Click Gate In",
        "links": [
            "31679c6d.168324"
        ],
        "x": 275,
        "y": 640,
        "wires": [
            [
                "f62cb548.1548b8"
            ]
        ]
    },
    {
        "id": "07a4dad8fca720a1",
        "type": "comment",
        "z": "87e454f5.ad3e68",
        "name": "",
        "info": "no permitir quitar auto si hay un ciclo activo",
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "11cf59c52c5c4e9a",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "",
        "func": "//let outputs = global.get(\"System.Output\"); \nlet outputs = msg.payload;\nlet output = []\nfor(let i=0; i<15; i++){\n    output[i]= outputs[i]\n}\nmsg.payload = { value: output, 'fc': 15, 'unitid': 247, 'address': 0 , 'quantity': 15 }\n//msg.payload = { value: [0,0,0,0,0,0,0,0], 'fc': 15, 'unitid': 247, 'address': 1 , 'quantity': 8 } \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "f284caa3419e1adc"
            ]
        ]
    },
    {
        "id": "90985130996bd76b",
        "type": "rbe",
        "z": "59ce0e79908aaccb",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "11cf59c52c5c4e9a"
            ]
        ]
    },
    {
        "id": "8393fb1ad7a7bc47",
        "type": "trigger",
        "z": "59ce0e79908aaccb",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "62cf24ea0abec6a6"
            ]
        ]
    },
    {
        "id": "62cf24ea0abec6a6",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "",
        "func": "let currID = flow.get(\"curr_idw\");\nlet currCmd = flow.get(\"curr_cmd\");\nlet Value = 0;\nlet Reg =0;\nlet drives = global.get(\"System.Elements.Drives\")-1;\n//msg.reset = 0;\nlet nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true && index >= currID) {\n       return el\n    }\n    \n});\n\nif (nextEnabled === -1){\n    //msg.reset = 1;\n    msg.payload = \"stop\"\n    return msg;\n}\n\ncurrID = nextEnabled;\n\n\nlet driveId = global.get(`System.Drive[${currID}].ID`);\n\nswitch(currCmd){\n    case 0: \n        Value = 4111;\n        Reg = 8501;\n        break;\n    case 1:\n        Value = 0;\n        Reg = 8502;\n        break;\n    case 2:\n        Value = 6;\n        Reg = 8501;\n        break;\n    case 3:\n        Value = 15;\n        Reg = 8501;\n        break;\n}\n\ncurrCmd ++\nif(currCmd >3 ){\n    if(currID > drives ){\n       //msg.reset = 1;\n       msg.payload = \"stop\"\n       return msg;\n    }\n    else{\n        currID ++;  \n    }\n    flow.set(\"curr_idw\", currID);\n    currCmd = 0\n}\nflow.set(\"curr_cmd\", currCmd);\n\nmsg.payload = \n{ \n    value: Value, \n    'fc': 6, \n    'unitid': driveId, \n    'address': Reg , \n    'quantity': 1 \n    \n} \n//msg.topic =\"wait\"\n//msg.reset = 0;\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 460,
        "wires": [
            [
                "2555c7f9091cc263",
                "ae234d228c91fe49"
            ]
        ]
    },
    {
        "id": "ce6b70a43407f46c",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "DrivesRead",
        "func": "let currID = flow.get(\"curr_id\");\nlet nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true && index >= currID) {\n       return el\n    }\n    \n});\n\nif (nextEnabled === -1){\n    nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true ) {\n       return el\n    }\n});\n}\n\ncurrID = nextEnabled;\n\n\n//let driveEn = global.get(`System.Drive[${currID}].Enabled`);\nlet drives = global.get(\"System.Elements.Drives\")-1;\nlet driveId = global.get(`System.Drive[${currID}].ID`);\n\n\n    \n    msg.payload = {\n        value: msg.payload,\n        'fc': 3,\n        'unitid': driveId,\n        'address': 3202,\n        'quantity': 2\n    }\n\n\n\n\nif(currID >=drives ){    \n        currID = 0    \n   \n}\nelse{\n  currID ++;  \n}\nflow.set(\"curr_id\", currID);\nmsg.currID = currID;\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 340,
        "wires": [
            [
                "36640e72418d454a"
            ]
        ]
    },
    {
        "id": "60211a6b1f95f7cb",
        "type": "trigger",
        "z": "59ce0e79908aaccb",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "wait",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 400,
        "wires": [
            [
                "c3f8045f72c2dad7"
            ]
        ]
    },
    {
        "id": "c3f8045f72c2dad7",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "",
        "func": "let index = global.get(\"System.Drive\").findIndex(function (el) {\n    return el.Enabled && el.Speed != el.RefSpeed;\n});\n\nif (index >= 0) {\n    let drv = global.get(`System.Drive[${index}]`);\n\n    msg.payload =\n    {\n        value: drv.Speed * 10,\n        'fc': 6,\n        'unitid': drv.ID,\n        'address': 8502,\n        'quantity': 1\n\n    }\n    drv.RefSpeed = drv.Speed;\n    global.set(`System.Drive[${index}]`, drv);\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 400,
        "wires": [
            [
                "ae234d228c91fe49"
            ]
        ]
    },
    {
        "id": "28bac6fa6cf19621",
        "type": "change",
        "z": "59ce0e79908aaccb",
        "name": "Starting",
        "rules": [
            {
                "t": "set",
                "p": "System.Mode.Starting",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "wait",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 360,
        "wires": [
            [
                "60211a6b1f95f7cb",
                "1e8bb3f8e5caa18f",
                "71f893013e9ba733",
                "5169e02e8a094bf5",
                "6b9dc696344de2c0"
            ]
        ]
    },
    {
        "id": "3339db53fe28c810",
        "type": "link in",
        "z": "59ce0e79908aaccb",
        "name": "",
        "links": [
            "0695f11ff0574058"
        ],
        "x": 95,
        "y": 360,
        "wires": [
            [
                "28bac6fa6cf19621"
            ]
        ]
    },
    {
        "id": "bc55e980a66de866",
        "type": "trigger",
        "z": "59ce0e79908aaccb",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 720,
        "y": 340,
        "wires": [
            [
                "ce6b70a43407f46c"
            ]
        ]
    },
    {
        "id": "eb1e6d2f60ae8732",
        "type": "change",
        "z": "59ce0e79908aaccb",
        "name": "StopComm",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 300,
        "wires": [
            [
                "8393fb1ad7a7bc47",
                "60211a6b1f95f7cb",
                "bc55e980a66de866"
            ]
        ]
    },
    {
        "id": "f7c718d76c596305",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "Stop",
        "func": "if(msg.payload!=\"stop\"){\n    return\n}\nglobal.set(\"System.Mode.Starting\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 440,
        "wires": [
            [
                "8393fb1ad7a7bc47",
                "60211a6b1f95f7cb"
            ]
        ]
    },
    {
        "id": "2555c7f9091cc263",
        "type": "link out",
        "z": "59ce0e79908aaccb",
        "name": "",
        "mode": "link",
        "links": [
            "00f3f6547b8ca057"
        ],
        "x": 885,
        "y": 500,
        "wires": []
    },
    {
        "id": "00f3f6547b8ca057",
        "type": "link in",
        "z": "59ce0e79908aaccb",
        "name": "",
        "links": [
            "2555c7f9091cc263"
        ],
        "x": 95,
        "y": 460,
        "wires": [
            [
                "f7c718d76c596305"
            ]
        ]
    },
    {
        "id": "1e8bb3f8e5caa18f",
        "type": "trigger",
        "z": "59ce0e79908aaccb",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 180,
        "wires": [
            [
                "c9b125d6b0b76561"
            ]
        ]
    },
    {
        "id": "c9b125d6b0b76561",
        "type": "change",
        "z": "59ce0e79908aaccb",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "90985130996bd76b"
            ]
        ]
    },
    {
        "id": "3cdc20b9ea0357dc",
        "type": "link in",
        "z": "59ce0e79908aaccb",
        "name": "",
        "links": [
            "6684052e096bd183",
            "6f8cedb2e19a3a6b"
        ],
        "x": 95,
        "y": 300,
        "wires": [
            [
                "eb1e6d2f60ae8732",
                "1affc8e16150dcdf"
            ]
        ]
    },
    {
        "id": "ae234d228c91fe49",
        "type": "link out",
        "z": "59ce0e79908aaccb",
        "name": "",
        "mode": "link",
        "links": [
            "64d69dc2be5acfcd",
            "1302abea10dfd735"
        ],
        "x": 875,
        "y": 440,
        "wires": []
    },
    {
        "id": "64d69dc2be5acfcd",
        "type": "link in",
        "z": "59ce0e79908aaccb",
        "name": "",
        "links": [
            "ae234d228c91fe49"
        ],
        "x": 955,
        "y": 440,
        "wires": [
            [
                "ccb3f56da8eae4b3"
            ]
        ]
    },
    {
        "id": "f284caa3419e1adc",
        "type": "modbus-flex-write",
        "z": "59ce0e79908aaccb",
        "name": "SeaWrite",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "9726116e.3762e",
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1260,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ccb3f56da8eae4b3",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "function 1",
        "func": "let m1=msg.payload\nif(m1==\"stop\")\nreturn\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "02a1aaacbadb588e"
            ]
        ]
    },
    {
        "id": "ad8b60a8c924e938",
        "type": "catch",
        "z": "59ce0e79908aaccb",
        "name": "",
        "scope": [
            "f284caa3419e1adc",
            "e4ed121ca50dbaaa"
        ],
        "uncaught": false,
        "x": 410,
        "y": 40,
        "wires": [
            [
                "0124ea209b6f7166",
                "61b2195087643196"
            ]
        ]
    },
    {
        "id": "71f893013e9ba733",
        "type": "delay",
        "z": "59ce0e79908aaccb",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 540,
        "wires": [
            [
                "8393fb1ad7a7bc47"
            ]
        ]
    },
    {
        "id": "0124ea209b6f7166",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "Fault in Comm",
        "func": "let errCount = flow.get(\"comErrorCout\");\nerrCount ++\nflow.set(\"comErrorCout\", errCount);\n\nif (errCount<20){\n    return;\n}\n\nlet faults = global.get(\"System.Fault.Faults\");\nlet fault = { DateTime: new Date(), Type: \"Comm Error\", Code: 0, Message: \"\", Ack: false };\nfault.Type = \"Comm Error\";\nfault.Code = 3000;\nfault.Message = \"Communication lost\";\nfaults.push(fault);\n\n\n    \nmsg.topic = errCount\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 40,
        "wires": [
            [
                "1affc8e16150dcdf",
                "45da86ad14f927b1"
            ]
        ]
    },
    {
        "id": "5169e02e8a094bf5",
        "type": "trigger",
        "z": "59ce0e79908aaccb",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 540,
        "wires": [
            [
                "ff8ad1d882ac0356"
            ]
        ]
    },
    {
        "id": "ff8ad1d882ac0356",
        "type": "change",
        "z": "59ce0e79908aaccb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "e4ed121ca50dbaaa",
        "type": "modbus-flex-getter",
        "z": "59ce0e79908aaccb",
        "name": "SeaRead",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "9726116e.3762e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1280,
        "y": 120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b9dc696344de2c0",
        "type": "delay",
        "z": "59ce0e79908aaccb",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 340,
        "wires": [
            [
                "bc55e980a66de866"
            ]
        ]
    },
    {
        "id": "61b2195087643196",
        "type": "debug",
        "z": "59ce0e79908aaccb",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 40,
        "wires": []
    },
    {
        "id": "36640e72418d454a",
        "type": "modbus-flex-getter",
        "z": "59ce0e79908aaccb",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "d15028d86db4bd21",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1170,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "02a1aaacbadb588e",
        "type": "modbus-flex-write",
        "z": "59ce0e79908aaccb",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "d15028d86db4bd21",
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1230,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1affc8e16150dcdf",
        "type": "change",
        "z": "59ce0e79908aaccb",
        "name": "StopComm",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "1e8bb3f8e5caa18f"
            ]
        ]
    },
    {
        "id": "91b4529349b7a4fa",
        "type": "catch",
        "z": "59ce0e79908aaccb",
        "name": "",
        "scope": [
            "36640e72418d454a",
            "02a1aaacbadb588e"
        ],
        "uncaught": false,
        "x": 210,
        "y": 640,
        "wires": [
            [
                "4a5e02fde5fbbc58"
            ]
        ]
    },
    {
        "id": "4a5e02fde5fbbc58",
        "type": "function",
        "z": "59ce0e79908aaccb",
        "name": "Fault in Comm",
        "func": "let errCount = flow.get(\"comErrorCout\");\nerrCount ++\nflow.set(\"comErrorCout\", errCount);\n\nif (errCount<2){\n    return;\n}\n\nlet faults = global.get(\"System.Fault.Faults\");\nlet fault = { DateTime: new Date(), Type: \"Comm Error\", Code: 0, Message: \"\", Ack: false };\nfault.Type = \"Comm Error\";\nfault.Code = 3000;\nfault.Message = \"Communication lost\";\nfaults.push(fault);\n\n\n    \nmsg.topic = errCount\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 640,
        "wires": [
            [
                "eb1e6d2f60ae8732",
                "84c41953f6041908"
            ]
        ]
    },
    {
        "id": "84c41953f6041908",
        "type": "link out",
        "z": "59ce0e79908aaccb",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "89547142.02ff1"
        ],
        "x": 555,
        "y": 640,
        "wires": []
    },
    {
        "id": "45da86ad14f927b1",
        "type": "link out",
        "z": "59ce0e79908aaccb",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "89547142.02ff1"
        ],
        "x": 775,
        "y": 80,
        "wires": []
    },
    {
        "id": "a9e9d8fb6f058c13",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "",
        "func": "//let outputs = global.get(\"System.Output\"); \nlet outputs = msg.payload;\nlet output = []\nfor(let i=0; i<15; i++){\n    output[i]= outputs[i]\n}\nmsg.payload = { value: output, 'fc': 15, 'unitid': 247, 'address': 0 , 'quantity': 15 }\n//msg.payload = { value: [0,0,0,0,0,0,0,0], 'fc': 15, 'unitid': 247, 'address': 1 , 'quantity': 8 } \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 340,
        "wires": [
            [
                "eca306e50f0ef4fb"
            ]
        ]
    },
    {
        "id": "48f3de2f657dd747",
        "type": "rbe",
        "z": "f4743b656a3d24b5",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 890,
        "y": 340,
        "wires": [
            [
                "a9e9d8fb6f058c13"
            ]
        ]
    },
    {
        "id": "41b7d458f106e998",
        "type": "trigger",
        "z": "f4743b656a3d24b5",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-0.5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 670,
        "y": 660,
        "wires": [
            [
                "77bf5d8a712013d7"
            ]
        ]
    },
    {
        "id": "9850b9564e2e21e3",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "30a121bc4da178f3"
            ]
        ]
    },
    {
        "id": "77bf5d8a712013d7",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "",
        "func": "let currID = flow.get(\"curr_idw\");\nlet currCmd = flow.get(\"curr_cmd\");\nlet Value = 0;\nlet Reg =0;\nlet drives = global.get(\"System.Elements.Drives\")-1;\n//msg.reset = 0;\nlet nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true && index >= currID) {\n       return el\n    }\n    \n});\n\nif (nextEnabled === -1){\n    //msg.reset = 1;\n    msg.payload = \"stop\"\n    return msg;\n}\n\ncurrID = nextEnabled;\n\n\nlet driveId = global.get(`System.Drive[${currID}].ID`);\n\nswitch(currCmd){\n    case 0: \n        Value = 4111;\n        Reg = 8501;\n        break;\n    case 1:\n        Value = 0;\n        Reg = 8502;\n        break;\n    case 2:\n        Value = 6;\n        Reg = 8501;\n        break;\n    case 3:\n        Value = 15;\n        Reg = 8501;\n        break;\n}\n\ncurrCmd ++\nif(currCmd >3 ){\n    if(currID > drives ){\n       //msg.reset = 1;\n       msg.payload = \"stop\"\n       return msg;\n    }\n    else{\n        currID ++;  \n    }\n    flow.set(\"curr_idw\", currID);\n    currCmd = 0\n}\nflow.set(\"curr_cmd\", currCmd);\n\nmsg.payload = \n{ \n    value: Value, \n    'fc': 6, \n    'unitid': driveId, \n    'address': Reg , \n    'quantity': 1 \n    \n} \n//msg.topic =\"wait\"\n//msg.reset = 0;\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 380,
        "wires": [
            [
                "bdeb6a4c3b9c2583",
                "1cb0952336671887"
            ]
        ]
    },
    {
        "id": "9e1d69808720eecb",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "DrivesRead",
        "func": "let currID = flow.get(\"curr_id\");\nlet nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true && index >= currID) {\n       return el\n    }\n    \n});\n\nif (nextEnabled === -1){\n    nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true ) {\n       return el\n    }\n});\n}\n\n\n\n\n//let driveEn = global.get(`System.Drive[${currID}].Enabled`);\nlet drives = global.get(\"System.Elements.Drives\")-1;\nlet driveId = global.get(`System.Drive[${currID}].ID`);\n\nif(currID <10){\n    currID = nextEnabled;\n    msg.payload = {\n        value: msg.payload,\n        'fc': 3,\n        'unitid': driveId,\n        'address': 3202,\n        'quantity': 2\n    }\n}\nelse{\n    msg.payload = {\n        value: msg.payload,\n        'fc': 2,\n        'unitid': 247,\n        'address': 0,\n        'quantity': 8\n\n    }\n}\n\n\nif(currID >9 ){\n    \n        currID = 0 \n    \n   \n}\nelse{\n  currID ++;  \n}\nflow.set(\"curr_id\", currID);\nmsg.currID = currID;\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 200,
        "wires": [
            [
                "bf2c4153a5973e80",
                "519214167f4bf1ba"
            ]
        ]
    },
    {
        "id": "07f088a79bf47ae3",
        "type": "change",
        "z": "f4743b656a3d24b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1d9a7906327de9de",
        "type": "trigger",
        "z": "f4743b656a3d24b5",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "wait",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "81b025c8350527e4"
            ]
        ]
    },
    {
        "id": "81b025c8350527e4",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "",
        "func": "let index = global.get(\"System.Drive\").findIndex(function (el) {\n    return el.Enabled && el.Speed != el.RefSpeed;\n});\n\nif (index >= 0) {\n    let drv = global.get(`System.Drive[${index}]`);\n\n    msg.payload =\n    {\n        value: drv.Speed * 10,\n        'fc': 6,\n        'unitid': drv.ID,\n        'address': 8502,\n        'quantity': 1\n\n    }\n    drv.RefSpeed = drv.Speed;\n    global.set(`System.Drive[${index}]`, drv);\n\n    return msg;\n}\n\n        \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 440,
        "wires": [
            [
                "1cb0952336671887"
            ]
        ]
    },
    {
        "id": "30a121bc4da178f3",
        "type": "change",
        "z": "f4743b656a3d24b5",
        "name": "Starting",
        "rules": [
            {
                "t": "set",
                "p": "System.Mode.Starting",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "wait",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "1d9a7906327de9de",
                "72877f5a06b7495d",
                "5b1cd0188564cffb",
                "4b7fcfd680ce5d13",
                "dd8e16c450cd20e2",
                "58192aa0fb189884"
            ]
        ]
    },
    {
        "id": "dbf43e9bd703a9eb",
        "type": "link in",
        "z": "f4743b656a3d24b5",
        "name": "",
        "links": [
            "0695f11ff0574058"
        ],
        "x": 105,
        "y": 440,
        "wires": [
            [
                "30a121bc4da178f3"
            ]
        ]
    },
    {
        "id": "72877f5a06b7495d",
        "type": "trigger",
        "z": "f4743b656a3d24b5",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1.5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "be6328af4ac43fe9",
        "type": "trigger",
        "z": "f4743b656a3d24b5",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-0.5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 710,
        "y": 200,
        "wires": [
            [
                "9e1d69808720eecb"
            ]
        ]
    },
    {
        "id": "6c50f5eb0a191d55",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "Id247InputRead",
        "func": "\n\nmsg.payload = { \n    value: msg.payload, \n    'fc': 2, \n    'unitid': 247, \n    'address': 0 , \n    'quantity': 8 \n    \n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 140,
        "wires": [
            [
                "131c033662e1fdfc"
            ]
        ]
    },
    {
        "id": "f3476eebfd27702f",
        "type": "change",
        "z": "f4743b656a3d24b5",
        "name": "StopComm",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "41b7d458f106e998",
                "1d9a7906327de9de",
                "72877f5a06b7495d",
                "be6328af4ac43fe9",
                "5b1cd0188564cffb",
                "3ad27a0568cc30d5"
            ]
        ]
    },
    {
        "id": "edaa5412c55eecd0",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "Stop",
        "func": "if(msg.payload!=\"stop\"){\n    return\n}\nglobal.set(\"System.Mode.Starting\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 480,
        "wires": [
            [
                "41b7d458f106e998",
                "1d9a7906327de9de"
            ]
        ]
    },
    {
        "id": "bdeb6a4c3b9c2583",
        "type": "link out",
        "z": "f4743b656a3d24b5",
        "name": "",
        "mode": "link",
        "links": [
            "60eed53ed77d9330"
        ],
        "x": 895,
        "y": 400,
        "wires": []
    },
    {
        "id": "60eed53ed77d9330",
        "type": "link in",
        "z": "f4743b656a3d24b5",
        "name": "",
        "links": [
            "bdeb6a4c3b9c2583"
        ],
        "x": 225,
        "y": 440,
        "wires": [
            [
                "edaa5412c55eecd0"
            ]
        ]
    },
    {
        "id": "21b90fd138641ac2",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "f3476eebfd27702f"
            ]
        ]
    },
    {
        "id": "5b1cd0188564cffb",
        "type": "trigger",
        "z": "f4743b656a3d24b5",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "69e61cac565927a1"
            ]
        ]
    },
    {
        "id": "69e61cac565927a1",
        "type": "change",
        "z": "f4743b656a3d24b5",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "48f3de2f657dd747",
                "24809c188ae4738e"
            ]
        ]
    },
    {
        "id": "d51fe73ad352bdc7",
        "type": "link in",
        "z": "f4743b656a3d24b5",
        "name": "",
        "links": [
            "6684052e096bd183",
            "6f8cedb2e19a3a6b"
        ],
        "x": 165,
        "y": 240,
        "wires": [
            [
                "f3476eebfd27702f"
            ]
        ]
    },
    {
        "id": "1cb0952336671887",
        "type": "link out",
        "z": "f4743b656a3d24b5",
        "name": "",
        "mode": "link",
        "links": [
            "053737168cb89ed2",
            "1302abea10dfd735"
        ],
        "x": 975,
        "y": 420,
        "wires": []
    },
    {
        "id": "053737168cb89ed2",
        "type": "link in",
        "z": "f4743b656a3d24b5",
        "name": "",
        "links": [
            "1cb0952336671887"
        ],
        "x": 1045,
        "y": 420,
        "wires": [
            [
                "09a82babbf585ea5"
            ]
        ]
    },
    {
        "id": "be0a94a7ca510c19",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "72877f5a06b7495d"
            ]
        ]
    },
    {
        "id": "d1dc920d8808eae7",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 300,
        "wires": [
            [
                "5b1cd0188564cffb"
            ]
        ]
    },
    {
        "id": "eca306e50f0ef4fb",
        "type": "modbus-flex-write",
        "z": "f4743b656a3d24b5",
        "name": "SeaWrite",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "9726116e.3762e",
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1220,
        "y": 340,
        "wires": [
            [
                "92786d886846b35c"
            ],
            [
                "cc58c858e4da9d24"
            ]
        ]
    },
    {
        "id": "954062922b0f9d7e",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "be6328af4ac43fe9"
            ]
        ]
    },
    {
        "id": "c4b61a37c272c78d",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1cc9c6d27798430d",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "9e1d69808720eecb"
            ]
        ]
    },
    {
        "id": "ec4a46cbb4c69dcf",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 560,
        "wires": [
            [
                "77bf5d8a712013d7"
            ]
        ]
    },
    {
        "id": "d32e477534418e2e",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 520,
        "wires": [
            [
                "81b025c8350527e4"
            ]
        ]
    },
    {
        "id": "09a82babbf585ea5",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "function 2",
        "func": "let m1=msg.payload\nif(m1==\"stop\")\nreturn\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "eca306e50f0ef4fb"
            ]
        ]
    },
    {
        "id": "beaa9fe483df0c03",
        "type": "catch",
        "z": "f4743b656a3d24b5",
        "name": "",
        "scope": [
            "cc11480acc5c82a7",
            "eca306e50f0ef4fb"
        ],
        "uncaught": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "c8603a95f3b59706",
                "e6c2d765f4215d1a"
            ]
        ]
    },
    {
        "id": "127bc55c3a1a08c4",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 40,
        "wires": []
    },
    {
        "id": "4b7fcfd680ce5d13",
        "type": "delay",
        "z": "f4743b656a3d24b5",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 660,
        "wires": [
            [
                "41b7d458f106e998"
            ]
        ]
    },
    {
        "id": "dd8e16c450cd20e2",
        "type": "delay",
        "z": "f4743b656a3d24b5",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "be6328af4ac43fe9"
            ]
        ]
    },
    {
        "id": "3ad27a0568cc30d5",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "a3c11e91100ec252",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "72877f5a06b7495d",
                "dd8e16c450cd20e2"
            ]
        ]
    },
    {
        "id": "f199dee3dd323580",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "1d9a7906327de9de"
            ]
        ]
    },
    {
        "id": "c8603a95f3b59706",
        "type": "function",
        "z": "f4743b656a3d24b5",
        "name": "Fault in Comm",
        "func": "let errCount = flow.get(\"comErrorCout\");\nerrCount ++\nflow.set(\"comErrorCout\", errCount);\n\nif (errCount<10){\n    return;\n}\n\nlet faults = global.get(\"System.Fault.Faults\");\nlet fault = { DateTime: new Date(), Type: \"Comm Error\", Code: 0, Message: \"\", Ack: false };\nfault.Type = \"Comm Error\";\nfault.Code = 3000;\nfault.Message = \"Communication lost\";\nfaults.push(fault);\n\nglobal.set(\"System.Mode.Status\", 0); //System in fault\nglobal.set(\"System.Mode.Fault\", true);\nglobal.set(\"System.Fault.Faults\", faults);\nglobal.set(\"System.Fault.Stop\", true);\n    \nmsg.topic = errCount\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 40,
        "wires": [
            [
                "127bc55c3a1a08c4",
                "f3476eebfd27702f",
                "41a46f7f2af7e1d6"
            ]
        ]
    },
    {
        "id": "58192aa0fb189884",
        "type": "trigger",
        "z": "f4743b656a3d24b5",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 740,
        "wires": [
            [
                "584c4c4efa0a991e"
            ]
        ]
    },
    {
        "id": "584c4c4efa0a991e",
        "type": "change",
        "z": "f4743b656a3d24b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "41a46f7f2af7e1d6",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 80,
        "wires": []
    },
    {
        "id": "e6c2d765f4215d1a",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 40,
        "wires": []
    },
    {
        "id": "131c033662e1fdfc",
        "type": "modbus-flex-getter",
        "z": "f4743b656a3d24b5",
        "name": "SeaRead",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "9726116e.3762e",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "cc8f5aac2b7062a2"
            ],
            [
                "a74613c1169c5df8"
            ]
        ]
    },
    {
        "id": "24809c188ae4738e",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "3dab1fae8c37baf0",
        "type": "inject",
        "z": "f4743b656a3d24b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 40,
        "wires": [
            [
                "6c50f5eb0a191d55"
            ]
        ]
    },
    {
        "id": "cc8f5aac2b7062a2",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 140,
        "wires": []
    },
    {
        "id": "a74613c1169c5df8",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 180,
        "wires": []
    },
    {
        "id": "cc58c858e4da9d24",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 520,
        "wires": []
    },
    {
        "id": "92786d886846b35c",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 300,
        "wires": []
    },
    {
        "id": "bf2c4153a5973e80",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "519214167f4bf1ba",
        "type": "debug",
        "z": "f4743b656a3d24b5",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "currID",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 240,
        "wires": []
    },
    {
        "id": "94ca7bc7181fe023",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "func": "//let outputs = global.get(\"System.Output\"); \nlet outputs = msg.payload;\nlet output = []\nfor(let i=0; i<15; i++){\n    output[i]= outputs[i]\n}\nmsg.payload = { value: output, 'fc': 15, 'unitid': 247, 'address': 0 , 'quantity': 15 }\n//msg.payload = { value: [0,0,0,0,0,0,0,0], 'fc': 15, 'unitid': 247, 'address': 1 , 'quantity': 8 } \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 340,
        "wires": [
            [
                "2a798eb30f330828"
            ]
        ]
    },
    {
        "id": "25e8bdecda9689a5",
        "type": "rbe",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 870,
        "y": 340,
        "wires": [
            [
                "94ca7bc7181fe023"
            ]
        ]
    },
    {
        "id": "1e2c3561efd939a2",
        "type": "trigger",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-0.3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 670,
        "y": 660,
        "wires": [
            [
                "b519fedd5c37ab76"
            ]
        ]
    },
    {
        "id": "e9fbb7a6f41f732c",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "d7464bc2a56dc91c"
            ]
        ]
    },
    {
        "id": "b519fedd5c37ab76",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "func": "let currID = flow.get(\"curr_idw\");\nlet currCmd = flow.get(\"curr_cmd\");\nlet Value = 0;\nlet Reg =0;\nlet drives = global.get(\"System.Elements.Drives\")-1;\n//msg.reset = 0;\nlet nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true && index >= currID) {\n       return el\n    }\n    \n});\n\nif (nextEnabled === -1){\n    //msg.reset = 1;\n    msg.payload = \"stop\"\n    return msg;\n}\n\ncurrID = nextEnabled;\n\n\nlet driveId = global.get(`System.Drive[${currID}].ID`);\n\nswitch(currCmd){\n    case 0: \n        Value = 4111;\n        Reg = 8501;\n        break;\n    case 1:\n        Value = 0;\n        Reg = 8502;\n        break;\n    case 2:\n        Value = 6;\n        Reg = 8501;\n        break;\n    case 3:\n        Value = 15;\n        Reg = 8501;\n        break;\n}\n\ncurrCmd ++\nif(currCmd >3 ){\n    if(currID > drives ){\n       //msg.reset = 1;\n       msg.payload = \"stop\"\n       return msg;\n    }\n    else{\n        currID ++;  \n    }\n    flow.set(\"curr_idw\", currID);\n    currCmd = 0\n}\nflow.set(\"curr_cmd\", currCmd);\n\nmsg.payload = \n{ \n    value: Value, \n    'fc': 6, \n    'unitid': driveId, \n    'address': Reg , \n    'quantity': 1 \n    \n} \n//msg.topic =\"wait\"\n//msg.reset = 0;\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 380,
        "wires": [
            [
                "0f7280bc8d2ce5b5",
                "a25aa10f8c0421dd"
            ]
        ]
    },
    {
        "id": "de0d7877cf690388",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "DrivesRead",
        "func": "let currID = flow.get(\"curr_id\");\nlet nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true && index >= currID) {\n       return el\n    }\n    \n});\n\nif (nextEnabled === -1){\n    nextEnabled = global.get(\"System.Drive\").findIndex (function (el, index) {\n    if(el.Enabled === true ) {\n       return el\n    }\n});\n}\n\n\n\n\n//let driveEn = global.get(`System.Drive[${currID}].Enabled`);\nlet drives = global.get(\"System.Elements.Drives\")-1;\nlet driveId = global.get(`System.Drive[${currID}].ID`);\n\nif(currID <10){\n    currID = nextEnabled;\n    msg.payload = {\n        value: msg.payload,\n        'fc': 3,\n        'unitid': driveId,\n        'address': 3202,\n        'quantity': 2\n    }\n}\n\n\n\nif(currID >8 ){\n    \n        currID = 0 \n    \n   \n}\nelse{\n  currID ++;  \n}\nflow.set(\"curr_id\", currID);\nmsg.currID = currID;\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 200,
        "wires": [
            [
                "4fb9f01997762265",
                "6bb0d69abf0828b7",
                "15499f5e9ecb37cb"
            ]
        ]
    },
    {
        "id": "5ba53cd5ece24f96",
        "type": "change",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "System.Input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "35c52e43d5bc6111",
        "type": "trigger",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "wait",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "01b1aef406a1db0b"
            ]
        ]
    },
    {
        "id": "01b1aef406a1db0b",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "func": "let currID = flow.get(\"curr_idw\");\nlet nextEnabled = global.get(\"System.Drive\").findIndex(function (el, index) {\n    if (el.Enabled === true && index >= currID) {\n        return el\n    }\n\n});\n\nif (nextEnabled === -1) {\n    nextEnabled = global.get(\"System.Drive\").findIndex(function (el, index) {\n        if (el.Enabled === true) {\n            return el\n        }\n    });\n    return\n}\n\ncurrID = nextEnabled;\nlet drv = global.get(`System.Drive[${currID}]`);\nmsg.payload =\n{\n    value: drv.Speed * 10,\n    'fc': 6,\n    'unitid': drv.ID,\n    'address': 8502,\n    'quantity': 1\n\n} \n   \nif (currID > 9) {\n\n    currID = 0\n\n\n}\nelse {\n    currID++;\n}\nflow.set(\"curr_idw\", currID);\nmsg.currID = currID;\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 440,
        "wires": [
            [
                "a25aa10f8c0421dd"
            ]
        ]
    },
    {
        "id": "d7464bc2a56dc91c",
        "type": "change",
        "z": "33cae0b5c30bf9f1",
        "name": "Starting",
        "rules": [
            {
                "t": "set",
                "p": "System.Mode.Starting",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "wait",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 380,
        "wires": [
            [
                "35c52e43d5bc6111",
                "e447b4f38a8a64a2",
                "9a8622e91f73b837",
                "f60ae2cb39ea0eb5",
                "5b631baeb9b50962",
                "7c07072c870ea9af"
            ]
        ]
    },
    {
        "id": "35f5ea267ed2cfda",
        "type": "link in",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "links": [
            "0695f11ff0574058"
        ],
        "x": 105,
        "y": 440,
        "wires": [
            [
                "d7464bc2a56dc91c"
            ]
        ]
    },
    {
        "id": "e447b4f38a8a64a2",
        "type": "trigger",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1.5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "569b74b6121252b8"
            ]
        ]
    },
    {
        "id": "e2ccf7a143a35a39",
        "type": "trigger",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 700,
        "y": 200,
        "wires": [
            [
                "de0d7877cf690388"
            ]
        ]
    },
    {
        "id": "569b74b6121252b8",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "Id247InputRead",
        "func": "\n\nmsg.payload = { \n    value: msg.payload, \n    'fc': 2, \n    'unitid': 247, \n    'address': 0 , \n    'quantity': 8 \n    \n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bc18bd4ec68e6744",
        "type": "change",
        "z": "33cae0b5c30bf9f1",
        "name": "StopComm",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "curr_cmd",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_id",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "curr_idw",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "1e2c3561efd939a2",
                "35c52e43d5bc6111",
                "e447b4f38a8a64a2",
                "e2ccf7a143a35a39",
                "9a8622e91f73b837",
                "6706acd9f65b509d"
            ]
        ]
    },
    {
        "id": "f8bb65196838f8ae",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "Stop",
        "func": "if(msg.payload!=\"stop\"){\n    return\n}\nglobal.set(\"System.Mode.Starting\",false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 480,
        "wires": [
            [
                "1e2c3561efd939a2",
                "35c52e43d5bc6111"
            ]
        ]
    },
    {
        "id": "0f7280bc8d2ce5b5",
        "type": "link out",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "mode": "link",
        "links": [
            "a51cd17a23b15e11"
        ],
        "x": 895,
        "y": 400,
        "wires": []
    },
    {
        "id": "a51cd17a23b15e11",
        "type": "link in",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "links": [
            "0f7280bc8d2ce5b5"
        ],
        "x": 225,
        "y": 440,
        "wires": [
            [
                "f8bb65196838f8ae"
            ]
        ]
    },
    {
        "id": "5dfc1dfc66e3b824",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "bc18bd4ec68e6744"
            ]
        ]
    },
    {
        "id": "9a8622e91f73b837",
        "type": "trigger",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "80974743db710d09"
            ]
        ]
    },
    {
        "id": "80974743db710d09",
        "type": "change",
        "z": "33cae0b5c30bf9f1",
        "name": "Output",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "System.Output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "25e8bdecda9689a5",
                "4a50979ea3054229"
            ]
        ]
    },
    {
        "id": "6adfaa62cb6efc1d",
        "type": "link in",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "links": [
            "6684052e096bd183",
            "6f8cedb2e19a3a6b"
        ],
        "x": 165,
        "y": 240,
        "wires": [
            [
                "bc18bd4ec68e6744"
            ]
        ]
    },
    {
        "id": "a25aa10f8c0421dd",
        "type": "link out",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "mode": "link",
        "links": [
            "1e4a3cd6c5bcdd99",
            "1302abea10dfd735"
        ],
        "x": 975,
        "y": 420,
        "wires": []
    },
    {
        "id": "1e4a3cd6c5bcdd99",
        "type": "link in",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "links": [
            "a25aa10f8c0421dd"
        ],
        "x": 1045,
        "y": 420,
        "wires": [
            [
                "0288ecb98fccafe5"
            ]
        ]
    },
    {
        "id": "4696a82ed0c9ba85",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "e447b4f38a8a64a2"
            ]
        ]
    },
    {
        "id": "29c9f120c44c21d8",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 300,
        "wires": [
            [
                "9a8622e91f73b837"
            ]
        ]
    },
    {
        "id": "2a798eb30f330828",
        "type": "modbus-flex-write",
        "z": "33cae0b5c30bf9f1",
        "name": "SeaWrite",
        "showStatusActivities": true,
        "showErrors": true,
        "server": "9726116e.3762e",
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1220,
        "y": 340,
        "wires": [
            [
                "bc28e8c34cb4757c"
            ],
            [
                "4b8983d7375ac40d"
            ]
        ]
    },
    {
        "id": "fed04efe99bdec15",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "e2ccf7a143a35a39"
            ]
        ]
    },
    {
        "id": "5d824ed85c6360ad",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6c51850da2328a0c",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "de0d7877cf690388"
            ]
        ]
    },
    {
        "id": "7ad8a70b9264168f",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 560,
        "wires": [
            [
                "b519fedd5c37ab76"
            ]
        ]
    },
    {
        "id": "42d1c250267b6b2f",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 520,
        "wires": [
            [
                "01b1aef406a1db0b"
            ]
        ]
    },
    {
        "id": "0288ecb98fccafe5",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "function 3",
        "func": "let m1=msg.payload\nif(m1==\"stop\")\nreturn\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "2a798eb30f330828"
            ]
        ]
    },
    {
        "id": "4d73a8cf9502e7f3",
        "type": "catch",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "scope": [],
        "uncaught": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "7a93c4046052a8fd",
                "c35ee2f2c8f4ead4"
            ]
        ]
    },
    {
        "id": "2cf63632f6487190",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 40,
        "wires": []
    },
    {
        "id": "f60ae2cb39ea0eb5",
        "type": "delay",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 660,
        "wires": [
            [
                "1e2c3561efd939a2"
            ]
        ]
    },
    {
        "id": "5b631baeb9b50962",
        "type": "delay",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "e2ccf7a143a35a39"
            ]
        ]
    },
    {
        "id": "6706acd9f65b509d",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "c9f7509dbb7b22a6",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "e447b4f38a8a64a2",
                "5b631baeb9b50962"
            ]
        ]
    },
    {
        "id": "73badf70338dc69b",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "35c52e43d5bc6111"
            ]
        ]
    },
    {
        "id": "7a93c4046052a8fd",
        "type": "function",
        "z": "33cae0b5c30bf9f1",
        "name": "Fault in Comm",
        "func": "let errCount = flow.get(\"comErrorCout\");\nerrCount ++\nflow.set(\"comErrorCout\", errCount);\n\nif (errCount<10){\n    return;\n}\n\nlet faults = global.get(\"System.Fault.Faults\");\nlet fault = { DateTime: new Date(), Type: \"Comm Error\", Code: 0, Message: \"\", Ack: false };\nfault.Type = \"Comm Error\";\nfault.Code = 3000;\nfault.Message = \"Communication lost\";\nfaults.push(fault);\n\nglobal.set(\"System.Mode.Status\", 0); //System in fault\nglobal.set(\"System.Mode.Fault\", true);\nglobal.set(\"System.Fault.Faults\", faults);\nglobal.set(\"System.Fault.Stop\", true);\n    \nmsg.topic = errCount\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 40,
        "wires": [
            [
                "2cf63632f6487190",
                "bc18bd4ec68e6744",
                "c67e335b57bec415"
            ]
        ]
    },
    {
        "id": "7c07072c870ea9af",
        "type": "trigger",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 740,
        "wires": [
            [
                "ee0edaa92f0b0da9"
            ]
        ]
    },
    {
        "id": "ee0edaa92f0b0da9",
        "type": "change",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "comErrorCout",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c67e335b57bec415",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 80,
        "wires": []
    },
    {
        "id": "c35ee2f2c8f4ead4",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 40,
        "wires": []
    },
    {
        "id": "4fb9f01997762265",
        "type": "modbus-flex-getter",
        "z": "33cae0b5c30bf9f1",
        "name": "SeaRead",
        "showStatusActivities": true,
        "showErrors": true,
        "logIOActivities": false,
        "server": "7ed5de59.b8cb4",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "102e0b11ca4ffead"
            ],
            [
                "1ffaa8bf2976a65b"
            ]
        ]
    },
    {
        "id": "4a50979ea3054229",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "39e177f5384abfd6",
        "type": "inject",
        "z": "33cae0b5c30bf9f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 40,
        "wires": [
            [
                "569b74b6121252b8"
            ]
        ]
    },
    {
        "id": "102e0b11ca4ffead",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 140,
        "wires": []
    },
    {
        "id": "1ffaa8bf2976a65b",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 180,
        "wires": []
    },
    {
        "id": "4b8983d7375ac40d",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 520,
        "wires": []
    },
    {
        "id": "bc28e8c34cb4757c",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 300,
        "wires": []
    },
    {
        "id": "6bb0d69abf0828b7",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "15499f5e9ecb37cb",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "currID",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 240,
        "wires": []
    },
    {
        "id": "f42a0e70cb48e0eb",
        "type": "debug",
        "z": "33cae0b5c30bf9f1",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 240,
        "wires": []
    }
]